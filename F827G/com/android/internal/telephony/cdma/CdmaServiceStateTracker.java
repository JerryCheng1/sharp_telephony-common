package com.android.internal.telephony.cdma;

import android.app.AlarmManager;
import android.content.ContentResolver;
import android.content.Intent;
import android.content.res.Resources;
import android.database.ContentObserver;
import android.os.AsyncResult;
import android.os.Build;
import android.os.Handler;
import android.os.Message;
import android.os.PowerManager;
import android.os.Registrant;
import android.os.RegistrantList;
import android.os.SystemClock;
import android.os.SystemProperties;
import android.os.UserHandle;
import android.provider.Settings;
import android.provider.Telephony;
import android.telephony.CellInfo;
import android.telephony.CellInfoCdma;
import android.telephony.Rlog;
import android.telephony.ServiceState;
import android.telephony.SignalStrength;
import android.telephony.SubscriptionManager;
import android.telephony.TelephonyManager;
import android.telephony.cdma.CdmaCellLocation;
import android.text.TextUtils;
import android.util.EventLog;
import android.util.TimeUtils;
import com.android.internal.telephony.CommandException;
import com.android.internal.telephony.CommandsInterface;
import com.android.internal.telephony.EventLogTags;
import com.android.internal.telephony.HbpcdUtils;
import com.android.internal.telephony.MccTable;
import com.android.internal.telephony.Phone;
import com.android.internal.telephony.PhoneFactory;
import com.android.internal.telephony.RadioNVItems;
import com.android.internal.telephony.ServiceStateTracker;
import com.android.internal.telephony.SmsHeader;
import com.android.internal.telephony.gsm.CallFailCause;
import com.android.internal.telephony.uicc.IccRecords;
import com.android.internal.telephony.uicc.RuimRecords;
import com.android.internal.telephony.uicc.UiccCardApplication;
import java.util.Arrays;
import java.util.Date;
import java.util.TimeZone;
import jp.co.sharp.telephony.OemCdmaTelephonyManager;

/* loaded from: C:\Users\SampP\Desktop\oat2dex-python\boot.oat.0x1348340.odex */
public class CdmaServiceStateTracker extends ServiceStateTracker {
    protected static final String DEFAULT_MNC = "00";
    protected static final String INVALID_MCC = "000";
    static final String LOG_TAG = "CdmaSST";
    private static final int MS_PER_HOUR = 3600000;
    private static final int NITZ_UPDATE_DIFF_DEFAULT = 2000;
    private static final int NITZ_UPDATE_SPACING_DEFAULT = 600000;
    private static final String UNACTIVATED_MIN2_VALUE = "000000";
    private static final String UNACTIVATED_MIN_VALUE = "1111110111";
    private static final String WAKELOCK_TAG = "ServiceStateTracker";
    private ContentObserver mAutoTimeObserver;
    private ContentObserver mAutoTimeZoneObserver;
    protected RegistrantList mCdmaForSubscriptionInfoReadyRegistrants;
    private boolean mCdmaRoaming;
    private CdmaSubscriptionSourceManager mCdmaSSM;
    CdmaCellLocation mCellLoc;
    private ContentResolver mCr;
    protected String mCurPlmn;
    private String mCurrentCarrier;
    int mCurrentOtaspMode;
    protected boolean mDataRoaming;
    private int mDefaultRoamingIndicator;
    protected boolean mGotCountryCode;
    protected HbpcdUtils mHbpcdUtils;
    protected int[] mHomeNetworkId;
    protected int[] mHomeSystemId;
    private boolean mIsEriTextLoaded;
    private boolean mIsInPrl;
    protected boolean mIsMinInfoReady;
    protected boolean mIsSubscriptionFromRuim;
    protected String mMdn;
    protected String mMin;
    protected boolean mNeedFixZone;
    CdmaCellLocation mNewCellLoc;
    private int mNitzUpdateDiff;
    private int mNitzUpdateSpacing;
    CDMAPhone mPhone;
    protected String mPrlVersion;
    private String mRegistrationDeniedReason;
    protected int mRegistrationState;
    private int mRoamingIndicator;
    long mSavedAtTime;
    long mSavedTime;
    String mSavedTimeZone;
    private PowerManager.WakeLock mWakeLock;
    private boolean mZoneDst;
    private int mZoneOffset;
    private long mZoneTime;

    /*  JADX ERROR: Failed to decode insn: 0x0002: UNKNOWN(0x20E9), method: com.android.internal.telephony.cdma.CdmaServiceStateTracker.dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[]):void
        jadx.core.utils.exceptions.DecodeException: Unknown instruction: '0x0002: UNKNOWN(0x20E9)'
        	at jadx.core.dex.instructions.InsnDecoder.decode(InsnDecoder.java:494)
        	at jadx.core.dex.instructions.InsnDecoder.lambda$process$0(InsnDecoder.java:50)
        	at jadx.plugins.input.dex.sections.DexCodeReader.visitInstructions(DexCodeReader.java:85)
        	at jadx.core.dex.instructions.InsnDecoder.process(InsnDecoder.java:45)
        	at jadx.core.dex.nodes.MethodNode.load(MethodNode.java:147)
        	at jadx.core.dex.nodes.ClassNode.load(ClassNode.java:365)
        	at jadx.core.ProcessClass.process(ProcessClass.java:57)
        	at jadx.core.ProcessClass.generateCode(ProcessClass.java:93)
        	at jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:356)
        	at jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:302)
        */
    /*  JADX ERROR: Failed to decode insn: 0x0008: UNKNOWN(0x10E9), method: com.android.internal.telephony.cdma.CdmaServiceStateTracker.dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[]):void
        jadx.core.utils.exceptions.DecodeException: Unknown instruction: '0x0008: UNKNOWN(0x10E9)'
        	at jadx.core.dex.instructions.InsnDecoder.decode(InsnDecoder.java:494)
        	at jadx.core.dex.instructions.InsnDecoder.lambda$process$0(InsnDecoder.java:50)
        	at jadx.plugins.input.dex.sections.DexCodeReader.visitInstructions(DexCodeReader.java:85)
        	at jadx.core.dex.instructions.InsnDecoder.process(InsnDecoder.java:45)
        	at jadx.core.dex.nodes.MethodNode.load(MethodNode.java:147)
        	at jadx.core.dex.nodes.ClassNode.load(ClassNode.java:365)
        	at jadx.core.ProcessClass.process(ProcessClass.java:57)
        	at jadx.core.ProcessClass.generateCode(ProcessClass.java:93)
        	at jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:356)
        	at jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:302)
        */
    /*  JADX ERROR: Failed to decode insn: 0x0012: UNKNOWN(0x20E9), method: com.android.internal.telephony.cdma.CdmaServiceStateTracker.dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[]):void
        jadx.core.utils.exceptions.DecodeException: Unknown instruction: '0x0012: UNKNOWN(0x20E9)'
        	at jadx.core.dex.instructions.InsnDecoder.decode(InsnDecoder.java:494)
        	at jadx.core.dex.instructions.InsnDecoder.lambda$process$0(InsnDecoder.java:50)
        	at jadx.plugins.input.dex.sections.DexCodeReader.visitInstructions(DexCodeReader.java:85)
        	at jadx.core.dex.instructions.InsnDecoder.process(InsnDecoder.java:45)
        	at jadx.core.dex.nodes.MethodNode.load(MethodNode.java:147)
        	at jadx.core.dex.nodes.ClassNode.load(ClassNode.java:365)
        	at jadx.core.ProcessClass.process(ProcessClass.java:57)
        	at jadx.core.ProcessClass.generateCode(ProcessClass.java:93)
        	at jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:356)
        	at jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:302)
        */
    /*  JADX ERROR: Failed to decode insn: 0x0016: UNKNOWN(0x41E5), method: com.android.internal.telephony.cdma.CdmaServiceStateTracker.dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[]):void
        jadx.core.utils.exceptions.DecodeException: Unknown instruction: '0x0016: UNKNOWN(0x41E5)'
        	at jadx.core.dex.instructions.InsnDecoder.decode(InsnDecoder.java:494)
        	at jadx.core.dex.instructions.InsnDecoder.lambda$process$0(InsnDecoder.java:50)
        	at jadx.plugins.input.dex.sections.DexCodeReader.visitInstructions(DexCodeReader.java:85)
        	at jadx.core.dex.instructions.InsnDecoder.process(InsnDecoder.java:45)
        	at jadx.core.dex.nodes.MethodNode.load(MethodNode.java:147)
        	at jadx.core.dex.nodes.ClassNode.load(ClassNode.java:365)
        	at jadx.core.ProcessClass.process(ProcessClass.java:57)
        	at jadx.core.ProcessClass.generateCode(ProcessClass.java:93)
        	at jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:356)
        	at jadx.core.dex.nodes.ClassNode.decompile(ClassNode.java:302)
        */
    @Override // com.android.internal.telephony.ServiceStateTracker
    public void dump(java.io.FileDescriptor r5, java.io.PrintWriter r6, java.lang.String[] r7) {
        /*
            r4 = this;
            java.lang.String r0 = "CdmaServiceStateTracker extends:"
            // decode failed: Unknown instruction: '0x0002: UNKNOWN(0x20E9)'
            int r0 = (r6 > r0 ? 1 : (r6 == r0 ? 0 : -1))
            super.dump(r5, r6, r7)
            // decode failed: Unknown instruction: '0x0008: UNKNOWN(0x10E9)'
            r0 = 6
            java.lang.StringBuilder r0 = new java.lang.StringBuilder
            r0.<init>()
            java.lang.String r1 = " mPhone="
            // decode failed: Unknown instruction: '0x0012: UNKNOWN(0x20E9)'
            if (r0 >= 0) goto L_0x0023
            r0 = move-result
            // decode failed: Unknown instruction: '0x0016: UNKNOWN(0x41E5)'
            switch-data {1048634->0x10e9000c, 1048635->0x0007, 1048636->0x20e9000c, 1048637->0x60031, 1048638->0x3ba0022, 1048639->0x2a351070, 1048640->0x11a0000, 1048641->0x20e902b9, 1048642->0x10003b, 1048643->0x41e5000c, 1048644->0x20e9006c, 1048645->0x10003a, 1048646->0x10e9000c, 1048647->0x0007, 1048648->0x20e9000c, 1048649->0x60031, 1048650->0x3ba0022, 1048651->0x2a351070, 1048652->0x11a0000, 1048653->0x20e90276, 1048654->0x10003b, 1048655->0x41e5000c, 1048656->0x20e9004c, 1048657->0x10003a, 1048658->0x10e9000c, 1048659->0x0007, 1048660->0x20e9000c, 1048661->0x60031, 1048662->0x3ba0022, 1048663->0x2a351070, 1048664->0x11a0000, 1048665->0x20e901e6, 1048666->0x10003b, 1048667->0x41e5000c, 1048668->0x20e900d8, 1048669->0x10003a, 1048670->0x10e9000c, 1048671->0x0007, 1048672->0x20e9000c, 1048673->0x60031, 1048674->0x3ba0022, 1048675->0x2a351070, 1048676->0x11a0000, 1048677->0x20e90273, 1048678->0x10003b, 1048679->0x41e5000c, 1048680->0x20e900fc, 1048681->0x10003a, 1048682->0x10e9000c, 1048683->0x0007, 1048684->0x20e9000c, 1048685->0x60031, 1048686->0x3ba0022, 1048687->0x2a351070, 1048688->0x11a0000, 1048689->0x20e901f7, 1048690->0x10003b, 1048691->0x41e3000c, 1048692->0x20e90114, 1048693->0x100036, 1048694->0x10e9000c, 1048695->0x0007, 1048696->0x20e9000c, 1048697->0x60031, 1048698->0x3ba0022, 1048699->0x2a351070, 1048700->0x11a0000, 1048701->0x20e902b6, 1048702->0x10003b, 1048703->0x41e3000c, 1048704->0x20e90140, 1048705->0x100036, 1048706->0x10e9000c, 1048707->0x0007, 1048708->0x20e9000c, 1048709->0x60031, 1048710->0x3ba0022, 1048711->0x2a351070, 1048712->0x11a0000, 1048713->0x20e90246, 1048714->0x10003b, 1048715->0x4155000c, 1048716->0x20e90cd4, 1048717->0x10003d, 1048718->0x10e9000c, 1048719->0x0007, 1048720->0x20e9000c, 1048721->0x60031, 1048722->0x3ba0022, 1048723->0x2a351070, 1048724->0x11a0000, 1048725->0x20e9020b, 1048726->0x10003b, 1048727->0x41e3000c, 1048728->0x20e90130, 1048729->0x100036, 1048730->0x10e9000c, 1048731->0x0007, 1048732->0x20e9000c, 1048733->0x60031, 1048734->0x3ba0022, 1048735->0x2a351070, 1048736->0x11a0000, 1048737->0x20e902a9, 1048738->0x10003b, 1048739->0x41e3000c, 1048740->0x20e9013c, 1048741->0x100036, 1048742->0x10e9000c, 1048743->0x0007, 1048744->0x20e9000c, 1048745->0x60031, 1048746->0x3ba0022, 1048747->0x2a351070, 1048748->0x11a0000, 1048749->0x20e9026b, 1048750->0x10003b, 1048751->0x4155000c, 1048752->0x20e90cda, 1048753->0x10003d, 1048754->0x10e9000c, 1048755->0x0007, 1048756->0x20e9000c, 1048757->0x60031, 1048758->0x1310e9, 1048759->0x220006, 1048760->0x107003ba, 1048761->0x2a35, 1048762->0x2ec011a, 1048763->0x3b20e9, 1048764->0xc0010, 1048765->0x14441e3, 1048766->0x3620e9, 1048767->0xc0010, 1048768->0x710e9, 1048769->0xc0000, 1048770->0x3120e9, 1048771->0x220006, 1048772->0x107003ba, 1048773->0x2a35, 1048774->0x2eb011a, 1048775->0x3b20e9, 1048776->0xc0010, 1048777->0xcf14155, 1048778->0x3d20e9, 1048779->0xc0010, 1048780->0x710e9, 1048781->0xc0000, 1048782->0x3120e9, 1048783->0x220006, 1048784->0x107003ba, 1048785->0x2a35, 1048786->0x2ed011a, 1048787->0x3b20e9, 1048788->0xc0010, 1048789->0x12842e4, 1048790->0x3730e9, 1048791->0xc0320, 1048792->0x710e9, 1048793->0xc0000, 1048794->0x3120e9, 1048795->0x220006, 1048796->0x107003ba, 1048797->0x2a35, 1048798->0x22a011a, 1048799->0x3b20e9, 1048800->0xc0010, 1048801->0xccd4155, 1048802->0x3d20e9, 1048803->0xc0010, 1048804->0x710e9, 1048805->0xc0000, 1048806->0x3120e9, 1048807->0x220006, 1048808->0x107003ba, 1048809->0x2a35, 1048810->0x2bd011a, 1048811->0x3b20e9, 1048812->0xc0010, 1048813->0x10c41e5, 1048814->0x3b20e9, 1048815->0xc0010, 1048816->0x710e9, 1048817->0xc0000, 1048818->0x3120e9, 1048819->0x220006, 1048820->0x107003ba, 1048821->0x2a35, 1048822->0x2bc011a, 1048823->0x3b20e9, 1048824->0xc0010, 1048825->0x12042e4, 1048826->0x3730e9, 1048827->0xc0320, 1048828->0x710e9, 1048829->0xc0000, 1048830->0x3120e9, 1048831->0x220006, 1048832->0x107003ba, 1048833->0x2a35, 1048834->0x2bb011a, 1048835->0x3b20e9, 1048836->0xc0010, 1048837->0x11842e4, 1048838->0x3730e9, 1048839->0xc0320, 1048840->0x710e9, 1048841->0xc0000, 1048842->0x3120e9, 1048843->0x220006, 1048844->0x107003ba, 1048845->0x2a35, 1048846->0x2e8011a, 1048847->0x3b20e9, 1048848->0xc0010, 1048849->0x11041e5, 1048850->0x3a20e9, 1048851->0xc0010, 1048852->0x710e9, 1048853->0xc0000, 1048854->0x3120e9, 1048855->0x220006, 1048856->0x107003ba, 1048857->0x2a35, 1048858->0x1f1011a, 1048859->0x3b20e9, 1048860->0xc0010, 1048861->0xe041e5, 1048862->0x3b20e9, 1048863->0xc0010, 1048864->0x710e9, 1048865->0xc0000, 1048866->0x3120e9, 1048867->0x220006, 1048868->0x107003ba, 1048869->0x2a35, 1048870->0x263011a, 1048871->0x3b20e9, 1048872->0xc0010, 1048873->0xf441e5, 1048874->0x3b20e9, 1048875->0xc0010, 1048876->0x710e9, 1048877->0xc0000, 1048878->0x3120e9, 1048879->0x220006, 1048880->0x107003ba, 1048881->0x2a35, 1048882->0x230011a, 1048883->0x3b20e9, 1048884->0xc0010, 1048885->0xf041e5, 1048886->0x3a20e9, 1048887->0xc0010, 1048888->0x710e9, 1048889->0xc0000, 1048890->0x3120e9, 1048891->0x220006, 1048892->0x107003ba, 1048893->0x2a35, 1048894->0x22f011a, 1048895->0x3b20e9, 1048896->0xc0010, 1048897->0xec41e5, 1048898->0x3a20e9, 1048899->0xc0010, 1048900->0x710e9, 1048901->0xc0000, 1048902->0x3120e9, 1048903->0x220006, 1048904->0x107003ba, 1048905->0x2a35, 1048906->0x266011a, 1048907->0x3b20e9, 1048908->0xc0010, 1048909->0xf841e5, 1048910->0x3b20e9, 1048911->0xc0010, 1048912->0x710e9, 1048913->0xc0000, 1048914->0x3120e9, 1048915->0x220006, 1048916->0x107003ba, 1048917->0x2a35, 1048918->0x297011a, 1048919->0x3b20e9, 1048920->0xc0010, 1048921->0x10441e5, 1048922->0x3b20e9, 1048923->0xc0010, 1048924->0x710e9, 1048925->0xc0000, 1048926->0x3120e9, 1048927->0x220006, 1048928->0x107003ba, 1048929->0x2a35, 1048930->0x247011a, 1048931->0x3b20e9, 1048932->0xc0010, 1048933->0xcd54155, 1048934->0x3d20e9, 1048935->0xc0010, 1048936->0x710e9, 1048937->0xc0000, 1048938->0x3120e9, 1048939->0x220006, 1048940->0x107003ba, 1048941->0x2a35, 1048942->0x244011a, 1048943->0x3b20e9, 1048944->0xc0010, 1048945->0xcd34155, 1048946->0x3d20e9, 1048947->0xc0010, 1048948->0x710e9, 1048949->0xc0000, 1048950->0x3120e9, 1048951->0x220006, 1048952->0x107003ba, 1048953->0x2a35, 1048954->0x24b011a, 1048955->0x3b20e9, 1048956->0xc0010, 1048957->0xcd64155, 1048958->0x3d20e9, 1048959->0xc0010, 1048960->0x710e9, 1048961->0xc0000, 1048962->0x3120e9, 1048963->0x220006, 1048964->0x107003ba, 1048965->0x2a35, 1048966->0x1e2011a, 1048967->0x3b20e9, 1048968->0xc0010, 1048969->0xd441e5, 1048970->0x3a20e9, 1048971->0xc0010, 1048972->0x710e9, 1048973->0xc0000, 1048974->0x3120e9, 1048975->0x220006, 1048976->0x107003ba, 1048977->0x2a35, 1048978->0x2a8011a, 1048979->0x3b20e9, 1048980->0xc0010, 1048981->0x10841e5, 1048982->0x3b20e9, 1048983->0xc0010, 1048984->0x710e9, 1048985->0xc0000, 1048986->0x3120e9, 1048987->0x220006, 1048988->0x107003ba, 1048989->0x2a35, 1048990->0x1f6011a, 1048991->0x3b20e9, 1048992->0xc0010, 1048993->0xe441e5, 1048994->0x3b20e9, 1048995->0xc0010, 1048996->0x710e9, 1048997->0xc0000, 1048998->0x3120e9, 1048999->0x10e90006, 1049000->0x60013, 1049001->0x2000e, 1049002->0x20001, 1049003->?, 1049004->0x6001c, 1049005->0x1a0000, 1049006->0x206e0a1c, 1049007->0x11645, 1049008->0xe000e, 1049009->0x50002, 1049010->?, 1049011->0x14c001c, 1049012->0x6120000, 1049013->0x45ec081a, 1049014->0x1dc1071, 1049015->0x70c0008, 1049016->0x3ba0822, 1049017->0x2a351070, 1049018->0x91a0008, 1049019->0x206e3012, 1049020->0x982a3e, 1049021->0x206e080c, 1049022->0x782a3e, 1049023->0x91a080c, 1049024->0x206e042a, 1049025->0x982a3e, 1049026->?, 1049027->0x206e0cf2, 1049028->0x982a3a, 1049029->0x91a080c, 1049030->0x206e02eb, 1049031->0x982a3e, 1049032->?, 1049033->0x206e0cf1, 1049034->0x982a3f, 1049035->0x91a080c, 1049036->0x206e01a4, 1049037->0x982a3e, 1049038->0x206e080c, 1049039->0xd82a3e, 1049040->0x91a080c, 1049041->0x206e0429, 1049042->0x982a3e, 1049043->0x962080c, 1049044->0x20710caf, 1049045->0xd92a9e, 1049046->0x206e090a, 1049047->0x982a3a, 1049048->0x106e080c, 1049049->0x82a43, 1049050->0x206e080c, 1049051->0x8c1645, 1049052->0xcf2c852, 1049053->0xc70839, 1049054->0xcf1c855, 1049055->0xc30839, 1049056->0xc10738, 1049057->0x2a17106e, 1049058->0x80a0007, 1049059->0xbb083d, 1049060->0xcaf0862, 1049061->0x2a9e2071, 1049062->0x80a00d8, 1049063->0xb3083b, 1049064->0x2b030071, 1049065->0x60c0000, 1049066->0xcdac855, 1049067->0x540838, 1049068->0x2a470071, 1049069->0x20b0000, 1049070->0x2b05306e, 1049071->0x80a0326, 1049072->0x8228481, 1049073->0x107003ba, 1049074->0x82a35, 1049075->0x3016091a, 1049076->0x2a3e206e, 1049077->0x80c0098, 1049078->0x2a3b306e, 1049079->0x80c0548, 1049080->0x1b6091a, 1049081->0x2a3e206e, 1049082->0x80c0098, 1049083->0x47f2071, 1049084->0x90c0032, 1049085->0x2a3e206e, 1049086->0x80c0098, 1049087->0x2a43106e, 1049088->0x80c0008, 1049089->0x1645206e, 1049090->0x1070008c, 1049091->0xc1626, 1049092->0x838080a, 1049093->0x9c005a, 1049094->0x8220402, 1049095->0x107003ba, 1049096->0x82a35, 1049097->0x3013091a, 1049098->0x2a3e206e, 1049099->0x80c0098, 1049100->0x47f2071, 1049101->0x90c0010, 1049102->0x2a3e206e, 1049103->0x80c0098, 1049104->0x2a43106e, 1049105->0x80c0008, 1049106->0x1645206e, 1049107->0x3070008c, 1049108->0x10c1660, 1049109->0x3018081a, 1049110->0x1645206e, 1049111->0x812008c, 1049112->0xcdac85c, 1049113->0x7d0638, 1049114->0x3ba0822, 1049115->0x2a351070, 1049116->0x91a0008, 1049117->0x206e301a, 1049118->0x982a3e, 1049119->0x106e080c, 1049120->0x62b04, 1049121->0x206e090c, 1049122->0x982a3e, 1049123->0x106e080c, 1049124->0x82a43, 1049125->0x206e080c, 1049126->0x8c1645, 1049127->0x16271070, 1049128->0x80a000c, 1049129->0x570838, 1049130->0x2b04106e, 1049131->0x80c0006, 1049132->0x16612070, 1049133->0x106e008c, 1049134->0x62b04, 1049135->0x2070080c, 1049136->0x8c165d, 1049137->?, 1049138->0x48bc0ce9, 1049139->0xce9c85a, 1049140->0x3ba0822, 1049141->0x2a351070, 1049142->0x91a0008, 1049143->0x206e3014, 1049144->0x982a3e, 1049145->?, 1049146->0x306e0ce9, 1049147->0xba82a3b, 1049148->0x106e080c, 1049149->0x82a43, 1049150->0x206e080c, 1049151->0x8c1645, 1049152->0x81aaa28, 1049153->0x206e0000, 1049154->0x8d2a08, 1049155->0x838080a, 1049156->?, 1049157->?, 1049158->?, 1049159->0x5b700cf3, 1049160->?, 1049161->0x81a060c, 1049162->0x206e3017, 1049163->0x8c1645, 1049164->?, 1049165->?, 1049166->?, 1049167->0x5d710cf3, 1049168->?, 1049169->0x81a060c, 1049170->0x206e3019, 1049171->0x8c1645, 1049172->0x81a8728, 1049173->0x206e3015, 1049174->0x8c1645, 1049175->0x81aad28, 1049176->0x206e301b, 1049177->0x8c1645, 1049178->0xdae28, 1049179->0x50003, 1049180->?, 1049181->0x56001c, 1049182->0x7140000, 1049183->0x36ee80, 1049184->0x40c3c, 1049185->0x211b207, 1049186->0x3120012, 1049187->?, 1049188->0x5380cea, 1049189->?, 1049190->0x10710cea, 1049191->0x52b07, 1049192->0x106e050c, 1049193->0x52b06, 1049194->0x393050a, 1049195->0x10120705, 1049196->0xccea654, 1049197->0xcf1a555, 1049198->0x350538, 1049199->0x506e1512, 1049200->0x53c60853, 1049201->0x13d010a, 1049202->0x5220019, 1049203->0x107003ba, 1049204->0x52a35, 1049205->0x29cd1071, 1049206->0x60c0001, 1049207->0x2a3e206e, 1049208->0x50c0065, 1049209->0x5d0061a, 1049210->0x2a3e206e, 1049211->0x50c0065, 1049212->0x2a43106e, 1049213->0xb0c0005, 1049214->?, 1049215->0xcf2a552, 1049216->0xcf1a655, 1049217->0xcf3a853, 1049218->0x162e5970, 1049219->0x40c865a, 1049220->?, 1049221->0x2b06106e, 1049222->0x50a0004, 1049223->0x7050393, 1049224->0x512c828, 1049225->0x2cd28, 1049226->0x0001, 1049227->?, 1049228->0x3001c, 1049229->0x10540000, 1049230->0x110cd9, 1049231->0x20000, 1049232->0x10001, 1049233->?, 1049234->0x7001c, 1049235->0x10540000, 1049236->0x106e0ce7, 1049237->0x02bb, 1049238->0xf000a, 1049239->0x50000, 1049240->0x20001, 1049241->?, 1049242->0xf001c, 1049243->0x21a0000, 1049244->0x31a49ce, 1049245->0x20710000, 1049246->0x3201dd, 1049247->0x21a000c, 1049248->0x2071356e, 1049249->0x201dd, 1049250->0x111010c, 1049251->0x40000, 1049252->0x30001, 1049253->?, 1049254->0x2c001c, 1049255->0x11a0000, 1049256->0x21a356e, 1049257->0x306e0000, 1049258->0x2131634, 1049259->0x1071000c, 1049260->0x0444, 1049261->0x139010a, 1049262->0x106e001e, 1049263->0x31628, 1049264->0x138010c, 1049265->0x1220018, 1049266->0x107003ba, 1049267->0x12a35, 1049268->0x2a3e206e, 1049269->0x10c0001, 1049270->0x1628106e, 1049271->0x20c0003, 1049272->0x2a3e206e, 1049273->0x10c0021, 1049274->0x2a43106e, 1049275->0x10c0001, 1049276->0x1120111, 1049277->0x2fe28, 1049278->0x0001, 1049279->?, 1049280->0x3001c, 1049281->0x10540000, 1049282->0x110cd8, 1049283->0x60000, 1049284->0x30001, 1049285->?, 1049286->0x72001c, 1049287->0x64120000, 1049288->0x51550312, 1049289->0x1380cd6, 1049290->0x51540008, 1049291->0x1390cd9, 1049292->0x20120004, 1049293->0x5154000f, 1049294->0x1380cd9, 1049295->0x5154000a, 1049296->0x106e0cd9, 1049297->0x12a17, 1049298->0x4135010a, 1049299->0x1220038, 1049300->0x107003ba, 1049301->0x12a35, 1049302->0x33bd021a, 1049303->0x2a3e206e, 1049304->0x10c0021, 1049305->0xcd95254, 1049306->0x2a3e206e, 1049307->0x10c0021, 1049308->0x426021a, 1049309->0x2a3e206e, 1049310->0x10c0021, 1049311->0x2a43106e, 1049312->0x10c0001, 1049313->0x1645206e, 1049314->0x10120015, 1049315->0x3ba0122, 1049316->0x2a351070, 1049317->0x21a0001, 1049318->0x206e33be, 1049319->0x212a3e, 1049320->0x206e010c, 1049321->0x12a3a, 1049322->0x106e010c, 1049323->0x12a43, 1049324->0x206e010c, 1049325->0x151645, 1049326->0x5154be28, 1049327->0x21a0cd9, 1049328->0x206e05ea, 1049329->0x212a08, 1049330->0x139010a, 1049331->0x51540018, 1049332->0x306e0cd9, 1049333->0x4312a22, 1049334->0x21a010c, 1049335->0x206e05d4, 1049336->0x212a08, 1049337->0x139010a, 1049338->0x11a000a, 1049339->0x20714f89, 1049340->0x3101de, 1049341->0x138010a, 1049342->0x20120004, 1049343->0x3012c828, 1049344->0x2c628, 1049345->0x0001, 1049346->?, 1049347->0x3001c, 1049348->0x10540000, 1049349->0x110ce0, 1049350->0x20000, 1049351->0x0001, 1049352->?, 1049353->0x3001c, 1049354->0x10540000, 1049355->0x110ce2, 1049356->0x40000, 1049357->0x30001, 1049358->?, 1049359->0xe001c, 1049360->0x30540000, 1049361->0x31540ced, 1049362->0x106e0ce0, 1049363->0x1146d, 1049364->0x2212010a, 1049365->0x276b306e, 1049366->0xc0210, 1049367->0x1a0011, 1049368->0x60002, 1049369->?, 1049370->0x480001c, 1049371->0x80000, 1049372->0x4540018, 1049373->0x44550ce0, 1049374->0x4390bb5, 1049375->0x4220043, 1049376->0x107003ba, 1049377->0x42a35, 1049378->0x1e5d161a, 1049379->0x160008, 1049380->0x2a3e206e, 1049381->0x40c0004, 1049382->0x190008, 1049383->0x2a3d206e, 1049384->0x40c0004, 1049385->0x2450161a, 1049386->0x160008, 1049387->0x2a3e206e, 1049388->0x40c0004, 1049389->0x190008, 1049390->0x380052, 1049391->0x1602, 1049392->0x160002, 1049393->0x2a3a206e, 1049394->0x40c0004, 1049395->0x25c7161a, 1049396->0x160008, 1049397->0x2a3e206e, 1049398->0x40c0004, 1049399->0x3f1161a, 1049400->0x160008, 1049401->0x2a3e206e, 1049402->0x40c0004, 1049403->0x2a43106e, 1049404->0x40c0004, 1049405->0x180008, 1049406->0x1646206e, 1049407->0xe0040, 1049408->0x190008, 1049409->0x380452, 1049410->0x3d5042b, 1049411->0x2750000, 1049412->0x18105c, 1049413->0x8f528, 1049414->0x4540018, 1049415->0x106e0cbe, 1049416->0x4167b, 1049417->0x8040a, 1049418->0x20700018, 1049419->0x401636, 1049420->0x8e728, 1049421->0x4540018, 1049422->0x106e0ce0, 1049423->0x41454, 1049424->0x8040c, 1049425->0x540018, 1049426->0x16080ce0, 1049427->0x1740000, 1049428->0x16146d, 1049429->0x2160a, 1049430->0x20710016, 1049431->0x40ce2, 1049432->0x80e0a, 1049433->0x4540018, 1049434->0x16130cc0, 1049435->0x80000, 1049436->0x30720016, 1049437->0xe40737, 1049438->0x1e48041a, 1049439->0x180008, 1049440->0x1645206e, 1049441->0x1740040, 1049442->0x18164e, 1049443->0x180008, 1049444->0xce00454, 1049445->0x1454106e, 1049446->0x40c0004, 1049447->0x55106e, 1049448->0x40c0004, 1049449->0x591614, 1049450->0x20112, 1049451->0x206e0016, 1049452->0x400b2, 1049453->0x1439140a, 1049454->0x80015, 1049455->0x4540018, 1049456->0x16130cc0, 1049457->0x8000e, 1049458->0x1020018, 1049459->0x206e0016, 1049460->0x101649, 1049461->0x8160c, 1049462->0x20720016, 1049463->0x406a4, 1049464->0x180008, 1049465->0xce00454, 1049466->0x14a5106e, 1049467->?, 1049468->0x166f0174, 1049469->0x80018, 1049470->0x4540018, 1049471->0x16130cc0, 1049472->0x8000e, 1049473->0x1020018, 1049474->0x206e0016, 1049475->0x101649, 1049476->0x8160c, 1049477->0x20720016, 1049478->0x406a4, 1049479->0x16330176, 1049480->0x290018, 1049481->0x8ff6e, 1049482->0x4540018, 1049483->0x10720cc0, 1049484->0x406aa, 1049485->0x1662040c, 1049486->0x80343, 1049487->0x4330016, 1049488->0x80012, 1049489->0x4540018, 1049490->0x106e0cbe, 1049491->0x4167b, 1049492->0x8040a, 1049493->0x20700018, 1049494->0x401636, 1049495->0x16520176, 1049496->0x1740018, 1049497->0x181664, 1049498->0x164e0174, 1049499->0x290018, 1049500->0x174ff48, 1049501->0x18164e, 1049502->?, 1049503->0x180008, 1049504->0xcc00454, 1049505->0x6aa1072, 1049506->0x40c0004, 1049507->0x670106e, 1049508->0x40a0004, 1049509->?, 1049510->0x190008, 1049511->0x360a54, 1049512->0x650a1f, 1049513->0x80412, 1049514->0x306e0018, 1049515->0x4a0164b, 1049516->0x16520176, 1049517->0x290018, 1049518->0x8ff24, 1049519->0xa540019, 1049520->0xa1f0036, 1049521->?, 1049522->0x439002a, 1049523->?, 1049524->0x41f002b, 1049525->0x150804a8, 1049526->0x151f0004, 1049527->?, 1049528->?, 1049529->0x7147fff, 1049530->0x7fffffff, 1049531->?, 1049532->0x150008, 1049533->0x16130421, 1049534->0x20009, 1049535->0x4370016, 1049536->0x4412004c, 1049537->0x4150446, 1049538->0x90438, 1049539->0x4464412, 1049540->0x10710415, 1049541->0x429c8, 1049542->0x5412050a, 1049543->0x4150446, 1049544->0x90438, 1049545->0x4465412, 1049546->0x10710415, 1049547->0x429c8, 1049548->0x6412060a, 1049549->0x4150446, 1049550->0x90438, 1049551->0x4466412, 1049552->0x10710415, 1049553->0x429c8, 1049554->0x639070a, 1049555->0x739000a, 1049556->0x6140008, 1049557->0x7fffffff, 1049558->?, 1049559->0x4137fff, 1049560->0x4460008, 1049561->0x4380415, 1049562->0x413000a, 1049563->0x4460008, 1049564->0x10710415, 1049565->0x429c8, 1049566->0x413080a, 1049567->0x4460009, 1049568->0x4380415, 1049569->0x413000a, 1049570->0x4460009, 1049571->0x10710415, 1049572->0x429c8, 1049573->0x8090a, 1049574->0x4540018, 1049575->0x6740cbf, 1049576->0x403fc, 1049577->0x180008, 1049578->0xce00454, 1049579->0x1499106e, 1049580->0x1740004, 1049581->0x18161c, 1049582->?, 1049583->0x4220c0d, 1049584->0x107003ba, 1049585->0x42a35, 1049586->0x2f36161a, 1049587->0x160008, 1049588->0x2a3e206e, 1049589->0x40c0004, 1049590->0x2a3d206e, 1049591->0x40c00c4, 1049592->0x2a43106e, 1049593->0x40c0004, 1049594->0x180008, 1049595->0x1646206e, 1049596->?, 1049597->0x190008, 1049598->0x360a54, 1049599->0x650a1f, 1049600->0x190008, 1049601->0x380452, 1049602->0x180008, 1049603->0x1638306e, 1049604->0x290a40, 1049605->0x8fe76, 1049606->0xa540019, 1049607->0xa1f0036, 1049608->?, 1049609->0x439002a, 1049610->?, 1049611->0x41f002b, 1049612->0x4b0704a8, 1049613->0x4a80b1f, 1049614->0x900b38, 1049615->0x1613b421, 1049616->0x20005, 1049617->0x4340016, 1049618->0x4120089, 1049619->0x40b0446, 1049620->0x90438, 1049621->0x4460412, 1049622->0x8040b, 1049623->0x45b0018, 1049624->0x14120cd8, 1049625->0x40b0446, 1049626->0x21613, 1049627->0x160b1646, 1049628->0x180008, 1049629->0x160108, 1049630->0x164d306e, 1049631->0x34120140, 1049632->0x40b0446, 1049633->0x90438, 1049634->0x4463412, 1049635->0x8040b, 1049636->0x45b0018, 1049637->0x44120cd9, 1049638->0x40b0446, 1049639->0x90438, 1049640->0x4464412, 1049641->0x8040b, 1049642->0x45b0018, 1049643->0x4220ce2, 1049644->0x107003ba, 1049645->0x42a35, 1049646->0xfa6161a, 1049647->0x160008, 1049648->0x2a3e206e, 1049649->0x40c0004, 1049650->0x180008, 1049651->0xcd80054, 1049652->0x1608, 1049653->0x160008, 1049654->0x2a3e206e, 1049655->0x40c0004, 1049656->0x2a43106e, 1049657->0x40c0004, 1049658->0x180008, 1049659->0x1645206e, 1049660->0x14120040, 1049661->0x180008, 1049662->0xcd5045c, 1049663->0x166e0174, 1049664->0x80018, 1049665->0x4550018, 1049666->0x4390cd6, 1049667->0x8001e, 1049668->0x4540018, 1049669->0x4380cd1, 1049670->0x41a0018, 1049671->0x80fa5, 1049672->0x206e0018, 1049673->0x401645, 1049674->0x180008, 1049675->0xcd10454, 1049676->0x162c0174, 1049677->0x160c0018, 1049678->0x160008, 1049679->0x2572206e, 1049680->0x290004, 1049681->0x41afdde, 1049682->0x80fa4, 1049683->0x206e0018, 1049684->0x401645, 1049685->?, 1049686->0x3ba0422, 1049687->0x2a351070, 1049688->0x161a0004, 1049689->0x80fa7, 1049690->0x206e0016, 1049691->0x42a3e, 1049692->?, 1049693->0x1602, 1049694->0x160002, 1049695->0x2a3a206e, 1049696->0x40c0004, 1049697->0x2a43106e, 1049698->0x40c0004, 1049699->0x180008, 1049700->0x1645206e, 1049701->0x290040, 1049702->0x8fdb4, 1049703->0x4540018, 1049704->0x16130cc0, 1049705->0x80003, 1049706->0x1020018, 1049707->0x206e0016, 1049708->0x101649, 1049709->0x8160c, 1049710->0x20720016, 1049711->0x406ac, 1049712->?, 1049713->0x190008, 1049714->0x360a54, 1049715->0x650a1f, 1049716->0x2ba454, 1049717->0x4a6041f, 1049718->0x4a6041f, 1049719->0x1613, 1049720->0x16040f46, 1049721->0x3b80f1f, 1049722->0x2ba454, 1049723->0x4a6041f, 1049724->0x4a6041f, 1049725->0x11613, 1049726->0x16040446, 1049727->0x3aa041f, 1049728->0x29d2106e, 1049729->0x100b0004, 1049730->0x180008, 1049731->0x100105, 1049732->0x16684070, 1049733->0x2921f0, 1049734->0x8fd74, 1049735->0xa540019, 1049736->0xa1f0036, 1049737->0x14120065, 1049738->0x180008, 1049739->0xccc045c, 1049740->0x80412, 1049741->0x306e0018, 1049742->0x4a0164b, 1049743->?, 1049744->0x3ba0422, 1049745->0x2a351070, 1049746->0x161a0004, 1049747->0x80e29, 1049748->0x206e0016, 1049749->0x42a3e, 1049750->0x8040c, 1049751->0x520019, 1049752->0x16020038, 1049753->0x20000, 1049754->0x206e0016, 1049755->0x42a3a, 1049756->0x106e040c, 1049757->0x42a43, 1049758->0x8040c, 1049759->0x206e0018, 1049760->0x401645, 1049761->0x166f0174, 1049762->0x80018, 1049763->0x540018, 1049764->0x13080cd1, 1049765->0x131f0000, 1049766->0x13380329, 1049767->0x1740037, 1049768->0x132640, 1049769->0x438040a, 1049770->0x1740031, 1049771->0x132633, 1049772->0x8040c, 1049773->0x45b0018, 1049774->0x1740cd8, 1049775->0x132635, 1049776->0x8040c, 1049777->0x45b0018, 1049778->0x1740cd9, 1049779->0x13263b, 1049780->0x174040c, 1049781->0x132637, 1049782->0x8160c, 1049783->0x1080018, 1049784->0x306e0016, 1049785->0x140164d, 1049786->0x26390174, 1049787->0x40c0013, 1049788->0x180008, 1049789->0xce2045b, 1049790->0x81412, 1049791->0x45c0018, 1049792->0x1740cd5, 1049793->0x18166e, 1049794->0x16330176, 1049795->0x290018, 1049796->0x8fcf8, 1049797->0xa540019, 1049798->0xa1f0036, 1049799->?, 1049800->0x439002a, 1049801->0x8fcee, 1049802->0x4540018, 1049803->0x16130cc0, 1049804->0x1713001f, 1049805->0x80000, 1049806->0x1020018, 1049807->0x2080016, 1049808->0x306e0017, 1049809->0x210164a, 1049810->0x8160c, 1049811->0x20720016, 1049812->0x406b0, 1049813->?, 1049814->0x2472041a, 1049815->0x180008, 1049816->0x1645206e, 1049817->0x1740040, 1049818->0x18164e, 1049819->?, 1049820->0x190008, 1049821->0x360a54, 1049822->0x650a1f, 1049823->0x2aa454, 1049824->?, 1049825->0x2ba454, 1049826->0x43e041f, 1049827->0xd1f4d07, 1049828->0x412043e, 1049829->0x40d1244, 1049830->0x80413, 1049831->0x120002, 1049832->0x84032, 1049833->0xa0413, 1049834->0x120002, 1049835->?, 1049836->0xdd0041a, 1049837->0x180008, 1049838->0x1645206e, 1049839->0x80040, 1049840->0x4540018, 1049841->0x16130cc0, 1049842->0x80022, 1049843->0x1020018, 1049844->0x206e0016, 1049845->0x101649, 1049846->0x8160c, 1049847->0x20720016, 1049848->0x4068b, 1049849->?, 1049850->0x190008, 1049851->0x360a54, 1049852->0x650a1f, 1049853->0x2aa454, 1049854->?, 1049855->0x2ba454, 1049856->0x43e041f, 1049857->0xd1f4d07, 1049858->0x412043e, 1049859->0x40d0444, 1049860->0x29cd1071, 1049861->0x40c0004, 1049862->0x180008, 1049863->0xce2045b, 1049864->?, 1049865->0xd20041a, 1049866->0x180008, 1049867->0x1645206e, 1049868->0x1740040, 1049869->0x181664, 1049870->?, 1049871->0xdde041a, 1049872->0x180008, 1049873->0x1645206e, 1049874->0x80040, 1049875->0xa540019, 1049876->0xa1f0036, 1049877->?, 1049878->0x439002a, 1049879->?, 1049880->0x438002b, 1049881->?, 1049882->0x41f002b, 1049883->0x4d07043e, 1049884->0x43e0d1f, 1049885->0x4440412, 1049886->0x1613040d, 1049887->0x20001, 1049888->0x4330016, 1049889->0x8fc3e, 1049890->0x4540018, 1049891->0x16130ce0, 1049892->0x80000, 1049893->0x206e0016, 1049894->0x414c4, 1049895->?, 1049896->0x22c8041a, 1049897->0x180008, 1049898->0x1645206e, 1049899->0x290040, 1049900->0x100fc28, 1049901->0x1002d, 1049902->0x8f0000, 1049903->0x30000, 1049904->0xba0000, 1049905->0x30000, 1049906->0x1760000, 1049907->0x30000, 1049908->0x30000, 1049909->0x30000, 1049910->0x30000, 1049911->0x2490000, 1049912->0x25e0000, 1049913->0x2890000, 1049914->0x30000, 1049915->0x39a0000, 1049916->0x30000, 1049917->0x30000, 1049918->0x30000, 1049919->0x3050000, 1049920->0x30000, 1049921->0x30000, 1049922->0x30000, 1049923->0x30000, 1049924->0x30000, 1049925->0x1760000, 1049926->0x1760000, 1049927->0x150000, 1049928->0x29c0000, 1049929->0x30000, 1049930->0x30000, 1049931->0xb50000, 1049932->0xd90000, 1049933->0x30000, 1049934->0x30000, 1049935->0x1870000, 1049936->0x740000, 1049937->0x3280000, 1049938->0x3340000, 1049939->0x30000, 1049940->0x70000, 1049941->0x3700000, 1049942->0x30000, 1049943->0x30000, 1049944->0x30000, 1049945->0x30000, 1049946->0x38e0000, 1049947->0x14b0000, 1049948->0x480000, 1049949->0x1010001, 1049950->0x3a707ae, 1049951->0x100000, 1049952->0x30003, 1049953->?, 1049954->0x1fd001c, 1049955->0x2c120000, 1049956->0x18120912, 1049957->0x2cf754, 1049958->0xce1da54, 1049959->0x3a732, 1049960->?, 1049961->0x738002a, 1049962->0x1120170, 1049963->0x2af754, 1049964->0x1267720, 1049965->0xc0738, 1049966->0x2af754, 1049967->0x126071f, 1049968->0x126071f, 1049969->0x66c106e, 1049970->0x10c0007, 1049971->0x3300762, 1049972->0x67133, 1049973->0x1619106e, 1049974->?, 1049975->0x32d0762, 1049976->0x1a7132, 1049977->0x3ba0722, 1049978->0x2a351070, 1049979->0xa1a0007, 1049980->0x206e35cb, 1049981->0xa72a3e, 1049982->?, 1049983->0x206e002a, 1049984->0xa72a3d, 1049985->0x106e070c, 1049986->0x72a43, 1049987->0x206e070c, 1049988->0x7d1646, 1049989->0xce1d754, 1049990->0x9070a44, 1049991->?, 1049992->0x9070a4b, 1049993->0xce1d754, 1049994->0x9070744, 1049995->?, 1049996->0x106e0512, 1049997->0xd1644, 1049998->0x739070a, 1049999->?, 1050000->0x106e0cdd, 1050001->0x702c8, 1050002->0x2070070a, 1050003->0x7d163d, 1050004->0x738070a, 1050005->0x15120003, 1050006->0xcbdd755, 1050007->0x60739, 1050008->0xcc5d755, 1050009->0x12f0738, 1050010->0xce6d752, 1050011->0x2a291071, 1050012->0x70c0007, 1050013->0x16422070, 1050014->0x70a007d, 1050015->0x1230739, 1050016->?, 1050017->?, 1050018->0x7380cd6, 1050019->?, 1050020->?, 1050021->0x106e0cdd, 1050022->0xa02ce, 1050023->?, 1050024->0x30700cdd, 1050025->0xbad1643, 1050026->0x206e0a0a, 1050027->0xa702e9, 1050028->0xcddd754, 1050029->0x2cd106e, 1050030->0x70a0007, 1050031->0x1060739, 1050032->?, 1050033->0x106e0cdd, 1050034->0x702c4, 1050035->0x438000a, 1050036->0x10710013, 1050037->0x02d0, 1050038->0x738070a, 1050039->?, 1050040->?, 1050041->0x106e0cdd, 1050042->0x902ce, 1050043->0x206e090a, 1050044->0x9702db, 1050045->0xcddd754, 1050046->0xcc8d952, 1050047->0x2d5206e, 1050048->?, 1050049->?, 1050050->0x206e0ce6, 1050051->0x9702d8, 1050052->?, 1050053->0x10710ce2, 1050054->0x70444, 1050055->0x738070a, 1050056->0x3120003, 1050057->0xa0338, 1050058->0xcddd754, 1050059->0x2c5106e, 1050060->0x70a0007, 1050061->0xcd0739, 1050062->0x2226071a, 1050063->0x1645206e, 1050064->?, 1050065->0x206e0cdd, 1050066->0x8702d8, 1050067->0xcddd754, 1050068->0x2b7106e, 1050069->0x60a0007, 1050070->0xcddd754, 1050071->0xce0d854, 1050072->0xbad8854, 1050073->0xcc8d952, 1050074->0x168a306e, 1050075->0x80a0968, 1050076->0x2d6206e, 1050077->?, 1050078->?, 1050079->?, 1050080->?, 1050081->0x306e0cc8, 1050082->0x968168b, 1050083->0x206e080a, 1050084->0x8702d7, 1050085->0x3ba0722, 1050086->0x2a351070, 1050087->0x81a0007, 1050088->0x206e2095, 1050089->0x872a3e, 1050090->?, 1050091->0x106e0cdd, 1050092->0x802b7, 1050093->0x206e080a, 1050094->0x872a3a, 1050095->0x81a070c, 1050096->0x206e05b8, 1050097->0x872a3e, 1050098->?, 1050099->0x106e0cdd, 1050100->0x802ce, 1050101->0x206e080a, 1050102->0x872a3f, 1050103->0x81a070c, 1050104->0x206e05b6, 1050105->0x872a3e, 1050106->?, 1050107->0x106e0cdd, 1050108->0x802bc, 1050109->0x206e080a, 1050110->0x872a3f, 1050111->0x81a070c, 1050112->0x206e0508, 1050113->0x872a3e, 1050114->0x206e070c, 1050115->0x372a3f, 1050116->0x81a070c, 1050117->0x206e05b7, 1050118->0x872a3e, 1050119->0x206e070c, 1050120->0x572a3f, 1050121->0x81a070c, 1050122->0x206e003b, 1050123->0x872a3e, 1050124->?, 1050125->0x206e0cd4, 1050126->0x872a3f, 1050127->0x81a070c, 1050128->0x206e051c, 1050129->0x872a3e, 1050130->?, 1050131->0x206e0ce6, 1050132->0x872a3a, 1050133->0x81a070c, 1050134->0x206e0515, 1050135->0x872a3e, 1050136->?, 1050137->0x206e0cc8, 1050138->0x872a3a, 1050139->0x106e070c, 1050140->0x72a43, 1050141->0x206e070c, 1050142->0x7d1645, 1050143->0x164f106e, 1050144->0x29000d, 1050145->0x306efe8f, 1050146->0xfed1639, 1050147->?, 1050148->0x722020d, 1050149->0x107003ba, 1050150->0x72a35, 1050151->0x35ca0a1a, 1050152->0x2a3e206e, 1050153->0x70c00a7, 1050154->0x2a3d206e, 1050155->0x70c0027, 1050156->0x2a43106e, 1050157->0x70c0007, 1050158->0x1646206e, 1050159->0x29007d, 1050160->?, 1050161->?, 1050162->0x299401, 1050163->0x106efefc, 1050164->0xd1644, 1050165->0x739070a, 1050166->0x539ff3b, 1050167->?, 1050168->0x7390cd4, 1050169->?, 1050170->?, 1050171->0x206e0cc8, 1050172->0x8702d8, 1050173->?, 1050174->0x250538, 1050175->0xcd4d755, 1050176->0x210739, 1050177->0xcddd754, 1050178->0x2c5106e, 1050179->0x70a0007, 1050180->0x1641206e, 1050181->0x70a007d, 1050182->0xe0738, 1050183->0x2225071a, 1050184->0x1645206e, 1050185->?, 1050186->0x206e0cdd, 1050187->0x8702d8, 1050188->?, 1050189->0xcddd754, 1050190->0x2d8206e, 1050191->0x2900c7, 1050192->0x539ff07, 1050193->?, 1050194->0x7380cd4, 1050195->?, 1050196->?, 1050197->0x206e0ce6, 1050198->0x8702d8, 1050199->?, 1050200->0xce6d752, 1050201->0x9c736, 1050202->0xcddd754, 1050203->0x2d8206e, 1050204->0x290087, 1050205->?, 1050206->?, 1050207->0x206e0ce6, 1050208->0x8702d8, 1050209->?, 1050210->0x17c0000, 1050211->0x30000, 1050212->0x1010001, 1050213->0x38107b5, 1050214->0x1d0000, 1050215->0x60003, 1050216->?, 1050217->0x398001c, 1050218->0x1b2c0000, 1050219->0x038a, 1050220->0x35ce031a, 1050221->0x1a0008, 1050222->0x1646206e, 1050223->0xe0030, 1050224->0x1c0008, 1050225->0x2b0354, 1050226->0x4a8031f, 1050227->0x31508, 1050228->0x4a8151f, 1050229->0x3ba0322, 1050230->0x2a351070, 1050231->0x171a0003, 1050232->0x835cd, 1050233->0x206e0017, 1050234->0x32a3e, 1050235->0x8030c, 1050236->0x210015, 1050237->0x1702, 1050238->0x170002, 1050239->0x2a3a206e, 1050240->0x30c0003, 1050241->0x3ab171a, 1050242->0x170008, 1050243->0x2a3e206e, 1050244->0x30c0003, 1050245->0x150008, 1050246->0x2a3d206e, 1050247->0x30c0003, 1050248->0x2a43106e, 1050249->0x30c0003, 1050250->0x1a0008, 1050251->0x1645206e, 1050252->0x12130030, 1050253->0xb120004, 1050254->0x150008, 1050255->0x33d0321, 1050256->0x312001e, 1050257->0x3150346, 1050258->0x29c81071, 1050259->0x120a0003, 1050260->0x150008, 1050261->0x17130321, 1050262->0x20004, 1050263->0x3340017, 1050264->0x3312000e, 1050265->0x3150346, 1050266->0x90338, 1050267->0x3463312, 1050268->0x10710315, 1050269->0x329c8, 1050270->0x80b0a, 1050271->0x102001a, 1050272->0x206e0012, 1050273->0x101655, 1050274->0x80c0a, 1050275->0x354001a, 1050276->0x206e0cdd, 1050277->0xc302da, 1050278->0x1a0008, 1050279->0xcdd0354, 1050280->0x2e1206e, 1050281->0x800b3, 1050282->0x354001a, 1050283->0x80cdd, 1050284->0x102001a, 1050285->0x206e0012, 1050286->0x101654, 1050287->0x2170a, 1050288->0x206e0017, 1050289->0x302db, 1050290->0x3ba0322, 1050291->0x2a351070, 1050292->0x171a0003, 1050293->0x83588, 1050294->0x206e0017, 1050295->0x32a3e, 1050296->0x206e030c, 1050297->0xc32a3a, 1050298->0x171a030c, 1050299->0x80367, 1050300->0x206e0017, 1050301->0x32a3e, 1050302->0x2030c, 1050303->0x206e0012, 1050304->0x32a3a, 1050305->0x171a030c, 1050306->0x80101, 1050307->0x206e0017, 1050308->0x32a3e, 1050309->0x206e030c, 1050310->0xb32a3a, 1050311->0x106e030c, 1050312->0x32a43, 1050313->0x8030c, 1050314->0x206e001a, 1050315->0x301645, 1050316->?, 1050317->0x3220e0d, 1050318->0x107003ba, 1050319->0x32a35, 1050320->0x35d4171a, 1050321->0x170008, 1050322->0x2a3e206e, 1050323->0x30c0003, 1050324->0x2a3d206e, 1050325->0x30c00e3, 1050326->0x2a43106e, 1050327->0x30c0003, 1050328->0x1a0008, 1050329->0x1646206e, 1050330->?, 1050331->0x1c0008, 1050332->0x2b0354, 1050333->0x4a8031f, 1050334->0x31508, 1050335->0x4a8151f, 1050336->0x41313, 1050337->?, 1050338->0x514f412, 1050339->0x7fffffff, 1050340->?, 1050341->0xa127fff, 1050342->0x8120712, 1050343->0x11413, 1050344->0x1613, 1050345->0x11131d12, 1050346->0x80000, 1050347->0x3210015, 1050348->0xe1713, 1050349->0x170002, 1050350->0x16b0334, 1050351->0x3460312, 1050352->0x3380315, 1050353->0x3120009, 1050354->0x3150346, 1050355->0x29c81071, 1050356->0x130a0003, 1050357->0x3463312, 1050358->0x3380315, 1050359->0x33120009, 1050360->0x3150346, 1050361->0x29c81071, 1050362->0x100a0003, 1050363->0x3464312, 1050364->0x3380315, 1050365->0x43120009, 1050366->0x3150346, 1050367->0x29c81071, 1050368->0x40a0003, 1050369->0x3465312, 1050370->0x3380315, 1050371->0x53120009, 1050372->0x3150346, 1050373->0x29c81071, 1050374->0x50a0003, 1050375->0x3466312, 1050376->0x3380315, 1050377->0x63120009, 1050378->0x3150346, 1050379->0x29c81071, 1050380->0x60a0003, 1050381->0xa0539, 1050382->0x80639, 1050383->?, 1050384->0x6147fff, 1050385->0x7fffffff, 1050386->0x3467312, 1050387->0x3380315, 1050388->0x73120009, 1050389->0x3150346, 1050390->0x29c81071, 1050391->0xa0a0003, 1050392->0x80313, 1050393->0x3150346, 1050394->0xa0338, 1050395->0x80313, 1050396->0x3150346, 1050397->0x29c81071, 1050398->0x70a0003, 1050399->0x90313, 1050400->0x3150346, 1050401->0xa0338, 1050402->0x90313, 1050403->0x3150346, 1050404->0x29c81071, 1050405->0x80a0003, 1050406->0xa0313, 1050407->0x3150346, 1050408->0xa0338, 1050409->0xa0313, 1050410->0x3150346, 1050411->0x29c81071, 1050412->0x140a0003, 1050413->0xb0313, 1050414->0x3150346, 1050415->0xa0338, 1050416->0xb0313, 1050417->0x3150346, 1050418->0x29c81071, 1050419->0x160a0003, 1050420->0xc0313, 1050421->0x3150346, 1050422->0xa0338, 1050423->0xc0313, 1050424->0x3150346, 1050425->0x29c81071, 1050426->0xd0a0003, 1050427->0xd0313, 1050428->0x3150346, 1050429->0xa0338, 1050430->0xd0313, 1050431->0x3150346, 1050432->0x29c81071, 1050433->0x110a0003, 1050434->0x130002, 1050435->0x1a0108, 1050436->0xce51059, 1050437->0x1a0008, 1050438->0x130102, 1050439->0x1654206e, 1050440->0x30a0010, 1050441->0xdb0338, 1050442->0xa0313, 1050443->0x3150346, 1050444->0x1a0008, 1050445->0x16422070, 1050446->0x30a0030, 1050447->0xcf0339, 1050448->0x81312, 1050449->0x35c001a, 1050450->0x80cbd, 1050451->0x354001a, 1050452->0x80cdd, 1050453->0x55001a, 1050454->0x17020cbd, 1050455->0x20000, 1050456->0x206e0017, 1050457->0x302e9, 1050458->0x1a0008, 1050459->0xcdd0354, 1050460->0x1a0008, 1050461->0x130102, 1050462->0x1655206e, 1050463->0x170a0010, 1050464->0x170002, 1050465->0x2e4206e, 1050466->0x80003, 1050467->0x354001a, 1050468->0x20cdd, 1050469->0x206e0010, 1050470->0x302e2, 1050471->0x1a0008, 1050472->0xcdd0354, 1050473->0x2d9206e, 1050474->0x800a3, 1050475->0x354001a, 1050476->0x306e0cdd, 1050477->0x87302e7, 1050478->0x140002, 1050479->0x1a0108, 1050480->0xce61059, 1050481->0x8e1639, 1050482->0x80312, 1050483->0x35c001a, 1050484->0x80cd4, 1050485->0xd59001a, 1050486->0x80cc8, 1050487->0x354001a, 1050488->0x6740cdc, 1050489->0x303fc, 1050490->0x7f1139, 1050491->0xfe5031a, 1050492->0x1a0008, 1050493->0xce4035b, 1050494->0x1a0008, 1050495->0xce50352, 1050496->0x31713, 1050497->0x170002, 1050498->?, 1050499->0x3ba0322, 1050500->0x2a351070, 1050501->0x171a0003, 1050502->0x81e67, 1050503->0x206e0017, 1050504->0x32a3e, 1050505->0x8030c, 1050506->0x54001a, 1050507->0x17080ce4, 1050508->0x80000, 1050509->0x206e0017, 1050510->0x32a3e, 1050511->0x106e030c, 1050512->0x32a43, 1050513->0x8030c, 1050514->0x206e001a, 1050515->0x301645, 1050516->?, 1050517->0x3220e0d, 1050518->0x107003ba, 1050519->0x32a35, 1050520->0xde8171a, 1050521->0x170008, 1050522->0x2a3e206e, 1050523->0x30c0003, 1050524->0x2a3d206e, 1050525->0x30c00e3, 1050526->0x2a43106e, 1050527->0x30c0003, 1050528->0x1a0008, 1050529->0x1646206e, 1050530->0x290030, 1050531->0x322ff3f, 1050532->0x172203b5, 1050533->0x17603ba, 1050534->0x172a35, 1050535->0x240d181a, 1050536->0x2a3e0274, 1050537->0x170c0017, 1050538->0x150008, 1050539->0x18020021, 1050540->0x2740000, 1050541->0x172a3a, 1050542->0x181a170c, 1050543->0x27403af, 1050544->0x172a3e, 1050545->0x174170c, 1050546->0x172a43, 1050547->0x8170c, 1050548->0x20700017, 1050549->0x329f4, 1050550->0x3120327, 1050551->?, 1050552->0x291312, 1050553->0x1312ff74, 1050554->0x110002, 1050555->0xa3033, 1050556->0x7ec031a, 1050557->0x1a0008, 1050558->0xce4035b, 1050559->?, 1050560->0x031a, 1050561->0x1a0008, 1050562->0xce4035b, 1050563->?, 1050564->0x1c0008, 1050565->0x2b0354, 1050566->0x4a8031f, 1050567->0xf1f3f07, 1050568->0xf3804a8, 1050569->?, 1050570->0x31713, 1050571->0x170002, 1050572->0xbe0334, 1050573->0x3462312, 1050574->0x338030f, 1050575->0x2312001d, 1050576->0x30f0346, 1050577->0x2a17106e, 1050578->0x30a0003, 1050579->0x51713, 1050580->0x170002, 1050581->0x100334, 1050582->0x5d3031a, 1050583->0x21713, 1050584->0x170f1746, 1050585->0x170008, 1050586->0x2a08206e, 1050587->0x30a0003, 1050588->0x2d0338, 1050589->0x171a2312, 1050590->0x181a49ce, 1050591->0x27705d3, 1050592->0x1701dd, 1050593->0x174d170c, 1050594->0x322030f, 1050595->0x107003ba, 1050596->0x32a35, 1050597->0x1e0b171a, 1050598->0x170008, 1050599->0x2a3e206e, 1050600->0x30c0003, 1050601->0x21713, 1050602->0x170f1746, 1050603->0x170008, 1050604->0x2a3e206e, 1050605->0x30c0003, 1050606->0x2a43106e, 1050607->0x30c0003, 1050608->0x1a0008, 1050609->0x1645206e, 1050610->0x80030, 1050611->0x355001a, 1050612->0x3390cd6, 1050613->0x8001d, 1050614->0x354001a, 1050615->0x17130cdd, 1050616->0x17460000, 1050617->0x1813170f, 1050618->0x18460001, 1050619->0x1913180f, 1050620->0x19460002, 1050621->0x8190f, 1050622->0x1080017, 1050623->0x2080018, 1050624->0x406e0019, 1050625->0x210302e0, 1050626->?, 1050627->0x1a0008, 1050628->0xced0354, 1050629->0x16310174, 1050630->0x170a001a, 1050631->0x170002, 1050632->0x2769206e, 1050633->0x30c0003, 1050634->0x250338, 1050635->0x1a0008, 1050636->0xced0354, 1050637->0x16310174, 1050638->0x170a001a, 1050639->0x170002, 1050640->0x2769206e, 1050641->0x30c0003, 1050642->0x26cc106e, 1050643->0x90c0003, 1050644->0x130938, 1050645->0x1a0008, 1050646->0xcdd0354, 1050647->0x21713, 1050648->0x170f1746, 1050649->0x170008, 1050650->0x2e0406e, 1050651->0x290993, 1050652->0x912fca8, 1050653->0x8ee28, 1050654->0x354001a, 1050655->0x17130cdd, 1050656->0x17460000, 1050657->0x1813170f, 1050658->0x18460001, 1050659->0x1913180f, 1050660->0x19460002, 1050661->0x8190f, 1050662->0x1080017, 1050663->0x2080018, 1050664->0x406e0019, 1050665->0x210302e0, 1050666->?, 1050667->0xde5031a, 1050668->0x1a0008, 1050669->0x1645206e, 1050670->0x290030, 1050671->0x200fc82, 1050672->0x50003, 1050673->0x180000, 1050674->0x190000, 1050675->0xb0000, 1050676->0xe10000, 1050677->0x2b30000, 1050678->0x4d0000, 1050679->0x1a0000, 1050680->0x10a0001, 1050681->0xa40000, 1050682->0x1020006, 1050683->0x1c507ae, 1050684->?, 1050685->0x40004, 1050686->0x30001, 1050687->?, 1050688->0x23001c, 1050689->0x30540000, 1050690->0x540ce0, 1050691->0x540ba2, 1050692->0x106e0bfa, 1050693->0x14ec, 1050694->0xce03054, 1050695->0xba20054, 1050696->0xbe70054, 1050697->0x14ec106e, 1050698->0x30540000, 1050699->0x540ce0, 1050700->0x540ba2, 1050701->0x106e0bed, 1050702->0x14ec, 1050703->0xcc03054, 1050704->0x2120112, 1050705->0x7393072, 1050706->0xe0210, 1050707->0x20000, 1050708->0x0001, 1050709->?, 1050710->0x2001c, 1050711->0x120000, 1050712->0x4000f, 1050713->0x20002, 1050714->?, 1050715->0x15001c, 1050716->0x3380000, 1050717->0x106e0011, 1050718->0x32a17, 1050719->0x5112000a, 1050720->0xa1034, 1050721->0x5d1001a, 1050722->0x2a20206e, 1050723->0xa0003, 1050724->0x40038, 1050725->0xf1012, 1050726->?, 1050727->0x20000, 1050728->0x0001, 1050729->?, 1050730->0x3001c, 1050731->0x10550000, 1050732->0xf0cd5, 1050733->0x30000, 1050734->0x0001, 1050735->?, 1050736->0x17001c, 1050737->0x21540000, 1050738->0x1380cd0, 1050739->0x120013, 1050740->0xcd02154, 1050741->0x10351121, 1050742->0x2154000d, 1050743->0x1440cd0, 1050744->0x1380001, 1050745->0x1120004, 1050746->0xd8010f, 1050747->?, 1050748->?, 1050749->0x50000, 1050750->0x20002, 1050751->?, 1050752->0x19001c, 1050753->0x1a0000, 1050754->0x1220a18, 1050755->0x107003ba, 1050756->0x12a35, 1050757->0x2471021a, 1050758->0x2a3e206e, 1050759->0x10c0021, 1050760->0x2a3e206e, 1050761->0x10c0041, 1050762->0x2a43106e, 1050763->0x10c0001, 1050764->0x2a82071, 1050765->0xe0010, 1050766->0x50000, 1050767->0x20002, 1050768->?, 1050769->0x19001c, 1050770->0x1a0000, 1050771->0x1220a18, 1050772->0x107003ba, 1050773->0x12a35, 1050774->0x2471021a, 1050775->0x2a3e206e, 1050776->0x10c0021, 1050777->0x2a3e206e, 1050778->0x10c0041, 1050779->0x2a43106e, 1050780->0x10c0001, 1050781->0x2aa2071, 1050782->0xe0010, 1050783->0x40000, 1050784->0x20001, 1050785->?, 1050786->0x33001c, 1050787->0x2120000, 1050788->0xced3154, 1050789->0x30139, 1050790->0x106e000e, 1050791->0x31635, 1050792->0x3154000c, 1050793->0x1320cec, 1050794->0x11afff9, 1050795->0x206e1e6e, 1050796->0x131645, 1050797->0x166b1070, 1050798->0x325b0003, 1050799->0x325b0cd1, 1050800->0x380cec, 1050801->0x11affeb, 1050802->0x206e1979, 1050803->0x131645, 1050804->0xcec305b, 1050805->0xcec3154, 1050806->0x2706106e, 1050807->0x10c0001, 1050808->0xcd1315b, 1050809->0xcd63155, 1050810->?, 1050811->0x16571070, 1050812->?, 1050813->0x90000, 1050814->0x20003, 1050815->?, 1050816->0x99001c, 1050817->0x7380000, 1050818->0x41a0036, 1050819->0x206e04b3, 1050820->0x472a1e, 1050821->0x3421030c, 1050822->0x43e4423, 1050823->0xcd0645b, 1050824->0x34210112, 1050825->0x274135, 1050826->0xcd06454, 1050827->0x1030546, 1050828->0x29c81071, 1050829->0x50a0005, 1050830->0x104054b, 1050831->0x10101d8, 1050832->0xdf128, 1050833->0x3ba0422, 1050834->0x2a351070, 1050835->0x51a0004, 1050836->0x206e2f39, 1050837->0x542a3e, 1050838->0x206e040c, 1050839->0x42a3d, 1050840->0x106e040c, 1050841->0x42a43, 1050842->0x206e040c, 1050843->0x461646, 1050844->0x422e628, 1050845->0x107003ba, 1050846->0x42a35, 1050847->0x8ba051a, 1050848->0x2a3e206e, 1050849->0x40c0054, 1050850->0x2a3e206e, 1050851->0x40c0074, 1050852->0x2a43106e, 1050853->0x40c0004, 1050854->0x1645206e, 1050855->0x8380046, 1050856->0x41a0036, 1050857->0x206e04b3, 1050858->0x482a1e, 1050859->0x2421020c, 1050860->0x43e4423, 1050861->0xccf645b, 1050862->0x24210112, 1050863->0x274135, 1050864->0xccf6454, 1050865->0x1020546, 1050866->0x29c81071, 1050867->0x50a0005, 1050868->0x104054b, 1050869->0x10101d8, 1050870->0xdf128, 1050871->0x3ba0422, 1050872->0x2a351070, 1050873->0x51a0004, 1050874->0x206e08bd, 1050875->0x542a3e, 1050876->0x206e040c, 1050877->0x42a3d, 1050878->0x106e040c, 1050879->0x42a43, 1050880->0x206e040c, 1050881->0x461646, 1050882->0x422e628, 1050883->0x107003ba, 1050884->0x42a35, 1050885->0x8b9051a, 1050886->0x2a3e206e, 1050887->0x40c0054, 1050888->0x2a3e206e, 1050889->0x40c0084, 1050890->0x2a43106e, 1050891->0x40c0004, 1050892->0x1645206e, 1050893->0xe0046, 1050894->0x110000, 1050895->0xa0000, 1050896->0x5d0001, 1050897->0xa0000, 1050898->0x1020005, 1050899->0x11e07ae, 1050900->0x6a07ae, 1050901->0x50000, 1050902->0x30001, 1050903->?, 1050904->0x9e001c, 1050905->0x3120000, 1050906->0x231012, 1050907->0x405b043e, 1050908->0x40540ce1, 1050909->0x34b0ce1, 1050910->0x620300, 1050911->0x41540cad, 1050912->0x10720cc0, 1050913->0x106aa, 1050914->0x106e010c, 1050915->0x10671, 1050916->0x44010a, 1050917->0x2b0100, 1050918->0x007e, 1050919->0xce14054, 1050920->0x3000144, 1050921->0x10101d8, 1050922->0x300014b, 1050923->0xcc04054, 1050924->0x190113, 1050925->0xce14254, 1050926->0x164a306e, 1050927->0x10c0214, 1050928->0x6a52072, 1050929->0x40540010, 1050930->0x1440ce1, 1050931->0x1d80300, 1050932->0x14b0101, 1050933->0x40540300, 1050934->0x1130cc0, 1050935->0x42540018, 1050936->0x306e0ce1, 1050937->0x214164a, 1050938->0x2072010c, 1050939->0x1006b0, 1050940->0xce14054, 1050941->0x3000144, 1050942->0x10101d8, 1050943->0x300014b, 1050944->0xcc04054, 1050945->0x42545112, 1050946->0x306e0ce1, 1050947->0x214164a, 1050948->0x2072010c, 1050949->0x100693, 1050950->0x4054000e, 1050951->0x106e0cdd, 1050952->0x02e6, 1050953->0xcdc4054, 1050954->0x3fd106e, 1050955->0x106e0000, 1050956->0x41667, 1050957->0xccd435c, 1050958->0x164f106e, 1050959->?, 1050960->0xcdd4054, 1050961->0x2e5106e, 1050962->0x40540000, 1050963->0x106e0cdc, 1050964->0x03fd, 1050965->0x1667106e, 1050966->0x435c0004, 1050967->0x106e0ccd, 1050968->0x4163f, 1050969->0x38000a, 1050970->0x13000c, 1050971->0x41540012, 1050972->0x106e0ce7, 1050973->0x102c4, 1050974->0x1032010a, 1050975->0x106e0005, 1050976->0x4164f, 1050977->0x163f106e, 1050978->0xa0004, 1050979->?, 1050980->0x100c428, 1050981->0x10002, 1050982->0x420000, 1050983->0x550000, 1050984->0x210000, 1050985->0x50001, 1050986->?, 1050987->0x64d001c, 1050988->0x80000, 1050989->0x540020, 1050990->0x1c080ce0, 1050991->0x80000, 1050992->0x540020, 1050993->0x1d080cdd, 1050994->0x1740000, 1050995->0x1d02c2, 1050996->0x2741d0c, 1050997->0x1c148b, 1050998->0x1c391c0a, 1050999->0x80018, 1051000->0x540020, 1051001->0x1c080ce0, 1051002->0x80000, 1051003->0x540020, 1051004->0x1d080cdd, 1051005->0x1740000, 1051006->0x1d02c8, 1051007->0x2741d0a, 1051008->0x1c148f, 1051009->0x1c381c0a, 1051010->0x1c1a04bc, 1051011->0x8464c, 1051012->0x1080020, 1051013->0x206e001c, 1051014->0x101645, 1051015->0x200008, 1051016->0xcdd0054, 1051017->0x1c08, 1051018->0x1d13, 1051019->0x2e30274, 1051020->0x8001c, 1051021->0x540020, 1051022->0x1c080cdd, 1051023->0x1d130000, 1051024->0x2740001, 1051025->0x1c02d6, 1051026->0x2f1c63, 1051027->0x221c38, 1051028->0x4f701c1a, 1051029->0x1d13, 1051030->0x1de0277, 1051031->0x1c0a001c, 1051032->0x181c38, 1051033->0x200008, 1051034->0xcdd0054, 1051035->0x1c08, 1051036->0x11d13, 1051037->0x2e90274, 1051038->0x8001c, 1051039->0x540020, 1051040->0x1c080cdd, 1051041->0x1d130000, 1051042->0x2740001, 1051043->0x1c02db, 1051044->0x16710174, 1051045->0x1740020, 1051046->0x201659, 1051047->0x3ba1c22, 1051048->0x2a350176, 1051049->0x1d1a001c, 1051050->0x2744645, 1051051->0x1c2a3e, 1051052->0x81c0c, 1051053->0x540020, 1051054->0x1d080ce7, 1051055->0x2740000, 1051056->0x1c2a3d, 1051057->0x1d1a1c0c, 1051058->0x27425d5, 1051059->0x1c2a3e, 1051060->0x81c0c, 1051061->0x540020, 1051062->0x1d080cdd, 1051063->0x2740000, 1051064->0x1c2a3d, 1051065->0x1d1a1c0c, 1051066->0x27425c7, 1051067->0x1c2a3e, 1051068->0x1741c0c, 1051069->0x1c2a43, 1051070->0x81c0c, 1051071->0x1080020, 1051072->0x206e001c, 1051073->0x101645, 1051074->0x200008, 1051075->0xce70054, 1051076->0x1c08, 1051077->0x2cd0174, 1051078->0x1c0a001c, 1051079->0x4891c38, 1051080->0x200008, 1051081->0xcdd0054, 1051082->0x1c08, 1051083->0x2cd0174, 1051084->0x1c0a001c, 1051085->0x47d1c39, 1051086->0x81f12, 1051087->0x540020, 1051088->0x1c080ce7, 1051089->0x1740000, 1051090->0x1c02cd, 1051091->0x1c391c0a, 1051092->0x80473, 1051093->0x540020, 1051094->0x1c080cdd, 1051095->0x1740000, 1051096->0x1c02cd, 1051097->0x1c381c0a, 1051098->0x1d120467, 1051099->0x200008, 1051100->0xce70054, 1051101->0x1c08, 1051102->0x2bb0174, 1051103->0x1c0a001c, 1051104->0x45d1c38, 1051105->0x200008, 1051106->0xcdd0054, 1051107->0x1c08, 1051108->0x2bb0174, 1051109->0x1c0a001c, 1051110->0x4511c39, 1051111->0x81712, 1051112->0x540020, 1051113->0x1c080ce7, 1051114->0x1740000, 1051115->0x1c02bb, 1051116->0x1c391c0a, 1051117->0x80447, 1051118->0x540020, 1051119->0x1c080cdd, 1051120->0x1740000, 1051121->0x1c02bb, 1051122->0x1c381c0a, 1051123->0x1912043b, 1051124->0x200008, 1051125->0xce70054, 1051126->0x1c08, 1051127->0x2bb0174, 1051128->0x1c0a001c, 1051129->0x200008, 1051130->0xcdd0054, 1051131->0x1d08, 1051132->0x2bb0174, 1051133->0x1d0a001d, 1051134->0x1c0002, 1051135->0x1d0102, 1051136->0x4231032, 1051137->0x81812, 1051138->0x540020, 1051139->0x1c080ce7, 1051140->0x1740000, 1051141->0x1c02c5, 1051142->0x81c0a, 1051143->0x540020, 1051144->0x1d080cdd, 1051145->0x1740000, 1051146->0x1d02c5, 1051147->0x21d0a, 1051148->0x102001c, 1051149->0x1032001d, 1051150->0x1113040b, 1051151->0x80001, 1051152->0x540020, 1051153->0x1c080ce7, 1051154->0x1740000, 1051155->0x1c02c4, 1051156->0x81c0a, 1051157->0x540020, 1051158->0x1d080cdd, 1051159->0x1740000, 1051160->0x1d02c4, 1051161->0x21d0a, 1051162->0x102001c, 1051163->0x1032001d, 1051164->0x101303f3, 1051165->0x80001, 1051166->0x540020, 1051167->0x1c080cdd, 1051168->0x80000, 1051169->0x540020, 1051170->0x1d080ce7, 1051171->0x2740000, 1051172->0x1c02b3, 1051173->0x1c391c0a, 1051174->0x1a1203e3, 1051175->0x200008, 1051176->0xce70054, 1051177->0x1c08, 1051178->0x2ce0174, 1051179->0x1c0a001c, 1051180->0x3d91c39, 1051181->0x200008, 1051182->0xcdd0054, 1051183->0x1c08, 1051184->0x2ce0174, 1051185->0x1c0a001c, 1051186->0x3cd1c38, 1051187->0x11313, 1051188->0x200008, 1051189->0xce70054, 1051190->0x1c08, 1051191->0x2ce0174, 1051192->0x1c0a001c, 1051193->0x3c31c38, 1051194->0x200008, 1051195->0xcdd0054, 1051196->0x1c08, 1051197->0x2ce0174, 1051198->0x1c0a001c, 1051199->0x3b71c39, 1051200->0x11213, 1051201->0x200008, 1051202->0xce70054, 1051203->0x1c08, 1051204->0x2bc0174, 1051205->0x1c0a001c, 1051206->0x3ad1c39, 1051207->0x200008, 1051208->0xcdd0054, 1051209->0x1c08, 1051210->0x2bc0174, 1051211->0x1c0a001c, 1051212->0x3a11c38, 1051213->0x81c12, 1051214->0x540020, 1051215->0x1c080ce7, 1051216->0x1740000, 1051217->0x1c02bc, 1051218->0x1c381c0a, 1051219->0x80397, 1051220->0x540020, 1051221->0x1c080cdd, 1051222->0x1740000, 1051223->0x1c02bc, 1051224->0x1c391c0a, 1051225->0x1b12038b, 1051226->0x200008, 1051227->0xcdc0054, 1051228->0x1c08, 1051229->0x200008, 1051230->0xcbf0054, 1051231->0x1d08, 1051232->0x3f80274, 1051233->0x1c0a001c, 1051234->0x37b1c39, 1051235->0x81e12, 1051236->0x540020, 1051237->0x1c080ce0, 1051238->0x1740000, 1051239->0x1c1454, 1051240->0x1d1a1c0c, 1051241->0x2744604, 1051242->0x1c0058, 1051243->0x1a1f1a0c, 1051244->0x800d2, 1051245->0x540020, 1051246->0x1c080ce7, 1051247->0x1740000, 1051248->0x1c02cd, 1051249->0x81c0a, 1051250->0x540020, 1051251->0x1d080cdd, 1051252->0x1740000, 1051253->0x1d02cd, 1051254->0x21d0a, 1051255->0x102001c, 1051256->0x1033001d, 1051257->0x8001c, 1051258->0x540020, 1051259->0x1c080ce7, 1051260->0x1740000, 1051261->0x1c02bb, 1051262->0x81c0a, 1051263->0x540020, 1051264->0x1d080cdd, 1051265->0x1740000, 1051266->0x1d02bb, 1051267->0x21d0a, 1051268->0x102001c, 1051269->0x1032001d, 1051270->0x1c140058, 1051271->0xc3c4, 1051272->0x41d13, 1051273->0x1d0002, 1051274->0x4a60023, 1051275->0x1d08, 1051276->0x1e13, 1051277->0x200008, 1051278->0xce70054, 1051279->0x1f08, 1051280->0x2cd0174, 1051281->0x1f0a001f, 1051282->0x29cf0177, 1051283->0x1f0c001f, 1051284->0x1e1d1f4d, 1051285->0x11e13, 1051286->0x200008, 1051287->0xce70054, 1051288->0x1f08, 1051289->0x2bb0174, 1051290->0x1f0a001f, 1051291->0x29cf0177, 1051292->0x1f0c001f, 1051293->0x1e1d1f4d, 1051294->0x21e13, 1051295->0x200008, 1051296->0xcdd0054, 1051297->0x1f08, 1051298->0x2cd0174, 1051299->0x1f0a001f, 1051300->0x29cf0177, 1051301->0x1f0c001f, 1051302->0x1e1d1f4d, 1051303->0x31e13, 1051304->0x200008, 1051305->0xcdd0054, 1051306->0x1f08, 1051307->0x2bb0174, 1051308->0x1f0a001f, 1051309->0x29cf0177, 1051310->0x1f0c001f, 1051311->0x1e1d1f4d, 1051312->0x4590277, 1051313->0x8001c, 1051314->0x540020, 1051315->0x1b080ce7, 1051316->0x80000, 1051317->0x540020, 1051318->0x1c080cdd, 1051319->0x80000, 1051320->0x108001c, 1051321->0x105b0020, 1051322->0x80ce7, 1051323->0x108001b, 1051324->0x105b0020, 1051325->0x80cdd, 1051326->0x540020, 1051327->0x1c080cdd, 1051328->0x1740000, 1051329->0x1c02e6, 1051330->0x200008, 1051331->0xcbf0054, 1051332->0x1908, 1051333->0x200008, 1051334->0xcdc0054, 1051335->0x1c08, 1051336->0x1c0008, 1051337->0x200108, 1051338->0xcbf105b, 1051339->0x190008, 1051340->0x200108, 1051341->0xcdc105b, 1051342->0x51138, 1051343->0x166f0174, 1051344->0x10380020, 1051345->0x80040, 1051346->0x540020, 1051347->0x1c080ce0, 1051348->0x1740000, 1051349->0x1c146d, 1051350->0x81c0a, 1051351->0x540020, 1051352->0x1d080ce7, 1051353->0x1740000, 1051354->0x1d02c4, 1051355->0x81d0a, 1051356->0x102001a, 1051357->0x202001c, 1051358->0x306e001d, 1051359->0x21003f4, 1051360->0x163f0174, 1051361->0x1c0a0020, 1051362->0x1d1c38, 1051363->0x121c13, 1051364->0x200008, 1051365->0xce70054, 1051366->0x1d08, 1051367->0x2c40174, 1051368->0x1d0a001d, 1051369->0x1c0002, 1051370->0x1d0102, 1051371->0xb1033, 1051372->0x46421c1a, 1051373->0x200008, 1051374->0x1c0108, 1051375->0x1645206e, 1051376->0xf380010, 1051377->0x8000b, 1051378->0x540020, 1051379->0x1c080cdb, 1051380->0x1740000, 1051381->0x1c01ce, 1051382->0x1530a38, 1051383->0x200008, 1051384->0xcc00054, 1051385->0x1c08, 1051386->0x6aa0178, 1051387->0x1c0c001c, 1051388->0x6700174, 1051389->0x1c0a001c, 1051390->0x2b1c38, 1051391->0x200008, 1051392->0xcd60055, 1051393->0x1c02, 1051394->0x231c39, 1051395->0x200008, 1051396->0xce70054, 1051397->0x1c08, 1051398->0x2cd0174, 1051399->0x1c0a001c, 1051400->0x2321c39, 1051401->0x200008, 1051402->0xce00054, 1051403->0x1c08, 1051404->0x144f0174, 1051405->0x50c001c, 1051406->0x200008, 1051407->0xce70054, 1051408->0x1c08, 1051409->0x1c0008, 1051410->0x2df206e, 1051411->0x80050, 1051412->0x540020, 1051413->0x1c080ce0, 1051414->0x1d1a0000, 1051415->0x83566, 1051416->0x540020, 1051417->0x1e080ce7, 1051418->0x1740000, 1051419->0x1e02c0, 1051420->0x3741e0c, 1051421->0x1c14ca, 1051422->0x356a1c1a, 1051423->0x1d1a, 1051424->0x1dd0277, 1051425->0x170c001c, 1051426->0x200008, 1051427->0xce70054, 1051428->0x1c08, 1051429->0x2c20174, 1051430->0x160c001c, 1051431->0x200008, 1051432->0x160108, 1051433->0x163e206e, 1051434->0x1c0a0010, 1051435->0x161c38, 1051436->0x200008, 1051437->0xce70054, 1051438->0x1c08, 1051439->0x2c80174, 1051440->0x180a001c, 1051441->0x200008, 1051442->0x160108, 1051443->0x180202, 1051444->0x1624306e, 1051445->0x160c0210, 1051446->0x200008, 1051447->0xce00054, 1051448->0x1c08, 1051449->0x356a1d1a, 1051450->0x1c0008, 1051451->0x1d0108, 1051452->0x160208, 1051453->0x14ca306e, 1051454->0x80210, 1051455->0x540020, 1051456->0x1c080ce0, 1051457->0x1740000, 1051458->0x1c1454, 1051459->0x81c0c, 1051460->0x1080020, 1051461->0x2080016, 1051462->0x3080017, 1051463->0x406e001c, 1051464->0x3210166d, 1051465->0x200008, 1051466->0x160108, 1051467->0x163e206e, 1051468->0x1c0a0010, 1051469->0x1bf1c38, 1051470->0x3ba1c22, 1051471->0x2a350176, 1051472->0x1d1a001c, 1051473->0x27444f1, 1051474->0x1c2a3e, 1051475->0x81c0c, 1051476->0x108001c, 1051477->0x206e0016, 1051478->0x102a3e, 1051479->0x1d1a1c0c, 1051480->0x27437b3, 1051481->0x1c2a3e, 1051482->0x1741c0c, 1051483->0x1c2a43, 1051484->0x81c0c, 1051485->0x1080020, 1051486->0x206e001c, 1051487->0x101645, 1051488->0x200008, 1051489->0xce00054, 1051490->0x1c08, 1051491->0x35681d1a, 1051492->0x1e1a, 1051493->0x14ca0374, 1051494->0x1c13001c, 1051495->0x20000, 1051496->0x108001c, 1051497->0x105c0020, 1051498->0x80ccd, 1051499->0x540020, 1051500->0x1d080ce0, 1051501->0x1e1a0000, 1051502->0x83569, 1051503->0x540020, 1051504->0x1c080ce7, 1051505->0x1740000, 1051506->0x1c02ce, 1051507->0x1c391c0a, 1051508->0x8000e, 1051509->0x540020, 1051510->0x1c080ce7, 1051511->0x1740000, 1051512->0x1c02bc, 1051513->0x1c381c0a, 1051514->0x1c1a020d, 1051515->0x85039, 1051516->0x108001d, 1051517->0x208001e, 1051518->0x306e001c, 1051519->0x21014ca, 1051520->0x16700174, 1051521->0x80020, 1051522->0x540020, 1051523->0x1c080ce7, 1051524->0x80000, 1051525->0x1080020, 1051526->0x206e001c, 1051527->0x101666, 1051528->0x3ba1c22, 1051529->0x2a350176, 1051530->0x1d1a001c, 1051531->0x274083a, 1051532->0x1c2a3e, 1051533->0x81c0c, 1051534->0x540020, 1051535->0x1d080ce7, 1051536->0x2740000, 1051537->0x1c2a3d, 1051538->0x1741c0c, 1051539->0x1c2a43, 1051540->0x81c0c, 1051541->0x1080020, 1051542->0x206e001c, 1051543->0x101645, 1051544->0x200008, 1051545->0xce00054, 1051546->0x1c08, 1051547->0x200008, 1051548->0xce70054, 1051549->0x1d08, 1051550->0x149e0274, 1051551->0x938001c, 1051552->0x8000b, 1051553->0x540020, 1051554->0x1c080cca, 1051555->0x1740000, 1051556->0x1c01ce, 1051557->0x40839, 1051558->0x301038, 1051559->0x16470174, 1051560->0x1740020, 1051561->0x20163f, 1051562->0x1c381c0a, 1051563->0x1c1301af, 1051564->0x80012, 1051565->0x540020, 1051566->0x1d080ce7, 1051567->0x1740000, 1051568->0x1d02c4, 1051569->0x21d0a, 1051570->0x102001c, 1051571->0x1033001d, 1051572->0x8019d, 1051573->0x540020, 1051574->0x1c080ce0, 1051575->0x1d1a0000, 1051576->0x27439a7, 1051577->0x1c1495, 1051578->0x11c13, 1051579->0x1c0002, 1051580->0x200108, 1051581->0xcd7105c, 1051582->0xb0738, 1051583->0x200008, 1051584->0xcb90054, 1051585->0x1c08, 1051586->0x1ce0174, 1051587->0x1338001c, 1051588->0x8000b, 1051589->0x540020, 1051590->0x1c080cef, 1051591->0x1740000, 1051592->0x1c01ce, 1051593->0xb1238, 1051594->0x200008, 1051595->0xcee0054, 1051596->0x1c08, 1051597->0x1ce0174, 1051598->0xc38001c, 1051599->0x8000b, 1051600->0x540020, 1051601->0x1c080cc7, 1051602->0x1740000, 1051603->0x1c01ce, 1051604->0xb0b38, 1051605->0x200008, 1051606->0xcc60054, 1051607->0x1c08, 1051608->0x1ce0174, 1051609->0xe38001c, 1051610->0x8000b, 1051611->0x540020, 1051612->0x1c080ce0, 1051613->0x1740000, 1051614->0x1c1499, 1051615->0x8000e, 1051616->0x540020, 1051617->0x1c080ce0, 1051618->0x80000, 1051619->0x540020, 1051620->0x1d080cdd, 1051621->0x1740000, 1051622->0x1d02c2, 1051623->0x2741d0c, 1051624->0x1c148c, 1051625->0x1c391c0a, 1051626->0x80018, 1051627->0x540020, 1051628->0x1c080ce0, 1051629->0x80000, 1051630->0x540020, 1051631->0x1d080cdd, 1051632->0x1740000, 1051633->0x1d02c8, 1051634->0x2741d0a, 1051635->0x1c1490, 1051636->0x1c381c0a, 1051637->0x1c1afb3b, 1051638->0x8464d, 1051639->0x1080020, 1051640->0x206e001c, 1051641->0x101645, 1051642->0x200008, 1051643->0xcdd0054, 1051644->0x1c08, 1051645->0x11d13, 1051646->0x2e30274, 1051647->0x8001c, 1051648->0x540020, 1051649->0x1c080cdd, 1051650->0x1d130000, 1051651->0x2740000, 1051652->0x1c02d6, 1051653->0x200008, 1051654->0xcdd0054, 1051655->0x1c08, 1051656->0x1d13, 1051657->0x2d70274, 1051658->0x29001c, 1051659->0xf12fb0f, 1051660->?, 1051661->0x290d12, 1051662->0x712fb9b, 1051663->?, 1051664->0x290912, 1051665->0x812fbc7, 1051666->?, 1051667->0x1113, 1051668->?, 1051669->0x1013, 1051670->?, 1051671->0x290a12, 1051672->0x1313fc1f, 1051673->0x290000, 1051674->0x1213fc35, 1051675->0x290000, 1051676->0xc12fc4b, 1051677->?, 1051678->0x290b12, 1051679->0xe12fc77, 1051680->?, 1051681->0x200008, 1051682->0xce00054, 1051683->0x1c08, 1051684->0x14540174, 1051685->0x1c0c001c, 1051686->0x1041d14, 1051687->0x2740104, 1051688->0x1c0059, 1051689->0x1781c0c, 1051690->0x1c29ab, 1051691->0x29050c, 1051692->0x141afdc5, 1051693->0x1c130000, 1051694->0x1d130000, 1051695->0x80003, 1051696->0x1020016, 1051697->0x202001c, 1051698->0x306e001d, 1051699->0x2102a22, 1051700->0x1c13150c, 1051701->0x1d130000, 1051702->0x80003, 1051703->0x1020016, 1051704->0x202001c, 1051705->0x306e001d, 1051706->0x2102a22, 1051707->0x1771c0c, 1051708->0x1c29c8, 1051709->0x1771c0a, 1051710->0x1c0a33, 1051711->0x8140c, 1051712->0x540020, 1051713->0x1c080ce0, 1051714->0x1d1a0000, 1051715->0x83568, 1051716->0x108001c, 1051717->0x208001d, 1051718->0x306e0014, 1051719->0x21014ca, 1051720->0x11c13, 1051721->0x1c0002, 1051722->0x200108, 1051723->0xccd105c, 1051724->0x200008, 1051725->0x160108, 1051726->0x1663206e, 1051727->0x80010, 1051728->0x540020, 1051729->0x1c080ce0, 1051730->0x80000, 1051731->0x550020, 1051732->0x1d020cda, 1051733->0x80000, 1051734->0x1080020, 1051735->0x208001c, 1051736->0x3080016, 1051737->0x4020017, 1051738->0x546e001d, 1051739->0x32101669, 1051740->0x1c381c0a, 1051741->0x8fe1c, 1051742->0x1080020, 1051743->0x206e0014, 1051744->0x101623, 1051745->?, 1051746->0x1c22060d, 1051747->0x17603ba, 1051748->0x1c2a35, 1051749->0x46461d1a, 1051750->0x2a3e0274, 1051751->0x1c0c001c, 1051752->0x1c0008, 1051753->0x2a3d206e, 1051754->0x1c0c0060, 1051755->0x2a430174, 1051756->0x1c0c001c, 1051757->0x200008, 1051758->0x1c0108, 1051759->0x1646206e, 1051760->?, 1051761->0x1c22060d, 1051762->0x17603ba, 1051763->0x1c2a35, 1051764->0x46461d1a, 1051765->0x2a3e0274, 1051766->0x1c0c001c, 1051767->0x1c0008, 1051768->0x2a3d206e, 1051769->0x1c0c0060, 1051770->0x2a430174, 1051771->0x1c0c001c, 1051772->0x200008, 1051773->0x1c0108, 1051774->0x1646206e, 1051775->?, 1051776->0x2fb61c1a, 1051777->?, 1051778->0x200008, 1051779->0xce70054, 1051780->0x1c08, 1051781->0x200008, 1051782->0x1c0108, 1051783->0x1651206e, 1051784->0x80010, 1051785->0x540020, 1051786->0x1c080ce0, 1051787->0x1d130000, 1051788->0x2740000, 1051789->0x1c1495, 1051790->0x1c13, 1051791->0x1c0002, 1051792->0x200108, 1051793->0xcd7105c, 1051794->?, 1051795->0x5940000, 1051796->0x110000, 1051797->0x2010001, 1051798->0xbeb07ae, 1051799->0xc8907bb, 1051800->0x40000, 1051801->0x20002, 1051802->?, 1051803->0x2c001c, 1051804->0x10120000, 1051805->0xb032b, 1051806->0x11a0000, 1051807->0x206e476f, 1051808->0x121646, 1051809->0x12000f, 1051810->0x100fe28, 1051811->0x000e, 1051812->0x80000, 1051813->0x80000, 1051814->0x80000, 1051815->0x80000, 1051816->0x80000, 1051817->0x80000, 1051818->0x90000, 1051819->0x90000, 1051820->0x90000, 1051821->0x30000, 1051822->0x30000, 1051823->0x30000, 1051824->0x90000, 1051825->0x90000, 1051826->0x30000, 1051827->0x0002, 1051828->?, 1051829->0x7001c, 1051830->0x50120000, 1051831->0x42033, 1051832->0xf1012, 1051833->?, 1051834->0x50000, 1051835->0x20002, 1051836->?, 1051837->0x30001c, 1051838->0x1120000, 1051839->0x42b1012, 1051840->0x001e, 1051841->0x3ba0122, 1051842->0x2a351070, 1051843->0x21a0001, 1051844->0x206e4811, 1051845->0x212a3e, 1051846->0x206e010c, 1051847->0x412a3a, 1051848->0x106e010c, 1051849->0x12a43, 1051850->0x206e010c, 1051851->0x131646, 1051852->0x1001000f, 1051853->0x1001fe28, 1051854->0x100fc28, 1051855->0x0006, 1051856->0x190000, 1051857->0x1a0000, 1051858->0x190000, 1051859->0x190000, 1051860->0x190000, 1051861->0x1c0000, 1051862->0x60000, 1051863->0x40004, 1051864->?, 1051865->0x14001c, 1051866->0x220000, 1051867->0x40700077, 1051868->0x543001c2, 1051869->0xcbc2154, 1051870->0x1cb206e, 1051871->0x106e0001, 1051872->0x21640, 1051873->0x138010a, 1051874->0x106e0005, 1051875->0x01c6, 1051876->0x6000e, 1051877->0x20002, 1051878->?, 1051879->0x45001c, 1051880->0x2220000, 1051881->0x107003ba, 1051882->0x22a35, 1051883->0x1183031a, 1051884->0x2a3e206e, 1051885->0x20c0032, 1051886->0x2a3f206e, 1051887->0x20c0052, 1051888->0x2a43106e, 1051889->0x20c0002, 1051890->0x1645206e, 1051891->0x42550024, 1051892->0x2380cd2, 1051893->0x539002a, 1051894->0x42550028, 1051895->0x2380cb8, 1051896->0x455c0024, 1051897->0x42540cd2, 1051898->0x106e0ce0, 1051899->0x21454, 1051900->0x21a010c, 1051901->0x206e2713, 1051902->0x210058, 1051903->0x1f000c, 1051904->0x42540008, 1051905->0x206e0ce3, 1051906->0x200006, 1051907->0x425c0212, 1051908->0x2130cb8, 1051909->0x206e002d, 1051910->0x241649, 1051911->0x206e020c, 1051912->0x24165e, 1051913->0x455c000e, 1051914->?, 1051915->0x60000, 1051916->0x30002, 1051917->?, 1051918->0x2a001c, 1051919->0x41540000, 1051920->0x2120cce, 1051921->0x306e3312, 1051922->0x3252a22, 1051923->0x1071020c, 1051924->0x229c8, 1051925->0x206e020a, 1051926->0x210852, 1051927->0x38000c, 1051928->0x106e0010, 1051929->0x2a14, 1051930->0x139010a, 1051931->0x4154000a, 1051932->0x21a0ce0, 1051933->0x306e3567, 1051934->0x2114ca, 1051935->0x4154000e, 1051936->0x21a0ce0, 1051937->0x31a3567, 1051938->0x306e0478, 1051939->0x32114ca, 1051940->0x5f628, 1051941->0x30001, 1051942->?, 1051943->0x44001c, 1051944->0x3120000, 1051945->0xcc94155, 1051946->0x130138, 1051947->0xcc04154, 1051948->0x6aa1072, 1051949->0x10c0001, 1051950->0x3420262, 1051951->0x92133, 1051952->0xcc04154, 1051953->0x30721212, 1051954->0x3210739, 1051955->0x4155000e, 1051956->0x1390cc9, 1051957->0x41540016, 1051958->0x10720cc0, 1051959->0x106aa, 1051960->0x106e010c, 1051961->0x10670, 1051962->0x138010a, 1051963->0x4154000a, 1051964->0x10540ce0, 1051965->0x206e0ba8, 1051966->0x41650, 1051967->0x4155e828, 1051968->0x1380ccb, 1051969->0x4154ffe5, 1051970->0x10720cc0, 1051971->0x106aa, 1051972->0x106e010c, 1051973->0x1066f, 1051974->0x138010a, 1051975->0x4154ffd9, 1051976->0x20720cc0, 1051977->0x3106f7, 1051978->0xed228, 1051979->0x20002, 1051980->?, 1051981->0x95001c, 1051982->0x3b120000, 1051983->0x16122a12, 1051984->0x106e0712, 1051985->0xd02cd, 1051986->0x839080a, 1051987->0x6501004a, 1051988->0x300538, 1051989->0x2ce106e, 1051990->0x80a000d, 1051991->0x580838, 1051992->0xce0c854, 1051993->0x1454106e, 1051994->0x80c0008, 1051995->0x55106e, 1051996->0x80c0008, 1051997->0x450914, 1051998->0x206e0107, 1051999->0x9800b4, 1052000->0x338030c, 1052001->0x38210033, 1052002->0x30083d, 1052003->0x2ea206e, 1052004->0x106e00ad, 1052005->0xd02b7, 1052006->0x212000a, 1052007->?, 1052008->0x8440009, 1052009->?, 1052010->0x206e001e, 1052011->0xbd02ea, 1052012->0x2bb106e, 1052013->0x80a000d, 1052014->0x2e0839, 1052015->0x106e6401, 1052016->0xd02c4, 1052017->0x438010a, 1052018->0x106e000b, 1052019->0xd02bc, 1052020->0x839080a, 1052021->0x206e0023, 1052022->0x7d02dc, 1052023->0x7501000e, 1052024->0x2d8b828, 1052025->?, 1052026->0x2cc106e, 1052027->0x80c000d, 1052028->0x163b206e, 1052029->0x80a008c, 1052030->0x60838, 1052031->0x2ea206e, 1052032->?, 1052033->0x2ea206e, 1052034->?, 1052035->0x2ea206e, 1052036->?, 1052037->?, 1052038->0x2d01071, 1052039->0x70a0001, 1052040->0x100738, 1052041->0xa0538, 1052042->0x2cf106e, 1052043->0x60a000d, 1052044->0x2dc206e, 1052045->?, 1052046->0x2dc206e, 1052047->?, 1052048->0x2ba106e, 1052049->0x60c000d, 1052050->0x163b206e, 1052051->0x60a006c, 1052052->0x60638, 1052053->0x2dc206e, 1052054->?, 1052055->0x2dc206e, 1052056->?, 1052057->0x30000, 1052058->0x20001, 1052059->?, 1052060->0x9001c, 1052061->0x220000, 1052062->0x11200c0, 1052063->0x2ed2070, 1052064->0x205b0010, 1052065->0xe0ceb, 1052066->0x30000, 1052067->0x20002, 1052068->?, 1052069->0x6001c, 1052070->0x10540000, 1052071->0x206e0cbc, 1052072->0x2001d1, 1052073->0x5000e, 1052074->0x20001, 1052075->?, 1052076->0x44001c, 1052077->0x106e0000, 1052078->0x4162f, 1052079->0x4052010a, 1052080->0x41590cc4, 1052081->0x42540cc4, 1052082->0x2380cbc, 1052083->0x21a000c, 1052084->0x206e08bc, 1052085->0x241645, 1052086->0xcbc4254, 1052087->0x1ce106e, 1052088->0x42520002, 1052089->0x20320cc4, 1052090->0x222002b, 1052091->0x107003ba, 1052092->0x22a35, 1052093->0x8bb031a, 1052094->0x2a3e206e, 1052095->0x20c0032, 1052096->0x2a3a206e, 1052097->0x20c0002, 1052098->0x309031a, 1052099->0x2a3e206e, 1052100->0x20c0032, 1052101->0xcc44352, 1052102->0x2a3a206e, 1052103->0x20c0032, 1052104->0x2a43106e, 1052105->0x20c0002, 1052106->0x1645206e, 1052107->0x42540024, 1052108->0x43520ce0, 1052109->0x206e0cc4, 1052110->0x32149b, 1052111->0xa000e, 1052112->0x30001, 1052113->?, 1052114->0x93001c, 1052115->0x14120000, 1052116->?, 1052117->0x106e0ce7, 1052118->0x602c0, 1052119->0x1070020c, 1052120->0x91629, 1052121->0x4033000a, 1052122->0x71002d, 1052123->0x00ba, 1052124->0x714060c, 1052125->0x10403d8, 1052126->0xbb206e, 1052127->0x60c0076, 1052128->0x29ab1072, 1052129->0x20c0006, 1052130->0x3ba0622, 1052131->0x2a351070, 1052132->0x71a0006, 1052133->0x206e5205, 1052134->0x762a3e, 1052135->0x206e060c, 1052136->0x262a3e, 1052137->0x71a060c, 1052138->0x206e0426, 1052139->0x762a3e, 1052140->0x106e060c, 1052141->0x62a43, 1052142->0x206e060c, 1052143->0x691645, 1052144->0xcc29654, 1052145->0x4432071, 1052146->0x60a0062, 1052147->0x4f0639, 1052148->0x500238, 1052149->0x61a4301, 1052150->0x27125203, 1052151->0x4a67723, 1052152->0x29a71071, 1052153->0x80c0003, 1052154->0x507084d, 1052155->0x407024d, 1052156->0x2a0a2071, 1052157->0x40c0076, 1052158->0x1645206e, 1052159->0x1220049, 1052160->0x41a001f, 1052161->0x2070277b, 1052162->0x41006a, 1052163->0x20000415, 1052164->0x6c206e, 1052165->0x41a0041, 1052166->0x306e4dad, 1052167->0x541007b, 1052168->0x4e48041a, 1052169->0x051a, 1052170->0x7a306e, 1052171->0x41a0541, 1052172->0x306e4dab, 1052173->0x341007b, 1052174->0x4636041a, 1052175->0x7a306e, 1052176->?, 1052177->0x106e0ce0, 1052178->0x4146d, 1052179->0x2071040a, 1052180->0x4103cb, 1052181->0xce09454, 1052182->0x1454106e, 1052183->0x40c0004, 1052184->0x390562, 1052185->0x65306e, 1052186->?, 1052187->0xe0cc2, 1052188->?, 1052189->0x50000, 1052190->0x40002, 1052191->?, 1052192->0x44001c, 1052193->0x220000, 1052194->0x107000b6, 1052195->0x0283, 1052196->0x16163070, 1052197->0x220043, 1052198->0x107000b1, 1052199->0x0275, 1052200->0xc73305b, 1052201->0xb10022, 1052202->0x2751070, 1052203->0x305b0000, 1052204->0x345b0c6e, 1052205->0x30540c5e, 1052206->0x1130c5e, 1052207->0x2120010, 1052208->0x1418406e, 1052209->0x30542130, 1052210->0x1f0c5f, 1052211->0x305b00b6, 1052212->0x30540c60, 1052213->0x1f0c5f, 1052214->0x12200b6, 1052215->0x107000b9, 1052216->0x1028d, 1052217->0x287206e, 1052218->0x30540010, 1052219->0x1f0c5f, 1052220->0x12200b6, 1052221->0x107000b1, 1052222->0x10275, 1052223->0x286206e, 1052224->0x1a0010, 1052225->0x206e0a0a, 1052226->0x315b5, 1052227->0x8000e, 1052228->0x10003, 1052229->?, 1052230->0x3c001c, 1052231->0x4140000, 1052232->0xffff, 1052233->0x106e1112, 1052234->0x515b4, 1052235->0x238020a, 1052236->0x10f0003, 1052237->0xc695254, 1052238->0x53542221, 1052239->0x33210c68, 1052240->?, 1052241->?, 1052242->0x52540012, 1052243->0x22210c69, 1052244->0x212035, 1052245->0xc695254, 1052246->0x20244, 1052247->0x186233, 1052248->0xc685254, 1052249->0x20244, 1052250->?, 1052251->0xc685254, 1052252->0x20244, 1052253->?, 1052254->?, 1052255->?, 1052256->0xc685254, 1052257->0x20244, 1052258->?, 1052259->0x10000d8, 1052260->0x112dd28, 1052261->0x2cf28, 1052262->0x20001, 1052263->?, 1052264->0x9001c, 1052265->0x10540000, 1052266->0x206e0c78, 1052267->0x1014d8, 1052268->0x161d106f, 1052269->0xe0001, 1052270->0x60000, 1052271->0x40004, 1052272->?, 1052273->0x21001c, 1052274->0x1a0000, 1052275->0x206e0a0b, 1052276->0x4299b, 1052277->0x161e406f, 1052278->0x225432, 1052279->0x107003ba, 1052280->0x2a35, 1052281->0x1e1011a, 1052282->0x2a3e206e, 1052283->0xc0010, 1052284->0xc5e2154, 1052285->0x2a3d206e, 1052286->0xc0010, 1052287->0x2a43106e, 1052288->0xc0000, 1052289->0x299b206e, 1052290->0xe0004, 1052291->0x40000, 1052292->0x20001, 1052293->?, 1052294->0x37001c, 1052295->0x31540000, 1052296->0x10720c62, 1052297->0x106ab, 1052298->0x213010a, 1052299->0x21340008, 1052300->0x106f0007, 1052301->0x31625, 1052302->0x11000c, 1052303->0x3d40022, 1052304->0x2a861070, 1052305->0x32540000, 1052306->0x21d0c5f, 1052307->0xc603154, 1052308->0x2a8a206e, 1052309->0x21e0010, 1052310->0x3ba0122, 1052311->0x2a351070, 1052312->0x21a0001, 1052313->0x206e30b7, 1052314->0x212a3e, 1052315->0x206e010c, 1052316->0x12a3d, 1052317->0x106e010c, 1052318->0x12a43, 1052319->0x206e010c, 1052320->0x1315b5, 1052321->0x10ddb28, 1052322->0x127021e, 1052323->0x170000, 1052324->0x60000, 1052325->0x350001, 1052326->0x10000, 1052327->0x10001, 1052328->0x40034, 1052329->0x30001, 1052330->?, 1052331->0x10001c, 1052332->0x31540000, 1052333->0x30540c7f, 1052334->0x1f0c78, 1052335->0x106e0223, 1052336->0x140a, 1052337->0x2212000a, 1052338->0x276b306e, 1052339->0xc0201, 1052340->0x70011, 1052341->0x30002, 1052342->?, 1052343->0xde001c, 1052344->0x53540000, 1052345->0x33550c78, 1052346->0x3390bb5, 1052347->0x3220031, 1052348->0x107003ba, 1052349->0x32a35, 1052350->0x1e5d041a, 1052351->0x2a3e206e, 1052352->0x30c0043, 1052353->0x2a3d206e, 1052354->0x30c0063, 1052355->0x2450041a, 1052356->0x2a3e206e, 1052357->0x30c0043, 1052358->0x386452, 1052359->0x2a3a206e, 1052360->0x30c0043, 1052361->0x25c7041a, 1052362->0x2a3e206e, 1052363->0x30c0043, 1052364->0x3f1041a, 1052365->0x2a3e206e, 1052366->0x30c0043, 1052367->0x2a43106e, 1052368->0x30c0003, 1052369->0x15b6206e, 1052370->0xe0035, 1052371->0x3ba0322, 1052372->0x2a351070, 1052373->0x41a0003, 1052374->0x206e35b9, 1052375->0x432a3e, 1052376->0x6452030c, 1052377->0x206e0038, 1052378->0x432a3a, 1052379->0x106e030c, 1052380->0x32a43, 1052381->0x206e030c, 1052382->0x3515b5, 1052383->0x386352, 1052384->0x7d032c, 1052385->0x206f0000, 1052386->0x651637, 1052387->0x31adf28, 1052388->0x206e35b2, 1052389->0x3515b5, 1052390->0x366054, 1052391->0x65001f, 1052392->0x386352, 1052393->0x15ac306e, 1052394->?, 1052395->0x15cb106e, 1052396->0x52540005, 1052397->0x21f0c6a, 1052398->0x2380329, 1052399->0x106e002b, 1052400->0x22640, 1052401->0x338030a, 1052402->0x106e0022, 1052403->0x22633, 1052404->0x535b030c, 1052405->0x106e0c6f, 1052406->0x22635, 1052407->0x535b030c, 1052408->0x106e0c70, 1052409->0x2263b, 1052410->0x106e030c, 1052411->0x22637, 1052412->0x306e040c, 1052413->0x43515bb, 1052414->0x2639106e, 1052415->0x30c0002, 1052416->0xc7b535b, 1052417->0x535c1312, 1052418->0x106e0c6b, 1052419->0x515ca, 1052420->0xc785354, 1052421->0x14a5106e, 1052422->0x106e0003, 1052423->0x515bc, 1052424->0x106e9528, 1052425->0x515cb, 1052426->0x719128, 1052427->0x03bf, 1052428->0x71010a, 1052429->0x0ea8, 1052430->0x306e030c, 1052431->0x5130ead, 1052432->0x5355051d, 1052433->0x3380c76, 1052434->0x31a0013, 1052435->0x206e0d06, 1052436->0x3515b5, 1052437->0x15ae106e, 1052438->0x3120005, 1052439->0xc76535c, 1052440->0x29051e, 1052441->0x30dff74, 1052442->0x327051e, 1052443->0xd04031a, 1052444->0x15b5206e, 1052445->?, 1052446->0x2000000, 1052447->0x50004, 1052448->0x100000, 1052449->0x1b0000, 1052450->0x3e90000, 1052451->0x70000, 1052452->0x510000, 1052453->0x160000, 1052454->0x550000, 1052455->0xb00000, 1052456->0x140000, 1052457->0xc50001, 1052458->0x50000, 1052459->0x10001, 1052460->0x1301c2, 1052461->0x60003, 1052462->?, 1052463->0x228001c, 1052464->0x51120000, 1052465->0x110002, 1052466->0x2201033, 1052467->0x120008, 1052468->0x2b0154, 1052469->0x4a8011f, 1052470->0xd1f1d07, 1052471->0x12204a8, 1052472->0x107003ba, 1052473->0x12a35, 1052474->0x35cd0f1a, 1052475->0x2a3e206e, 1052476->0x10c00f1, 1052477->0x206edf21, 1052478->0xf12a3a, 1052479->0xf1a010c, 1052480->0x206e03ab, 1052481->0xf12a3e, 1052482->0x206e010c, 1052483->0xd12a3d, 1052484->0x106e010c, 1052485->0x12a43, 1052486->0x8010c, 1052487->0x206e0010, 1052488->0x1015b5, 1052489->?, 1052490->0x13dd121, 1052491->0x112008d, 1052492->0x10d0146, 1052493->0x29c81071, 1052494->0xc0a0001, 1052495->0x4f12d121, 1052496->0xef134, 1052497->0x1463112, 1052498->0x138010d, 1052499->0x31120009, 1052500->0x10d0146, 1052501->0x29c81071, 1052502->0xe0a0001, 1052503->0xf13d121, 1052504->?, 1052505->0xb120071, 1052506->0x100008, 1052507->0xc750154, 1052508->0x2c2106e, 1052509->0xb0c0001, 1052510->0x3f120112, 1052511->0x2a22306e, 1052512->0x10c0f1b, 1052513->0x29c81071, 1052514->0x20a0001, 1052515->0x206e3112, 1052516->0x1b2a21, 1052517->0x1071010c, 1052518->0x129c8, 1052519->0x6112030a, 1052520->0x10d0146, 1052521->0x29c61071, 1052522->0x10c0001, 1052523->0x29c7106e, 1052524->0x60a0001, 1052525->0x1467112, 1052526->0x1071010d, 1052527->0x129c6, 1052528->0x106e010c, 1052529->0x129c7, 1052530->0x113050a, 1052531->0x1460008, 1052532->0x1071010d, 1052533->0x129c6, 1052534->0x106e010c, 1052535->0x129c7, 1052536->0x113040a, 1052537->0x1460009, 1052538->0x1071010d, 1052539->0x129c6, 1052540->0x106e010c, 1052541->0x129c7, 1052542->0x122070a, 1052543->0x67600b1, 1052544->0x10276, 1052545->0x100008, 1052546->0xc73015b, 1052547->0x3ba0122, 1052548->0x2a351070, 1052549->0xf1a0001, 1052550->0x206e35d5, 1052551->0xf12a3e, 1052552->0x8010c, 1052553->0xf540010, 1052554->0x206e0c73, 1052555->0xf12a3d, 1052556->0x106e010c, 1052557->0x12a43, 1052558->0x8010c, 1052559->0x206e0010, 1052560->0x1015b5, 1052561->0x100008, 1052562->0xc750154, 1052563->0x2e1206e, 1052564->0x800e1, 1052565->0x206e0010, 1052566->0xc015c1, 1052567->0x8080a, 1052568->0x1540010, 1052569->0x206e0c75, 1052570->0x8102da, 1052571->0x100008, 1052572->0xc750154, 1052573->0x100008, 1052574->0x15c0206e, 1052575->0xf0a00c0, 1052576->0x2db206e, 1052577->0x12200f1, 1052578->0x107003ba, 1052579->0x12a35, 1052580->0x35860f1a, 1052581->0x2a3e206e, 1052582->0x10c00f1, 1052583->0x2a3a206e, 1052584->0x10c0081, 1052585->0x3670f1a, 1052586->0x2a3e206e, 1052587->0x10c00f1, 1052588->0x2a3a206e, 1052589->0x10c00c1, 1052590->0x1010f1a, 1052591->0x2a3e206e, 1052592->0x10c00f1, 1052593->0x2a3a206e, 1052594->0x10c00e1, 1052595->0x2a43106e, 1052596->0x10c0001, 1052597->0x100008, 1052598->0x15b5206e, 1052599->0x80010, 1052600->0x206e0010, 1052601->0xc015c0, 1052602->0x8010a, 1052603->0x15c0010, 1052604->0xe0c63, 1052605->0x1220a0d, 1052606->0x107003ba, 1052607->0x12a35, 1052608->0x35d40f1a, 1052609->0x2a3e206e, 1052610->0x10c00f1, 1052611->0x2a3d206e, 1052612->0x10c00a1, 1052613->0x2a43106e, 1052614->0x10c0001, 1052615->0x100008, 1052616->0x15b6206e, 1052617->0x290010, 1052618->0x90dff1b, 1052619->0x100008, 1052620->0xc7c0154, 1052621->0x2c2106e, 1052622->0xb0c0001, 1052623->0x3f120112, 1052624->0x2a22306e, 1052625->0x10c0f1b, 1052626->0x29c81071, 1052627->0x20a0001, 1052628->?, 1052629->0x1220a0d, 1052630->0x107003ba, 1052631->0x12a35, 1052632->0x35d00f1a, 1052633->0x2a3e206e, 1052634->0x10c00f1, 1052635->0x2a3e206e, 1052636->0x10c00b1, 1052637->0x1310f1a, 1052638->0x2a3e206e, 1052639->0x10c00f1, 1052640->0x2a3d206e, 1052641->0x10c00a1, 1052642->0x2a43106e, 1052643->0x10c0001, 1052644->0x100008, 1052645->0x15b6206e, 1052646->0xb1a0010, 1052647->0x2140000, 1052648->0x7fffffff, 1052649->?, 1052650->0x122090d, 1052651->0x107003ba, 1052652->0x12a35, 1052653->0x35d10f1a, 1052654->0x2a3e206e, 1052655->0x10c00f1, 1052656->0x2a3e206e, 1052657->0x10c00b1, 1052658->0x1240f1a, 1052659->0x2a3e206e, 1052660->0x10c00f1, 1052661->0x2a3d206e, 1052662->0x10c0091, 1052663->0x2a43106e, 1052664->0x10c0001, 1052665->0x100008, 1052666->0x15b6206e, 1052667->0x3140010, 1052668->0x7fffffff, 1052669->?, 1052670->0x122090d, 1052671->0x107003ba, 1052672->0x12a35, 1052673->0x35d30f1a, 1052674->0x2a3e206e, 1052675->0x10c00f1, 1052676->0xf466f12, 1052677->0x206e0f0d, 1052678->0xf12a3e, 1052679->0xf1a010c, 1052680->0x206e0124, 1052681->0xf12a3e, 1052682->0x206e010c, 1052683->0x912a3d, 1052684->0x106e010c, 1052685->0x12a43, 1052686->0x8010c, 1052687->0x206e0010, 1052688->0x1015b6, 1052689->?, 1052690->0x297fff, 1052691->0x90dfeb5, 1052692->0x3ba0122, 1052693->0x2a351070, 1052694->0xf1a0001, 1052695->0x206e35d2, 1052696->0xf12a3e, 1052697->0x7f12010c, 1052698->0xf0d0f46, 1052699->0x2a3e206e, 1052700->0x10c00f1, 1052701->0x1240f1a, 1052702->0x2a3e206e, 1052703->0x10c00f1, 1052704->0x2a3d206e, 1052705->0x10c0091, 1052706->0x2a43106e, 1052707->0x10c0001, 1052708->0x100008, 1052709->0x15b6206e, 1052710->0x5140010, 1052711->0x7fffffff, 1052712->?, 1052713->0x122090d, 1052714->0x107003ba, 1052715->0x12a35, 1052716->0x35cf0f1a, 1052717->0x2a3e206e, 1052718->0x10c00f1, 1052719->0x80f13, 1052720->0xf0d0f46, 1052721->0x2a3e206e, 1052722->0x10c00f1, 1052723->0x1240f1a, 1052724->0x2a3e206e, 1052725->0x10c00f1, 1052726->0x2a3d206e, 1052727->0x10c0091, 1052728->0x2a43106e, 1052729->0x10c0001, 1052730->0x100008, 1052731->0x15b6206e, 1052732->0x4140010, 1052733->0x7fffffff, 1052734->?, 1052735->0x714090d, 1052736->0x7fffffff, 1052737->?, 1052738->0x16390375, 1052739->0x290010, 1052740->0x37fef2, 1052741->0x150000, 1052742->0x530001, 1052743->0x110000, 1052744->0x660006, 1052745->0x70000, 1052746->0x6f0010, 1052747->0x90000, 1052748->0x7a0015, 1052749->0x90000, 1052750->0x86001a, 1052751->0x90000, 1052752->0x92001f, 1052753->0x90000, 1052754->0x1350024, 1052755->0x110000, 1052756->0x108000b, 1052757->0x29907ae, 1052758->?, 1052759->0x7a40102, 1052760->?, 1052761->0x102f307, 1052762->0x39b07a4, 1052763->?, 1052764->0x7a40103, 1052765->?, 1052766->0x49d07, 1052767->0x30000, 1052768->0x10001, 1052769->?, 1052770->0xc001c, 1052771->0x10120000, 1052772->0xc7c2154, 1052773->0x2b8106e, 1052774->0x10a0001, 1052775->0x30133, 1052776->0x12000f, 1052777->0x5fe28, 1052778->0x20002, 1052779->?, 1052780->0x19001c, 1052781->0x1a0000, 1052782->0x1220a18, 1052783->0x107003ba, 1052784->0x12a35, 1052785->0x2470021a, 1052786->0x2a3e206e, 1052787->0x10c0021, 1052788->0x2a3e206e, 1052789->0x10c0041, 1052790->0x2a43106e, 1052791->0x10c0001, 1052792->0x2a82071, 1052793->0xe0010, 1052794->0x50000, 1052795->0x20002, 1052796->?, 1052797->0x19001c, 1052798->0x1a0000, 1052799->0x1220a18, 1052800->0x107003ba, 1052801->0x12a35, 1052802->0x2470021a, 1052803->0x2a3e206e, 1052804->0x10c0021, 1052805->0x2a3e206e, 1052806->0x10c0041, 1052807->0x2a43106e, 1052808->0x10c0001, 1052809->0x2aa2071, 1052810->0xe0010, 1052811->0xb0000, 1052812->0x30003, 1052813->?, 1052814->0x5c001c, 1052815->?, 1052816->0x106e0c7c, 1052817->0x202c4, 1052818->0x206e020a, 1052819->0x2815b3, 1052820->0x238020a, 1052821->0x1a120003, 1052822->0x164b306f, 1052823->0x10a0a98, 1052824->0xc5f8354, 1052825->?, 1052826->0x106e0c7c, 1052827->0x202c4, 1052828->0x206e020a, 1052829->0x2815b3, 1052830->0x238020a, 1052831->?, 1052832->0x710c60, 1052833->0x01d7, 1052834->0x616040b, 1052835->0x64bd03e8, 1052836->0x289306e, 1052837->?, 1052838->0x44120c60, 1052839->0x28a206e, 1052840->?, 1052841->0x106e0c60, 1052842->0x20285, 1052843->?, 1052844->0x5140c7d, 1052845->0x7fffffff, 1052846->0x28e306e, 1052847->?, 1052848->0x106e0c60, 1052849->0x20284, 1052850->0x238020c, 1052851->0x220011, 1052852->0x107003d4, 1052853->0x2a86, 1052854->0xc608254, 1052855->0x2a8a206e, 1052856->?, 1052857->0x206e0c79, 1052858->0x20c49, 1052859->0x10f031e, 1052860->0x31e020d, 1052861->0x140227, 1052862->0x470000, 1052863->0x10001, 1052864->0x50059, 1052865->0x30001, 1052866->?, 1052867->0x9e001c, 1052868->0x3120000, 1052869->0x231012, 1052870->0x405b043e, 1052871->0x40540c7a, 1052872->0x34b0c7a, 1052873->0x620300, 1052874->0x41540c5b, 1052875->0x10720c62, 1052876->0x106aa, 1052877->0x106e010c, 1052878->0x10671, 1052879->0x44010a, 1052880->0x2b0100, 1052881->0x007e, 1052882->0xc7a4054, 1052883->0x3000144, 1052884->0x10101d8, 1052885->0x300014b, 1052886->0xc624054, 1052887->0x190113, 1052888->0xc7a4254, 1052889->0x15b9306e, 1052890->0x10c0214, 1052891->0x6a52072, 1052892->0x40540010, 1052893->0x1440c7a, 1052894->0x1d80300, 1052895->0x14b0101, 1052896->0x40540300, 1052897->0x1130c62, 1052898->0x42540018, 1052899->0x306e0c7a, 1052900->0x21415b9, 1052901->0x2072010c, 1052902->0x1006b0, 1052903->0xc7a4054, 1052904->0x3000144, 1052905->0x10101d8, 1052906->0x300014b, 1052907->0xc624054, 1052908->0x42545112, 1052909->0x306e0c7a, 1052910->0x21415b9, 1052911->0x2072010c, 1052912->0x100693, 1052913->0x4054000e, 1052914->0x106e0c75, 1052915->0x02e6, 1052916->0xc744054, 1052917->0x3fd106e, 1052918->0x106e0000, 1052919->0x415c6, 1052920->0xc67435c, 1052921->0x15bd106e, 1052922->?, 1052923->0xc754054, 1052924->0x2e5106e, 1052925->0x40540000, 1052926->0x106e0c74, 1052927->0x03fd, 1052928->0x15c6106e, 1052929->0x435c0004, 1052930->0x106e0c67, 1052931->0x415b2, 1052932->0x38000a, 1052933->0x13000c, 1052934->0x41540012, 1052935->0x106e0c7c, 1052936->0x102c4, 1052937->0x1032010a, 1052938->0x106e0005, 1052939->0x415bd, 1052940->0x15b2106e, 1052941->0xa0004, 1052942->?, 1052943->0x100c428, 1052944->0x10002, 1052945->0x420000, 1052946->0x550000, 1052947->0x310000, 1052948->0x50001, 1052949->?, 1052950->0xa45001c, 1052951->0x80000, 1052952->0x540030, 1052953->0x2a080c78, 1052954->0x80000, 1052955->0x540030, 1052956->0x2b080c75, 1052957->0x1740000, 1052958->0x2b02c2, 1052959->0x2742b0c, 1052960->0x2a148b, 1052961->0x2a392a0a, 1052962->0x80018, 1052963->0x540030, 1052964->0x2a080c78, 1052965->0x80000, 1052966->0x540030, 1052967->0x2b080c75, 1052968->0x1740000, 1052969->0x2b02c8, 1052970->0x2742b0a, 1052971->0x2a148f, 1052972->0x2a382a0a, 1052973->0x2a1a0844, 1052974->0x8464c, 1052975->0x1080030, 1052976->0x206e002a, 1052977->0x1015b5, 1052978->0x300008, 1052979->0xc750054, 1052980->0x2a08, 1052981->0x2b13, 1052982->0x2e30274, 1052983->0x8002a, 1052984->0x540030, 1052985->0x2a080c75, 1052986->0x2b130000, 1052987->0x2740001, 1052988->0x2a02d6, 1052989->0x2f2a63, 1052990->0x172a38, 1052991->0x4f702a1a, 1052992->0x2b13, 1052993->0x1de0277, 1052994->0x2a0a002a, 1052995->0xd2a38, 1052996->0x300008, 1052997->0xc750054, 1052998->0x2a08, 1052999->0x12b13, 1053000->0x2e30274, 1053001->0x174002a, 1053002->0x3015cd, 1053003->0x15c20174, 1053004->0x2a220030, 1053005->0x17603ba, 1053006->0x2a2a35, 1053007->0x46492b1a, 1053008->0x2a3e0274, 1053009->0x2a0c002a, 1053010->0x300008, 1053011->0xc7c0054, 1053012->0x2b08, 1053013->0x2a3d0274, 1053014->0x2a0c002a, 1053015->0x25d52b1a, 1053016->0x2a3e0274, 1053017->0x2a0c002a, 1053018->0x300008, 1053019->0xc750054, 1053020->0x2b08, 1053021->0x2a3d0274, 1053022->0x2a0c002a, 1053023->0x25c72b1a, 1053024->0x2a3e0274, 1053025->0x2a0c002a, 1053026->0x2a430174, 1053027->0x2a0c002a, 1053028->0x300008, 1053029->0x2a0108, 1053030->0x15b5206e, 1053031->0x80010, 1053032->0x540030, 1053033->0x2a080c7c, 1053034->0x1740000, 1053035->0x2a02cd, 1053036->0x2a382a0a, 1053037->0x8081c, 1053038->0x540030, 1053039->0x2a080c75, 1053040->0x1740000, 1053041->0x2a02cd, 1053042->0x2a392a0a, 1053043->0x18130810, 1053044->0x80001, 1053045->0x540030, 1053046->0x2a080c7c, 1053047->0x1740000, 1053048->0x2a02cd, 1053049->0x2a392a0a, 1053050->0x80806, 1053051->0x540030, 1053052->0x2a080c75, 1053053->0x1740000, 1053054->0x2a02cd, 1053055->0x2a382a0a, 1053056->0x141307fa, 1053057->0x80001, 1053058->0x540030, 1053059->0x2a080c7c, 1053060->0x1740000, 1053061->0x2a02bb, 1053062->0x2a382a0a, 1053063->0x807f0, 1053064->0x540030, 1053065->0x2a080c75, 1053066->0x1740000, 1053067->0x2a02bb, 1053068->0x2a392a0a, 1053069->0x1d1207e4, 1053070->0x300008, 1053071->0xc7c0054, 1053072->0x2a08, 1053073->0x2bb0174, 1053074->0x2a0a002a, 1053075->0x7da2a39, 1053076->0x300008, 1053077->0xc750054, 1053078->0x2a08, 1053079->0x2bb0174, 1053080->0x2a0a002a, 1053081->0x7ce2a38, 1053082->0x81f12, 1053083->0x540030, 1053084->0x2a080c7c, 1053085->0x1740000, 1053086->0x2a02bb, 1053087->0x82a0a, 1053088->0x540030, 1053089->0x2b080c75, 1053090->0x1740000, 1053091->0x2b02bb, 1053092->0x22b0a, 1053093->0x102002a, 1053094->0x1032002b, 1053095->0x1e1207b6, 1053096->0x300008, 1053097->0xc7c0054, 1053098->0x2a08, 1053099->0x2c50174, 1053100->0x2a0a002a, 1053101->0x300008, 1053102->0xc750054, 1053103->0x2b08, 1053104->0x2c50174, 1053105->0x2b0a002b, 1053106->0x2a0002, 1053107->0x2b0102, 1053108->0x79e1032, 1053109->0x11913, 1053110->0x300008, 1053111->0xc7c0054, 1053112->0x2a08, 1053113->0x2c40174, 1053114->0x2a0a002a, 1053115->0x300008, 1053116->0xc750054, 1053117->0x2b08, 1053118->0x2c40174, 1053119->0x2b0a002b, 1053120->0x2a0002, 1053121->0x2b0102, 1053122->0x7861032, 1053123->0x11113, 1053124->0x300008, 1053125->0xc750054, 1053126->0x2a08, 1053127->0x300008, 1053128->0xc7c0054, 1053129->0x2b08, 1053130->0x2b30274, 1053131->0x2a0a002a, 1053132->0x7762a39, 1053133->0x11013, 1053134->0x300008, 1053135->0xc7c0054, 1053136->0x2a08, 1053137->0x2ce0174, 1053138->0x2a0a002a, 1053139->0x76c2a39, 1053140->0x300008, 1053141->0xc750054, 1053142->0x2a08, 1053143->0x2ce0174, 1053144->0x2a0a002a, 1053145->0x7602a38, 1053146->0x11b13, 1053147->0x300008, 1053148->0xc7c0054, 1053149->0x2a08, 1053150->0x2ce0174, 1053151->0x2a0a002a, 1053152->0x7562a38, 1053153->0x300008, 1053154->0xc750054, 1053155->0x2a08, 1053156->0x2ce0174, 1053157->0x2a0a002a, 1053158->0x74a2a39, 1053159->0x11a13, 1053160->0x300008, 1053161->0xc7c0054, 1053162->0x2a08, 1053163->0x2bc0174, 1053164->0x2a0a002a, 1053165->0x7402a39, 1053166->0x300008, 1053167->0xc750054, 1053168->0x2a08, 1053169->0x2bc0174, 1053170->0x2a0a002a, 1053171->0x7342a38, 1053172->0x11313, 1053173->0x300008, 1053174->0xc7c0054, 1053175->0x2a08, 1053176->0x2bc0174, 1053177->0x2a0a002a, 1053178->0x72a2a38, 1053179->0x300008, 1053180->0xc750054, 1053181->0x2a08, 1053182->0x2bc0174, 1053183->0x2a0a002a, 1053184->0x71e2a39, 1053185->0x11213, 1053186->0x300008, 1053187->0xc740054, 1053188->0x2a08, 1053189->0x300008, 1053190->0xc610054, 1053191->0x2b08, 1053192->0x3f80274, 1053193->0x2a0a002a, 1053194->0x70e2a39, 1053195->0x11513, 1053196->0x300008, 1053197->0xc750054, 1053198->0x2a08, 1053199->0x2bb0174, 1053200->0x2a0a002a, 1053201->0x7042a39, 1053202->0x300008, 1053203->0xc7c0054, 1053204->0x2a08, 1053205->0x2c40174, 1053206->0x2a0a002a, 1053207->0x300008, 1053208->0x2a0102, 1053209->0x15b3206e, 1053210->0x2a0a0010, 1053211->0x142a38, 1053212->0x300008, 1053213->0xc750054, 1053214->0x2a08, 1053215->0x2c40174, 1053216->0x2a0a002a, 1053217->0xd2b13, 1053218->0x2a0002, 1053219->0x2b0102, 1053220->0x281032, 1053221->0x300008, 1053222->0xc7c0054, 1053223->0x2a08, 1053224->0x2c40174, 1053225->0x2a0a002a, 1053226->0xd2b13, 1053227->0x2a0002, 1053228->0x2b0102, 1053229->0x6cc1033, 1053230->0x300008, 1053231->0xc750054, 1053232->0x2a08, 1053233->0x2c40174, 1053234->0x2a0a002a, 1053235->0x300008, 1053236->0x2a0102, 1053237->0x15b3206e, 1053238->0x2a0a0010, 1053239->0x6b82a38, 1053240->0x81b12, 1053241->0x540030, 1053242->0x2a080c75, 1053243->0x1740000, 1053244->0x2a02c4, 1053245->0x82a0a, 1053246->0x1020030, 1053247->0x206e002a, 1053248->0x1015b3, 1053249->0x2a392a0a, 1053250->0x80014, 1053251->0x540030, 1053252->0x2a080c75, 1053253->0x1740000, 1053254->0x2a02c4, 1053255->0x2b132a0a, 1053256->0x2000d, 1053257->0x102002a, 1053258->0x1033002b, 1053259->0x80694, 1053260->0x540030, 1053261->0x2a080c7c, 1053262->0x1740000, 1053263->0x2a02c4, 1053264->0x82a0a, 1053265->0x1020030, 1053266->0x206e002a, 1053267->0x1015b3, 1053268->0x2a392a0a, 1053269->0x80680, 1053270->0x540030, 1053271->0x2a080c7c, 1053272->0x1740000, 1053273->0x2a02c4, 1053274->0x2b132a0a, 1053275->0x2000d, 1053276->0x102002a, 1053277->0x1032002b, 1053278->0x1713066e, 1053279->0x80001, 1053280->0x540030, 1053281->0x2a080c75, 1053282->0x1740000, 1053283->0x2a02c4, 1053284->0x2b132a0a, 1053285->0x20004, 1053286->0x102002a, 1053287->0x1034002b, 1053288->0x8065e, 1053289->0x540030, 1053290->0x2a080c75, 1053291->0x1740000, 1053292->0x2a02c4, 1053293->0x2b132a0a, 1053294->0x20008, 1053295->0x102002a, 1053296->0x1036002b, 1053297->0x1613064c, 1053298->0x80001, 1053299->0x540030, 1053300->0x2a080c7c, 1053301->0x1740000, 1053302->0x2a02b8, 1053303->0x82a0a, 1053304->0x540030, 1053305->0x2b080c75, 1053306->0x1740000, 1053307->0x2b02b8, 1053308->0x22b0a, 1053309->0x102002a, 1053310->0x1032002b, 1053311->0x1f130634, 1053312->0x2a220001, 1053313->0x17603ba, 1053314->0x2a2a35, 1053315->0x46482b1a, 1053316->0x2a3e0274, 1053317->0x2a0c002a, 1053318->0x2a0008, 1053319->0x180102, 1053320->0x2a3f206e, 1053321->0x2a0c0010, 1053322->0x16a2b1a, 1053323->0x2a3e0274, 1053324->0x2a0c002a, 1053325->0x2a0008, 1053326->0x140102, 1053327->0x2a3f206e, 1053328->0x2a0c0010, 1053329->0x1632b1a, 1053330->0x2a3e0274, 1053331->0x2a0c002a, 1053332->0x2a0008, 1053333->0x2a3f206e, 1053334->0x2a0c00d0, 1053335->0x1652b1a, 1053336->0x2a3e0274, 1053337->0x2a0c002a, 1053338->0x2a0008, 1053339->0x2a3f206e, 1053340->0x2a0c00f0, 1053341->0x1642b1a, 1053342->0x2a3e0274, 1053343->0x2a0c002a, 1053344->0x2a0008, 1053345->0x2a3f206e, 1053346->0x2a0c00e0, 1053347->0x1702b1a, 1053348->0x2a3e0274, 1053349->0x2a0c002a, 1053350->0x2a0008, 1053351->0x190102, 1053352->0x2a3f206e, 1053353->0x2a0c0010, 1053354->0x1672b1a, 1053355->0x2a3e0274, 1053356->0x2a0c002a, 1053357->0x2a0008, 1053358->0x110102, 1053359->0x2a3f206e, 1053360->0x2a0c0010, 1053361->0x1662b1a, 1053362->0x2a3e0274, 1053363->0x2a0c002a, 1053364->0x2a0008, 1053365->0x100102, 1053366->0x2a3f206e, 1053367->0x2a0c0010, 1053368->0x1722b1a, 1053369->0x2a3e0274, 1053370->0x2a0c002a, 1053371->0x2a0008, 1053372->0x1b0102, 1053373->0x2a3f206e, 1053374->0x2a0c0010, 1053375->0x1712b1a, 1053376->0x2a3e0274, 1053377->0x2a0c002a, 1053378->0x2a0008, 1053379->0x1a0102, 1053380->0x2a3f206e, 1053381->0x2a0c0010, 1053382->0x1692b1a, 1053383->0x2a3e0274, 1053384->0x2a0c002a, 1053385->0x2a0008, 1053386->0x130102, 1053387->0x2a3f206e, 1053388->0x2a0c0010, 1053389->0x1682b1a, 1053390->0x2a3e0274, 1053391->0x2a0c002a, 1053392->0x2a0008, 1053393->0x120102, 1053394->0x2a3f206e, 1053395->0x2a0c0010, 1053396->0x16c2b1a, 1053397->0x2a3e0274, 1053398->0x2a0c002a, 1053399->0x2a0008, 1053400->0x150102, 1053401->0x2a3f206e, 1053402->0x2a0c0010, 1053403->0x1622b1a, 1053404->0x2a3e0274, 1053405->0x2a0c002a, 1053406->0x2a0008, 1053407->0x2a3f206e, 1053408->0x2a0c00b0, 1053409->0x16e2b1a, 1053410->0x2a3e0274, 1053411->0x2a0c002a, 1053412->0x2a0008, 1053413->0x170102, 1053414->0x2a3f206e, 1053415->0x2a0c0010, 1053416->0x16d2b1a, 1053417->0x2a3e0274, 1053418->0x2a0c002a, 1053419->0x2a0008, 1053420->0x160102, 1053421->0x2a3f206e, 1053422->0x2a0c0010, 1053423->0x2a430174, 1053424->0x2a0c002a, 1053425->0x300008, 1053426->0x2a0108, 1053427->0x15b5206e, 1053428->0x80010, 1053429->0x540030, 1053430->0x2a080c7c, 1053431->0x1740000, 1053432->0x2a02cd, 1053433->0x82a0a, 1053434->0x540030, 1053435->0x2b080c75, 1053436->0x1740000, 1053437->0x2b02cd, 1053438->0x22b0a, 1053439->0x102002a, 1053440->0x1033002b, 1053441->0x8001c, 1053442->0x540030, 1053443->0x2a080c7c, 1053444->0x1740000, 1053445->0x2a02bb, 1053446->0x82a0a, 1053447->0x540030, 1053448->0x2b080c75, 1053449->0x1740000, 1053450->0x2b02bb, 1053451->0x22b0a, 1053452->0x102002a, 1053453->0x1032002b, 1053454->0x2a140058, 1053455->0xc3c4, 1053456->0x42b13, 1053457->0x2b0002, 1053458->0x4a60023, 1053459->0x2b08, 1053460->0x2c13, 1053461->0x300008, 1053462->0xc7c0054, 1053463->0x2d08, 1053464->0x2cd0174, 1053465->0x2d0a002d, 1053466->0x29cf0177, 1053467->0x2d0c002d, 1053468->0x2c2b2d4d, 1053469->0x12c13, 1053470->0x300008, 1053471->0xc7c0054, 1053472->0x2d08, 1053473->0x2bb0174, 1053474->0x2d0a002d, 1053475->0x29cf0177, 1053476->0x2d0c002d, 1053477->0x2c2b2d4d, 1053478->0x22c13, 1053479->0x300008, 1053480->0xc750054, 1053481->0x2d08, 1053482->0x2cd0174, 1053483->0x2d0a002d, 1053484->0x29cf0177, 1053485->0x2d0c002d, 1053486->0x2c2b2d4d, 1053487->0x32c13, 1053488->0x300008, 1053489->0xc750054, 1053490->0x2d08, 1053491->0x2bb0174, 1053492->0x2d0a002d, 1053493->0x29cf0177, 1053494->0x2d0c002d, 1053495->0x2c2b2d4d, 1053496->0x4590277, 1053497->0x8002a, 1053498->0x540030, 1053499->0x29080c7c, 1053500->0x80000, 1053501->0x540030, 1053502->0x2a080c75, 1053503->0x80000, 1053504->0x108002a, 1053505->0x105b0030, 1053506->0x80c7c, 1053507->0x1080029, 1053508->0x105b0030, 1053509->0x80c75, 1053510->0x540030, 1053511->0x2a080c75, 1053512->0x1740000, 1053513->0x2a02e6, 1053514->0x300008, 1053515->0xc610054, 1053516->0x2508, 1053517->0x300008, 1053518->0xc740054, 1053519->0x2a08, 1053520->0x2a0008, 1053521->0x300108, 1053522->0xc61105b, 1053523->0x250008, 1053524->0x300108, 1053525->0xc74105b, 1053526->0x300008, 1053527->0xc750054, 1053528->0x2a08, 1053529->0x2e60174, 1053530->0x8002a, 1053531->0x540030, 1053532->0x2a080c78, 1053533->0x1740000, 1053534->0x2a1454, 1053535->0x2b1a2a0c, 1053536->0x2744604, 1053537->0x2a0058, 1053538->0x281f280c, 1053539->0x193800d2, 1053540->0x1740005, 1053541->0x3015cb, 1053542->0x401138, 1053543->0x300008, 1053544->0xc780054, 1053545->0x2a08, 1053546->0x146d0174, 1053547->0x2a0a002a, 1053548->0x300008, 1053549->0xc7c0054, 1053550->0x2b08, 1053551->0x2c40174, 1053552->0x2b0a002b, 1053553->0x280008, 1053554->0x2a0102, 1053555->0x2b0202, 1053556->0x3f4306e, 1053557->0x1740210, 1053558->0x3015b2, 1053559->0x2a382a0a, 1053560->0x2a13001d, 1053561->0x80012, 1053562->0x540030, 1053563->0x2b080c7c, 1053564->0x1740000, 1053565->0x2b02c4, 1053566->0x22b0a, 1053567->0x102002a, 1053568->0x1033002b, 1053569->0x2a1a000b, 1053570->0x84642, 1053571->0x1080030, 1053572->0x206e002a, 1053573->0x1015b5, 1053574->0xb1838, 1053575->0x300008, 1053576->0xc720054, 1053577->0x2a08, 1053578->0x1ce0174, 1053579->0x1038002a, 1053580->0x80221, 1053581->0x540030, 1053582->0x2a080c7f, 1053583->0x1740000, 1053584->0x3015a9, 1053585->0x2742b0a, 1053586->0x2a2769, 1053587->0x2a392a0c, 1053588->0xc12040e, 1053589->0x880c39, 1053590->0x300008, 1053591->0xc620054, 1053592->0x2a08, 1053593->0x6aa0178, 1053594->0x2a0c002a, 1053595->0x6700174, 1053596->0x2a0a002a, 1053597->0x782a38, 1053598->0x300008, 1053599->0xc780054, 1053600->0x2a08, 1053601->0x14860174, 1053602->0x2a0a002a, 1053603->0x6c2a38, 1053604->0x300008, 1053605->0xc7c0054, 1053606->0x2a08, 1053607->0x2c50174, 1053608->0x2a0a002a, 1053609->0x300008, 1053610->0x2a0102, 1053611->0x15b3206e, 1053612->0x2a0a0010, 1053613->0x192a38, 1053614->0x300008, 1053615->0xc780054, 1053616->0x2a08, 1053617->0x14540174, 1053618->0x2a0c002a, 1053619->0x550174, 1053620->0x2a0c002a, 1053621->0xb22b14, 1053622->0x2740112, 1053623->0x2a00b2, 1053624->0x2a382a0a, 1053625->0x80041, 1053626->0x550030, 1053627->0x2a020c6c, 1053628->0x2a390000, 1053629->0x80039, 1053630->0x540030, 1053631->0x2a080c7c, 1053632->0x1740000, 1053633->0x2a02c0, 1053634->0x8090c, 1053635->0x540030, 1053636->0x2a080c7c, 1053637->0x1740000, 1053638->0x2a02cd, 1053639->0x2a382a0a, 1053640->0x8000e, 1053641->0x540030, 1053642->0x2a080c7c, 1053643->0x1740000, 1053644->0x2a02bb, 1053645->0x2a392a0a, 1053646->0x803b4, 1053647->0x540030, 1053648->0x2a080c78, 1053649->0x1740000, 1053650->0x2a144f, 1053651->0x8090c, 1053652->0x540030, 1053653->0x2a080c7c, 1053654->0x80000, 1053655->0x206e002a, 1053656->0x9002df, 1053657->0x300008, 1053658->0xc7e0054, 1053659->0x2a08, 1053660->0x832a38, 1053661->0x300008, 1053662->0xc7e0054, 1053663->0x2a08, 1053664->0x270a0174, 1053665->0x2a0c002a, 1053666->0x14e72b62, 1053667->0x2a0008, 1053668->0x2b0108, 1053669->0x711033, 1053670->0x300008, 1053671->0xc6a0054, 1053672->0x2a08, 1053673->0x692a38, 1053674->0x300008, 1053675->0xc7c0054, 1053676->0x2a08, 1053677->0x2cd0174, 1053678->0x2a0a002a, 1053679->0x5d2a39, 1053680->0x300008, 1053681->0xc6a0054, 1053682->0x2a08, 1053683->0x3292a1f, 1053684->0x26300174, 1053685->0x230a002a, 1053686->0x300008, 1053687->0xc7c0054, 1053688->0x2a08, 1053689->0x2b50174, 1053690->0x1c0a002a, 1053691->0x452338, 1053692->0x12a13, 1053693->0x1c0002, 1053694->0x2a0102, 1053695->0x3d1033, 1053696->0x300008, 1053697->0xc7c0054, 1053698->0x2a08, 1053699->0x2c80174, 1053700->0x2a0a002a, 1053701->0x300008, 1053702->0xc7c0054, 1053703->0x2b08, 1053704->0x2be0174, 1053705->0x2b0a002b, 1053706->0x300008, 1053707->0x2a0102, 1053708->0x2b0202, 1053709->0x15b03070, 1053710->0x2a0a0210, 1053711->0x1d2a38, 1053712->0x300008, 1053713->0xc6a0054, 1053714->0x2a08, 1053715->0x152a38, 1053716->0x300008, 1053717->0xc7c0054, 1053718->0x2a08, 1053719->0x300008, 1053720->0xc6a0054, 1053721->0x2b08, 1053722->0x254e0174, 1053723->0x2b0c002b, 1053724->0x2df0274, 1053725->0x8002a, 1053726->0x540030, 1053727->0x2a080c78, 1053728->0x2b1a0000, 1053729->0x83566, 1053730->0x540030, 1053731->0x2c080c7c, 1053732->0x1740000, 1053733->0x2c02c0, 1053734->0x3742c0c, 1053735->0x2a14ca, 1053736->0x356a2a1a, 1053737->0x2b1a, 1053738->0x1dd0277, 1053739->0x210c002a, 1053740->0x300008, 1053741->0xc7c0054, 1053742->0x2a08, 1053743->0x2c20174, 1053744->0x200c002a, 1053745->0x300008, 1053746->0x200108, 1053747->0x15b1206e, 1053748->0x2a0a0010, 1053749->0x162a38, 1053750->0x300008, 1053751->0xc7c0054, 1053752->0x2a08, 1053753->0x2c80174, 1053754->0x240a002a, 1053755->0x300008, 1053756->0x200108, 1053757->0x240202, 1053758->0x15a7306e, 1053759->0x200c0210, 1053760->0x300008, 1053761->0xc780054, 1053762->0x2a08, 1053763->0x356a2b1a, 1053764->0x2a0008, 1053765->0x2b0108, 1053766->0x200208, 1053767->0x14ca306e, 1053768->0x80210, 1053769->0x540030, 1053770->0x2a080c78, 1053771->0x1740000, 1053772->0x2a1454, 1053773->0x82a0c, 1053774->0x1080030, 1053775->0x2080020, 1053776->0x3080021, 1053777->0x406e002a, 1053778->0x321015c8, 1053779->0x300008, 1053780->0x200108, 1053781->0x15b1206e, 1053782->0x2a0a0010, 1053783->0x2f82a38, 1053784->0x44f22a1a, 1053785->0x300008, 1053786->0x2a0108, 1053787->0x15b5206e, 1053788->0x80010, 1053789->0x540030, 1053790->0x2a080c78, 1053791->0x2b1a0000, 1053792->0x2c1a3568, 1053793->0x3740000, 1053794->0x2a14ca, 1053795->0x2a13, 1053796->0x2a0002, 1053797->0x300108, 1053798->0xc67105c, 1053799->0x300008, 1053800->0xc780054, 1053801->0x2b08, 1053802->0x35692c1a, 1053803->0x300008, 1053804->0xc7c0054, 1053805->0x2a08, 1053806->0x2ce0174, 1053807->0x2a0a002a, 1053808->0xe2a39, 1053809->0x300008, 1053810->0xc7c0054, 1053811->0x2a08, 1053812->0x2bc0174, 1053813->0x2a0a002a, 1053814->0x3612a38, 1053815->0x50392a1a, 1053816->0x2b0008, 1053817->0x2c0108, 1053818->0x2a0208, 1053819->0x14ca306e, 1053820->0x1740210, 1053821->0x3015cc, 1053822->0x300008, 1053823->0xc7c0054, 1053824->0x2a08, 1053825->0x300008, 1053826->0x2a0108, 1053827->0x15c5206e, 1053828->0x2a220010, 1053829->0x17603ba, 1053830->0x2a2a35, 1053831->0x83a2b1a, 1053832->0x2a3e0274, 1053833->0x2a0c002a, 1053834->0x300008, 1053835->0xc7c0054, 1053836->0x2b08, 1053837->0x2a3d0274, 1053838->0x2a0c002a, 1053839->0x2a430174, 1053840->0x2a0c002a, 1053841->0x300008, 1053842->0x2a0108, 1053843->0x15b5206e, 1053844->0x80010, 1053845->0x540030, 1053846->0x2a080c78, 1053847->0x80000, 1053848->0x540030, 1053849->0x2b080c7c, 1053850->0x2740000, 1053851->0x2a149e, 1053852->0xb0f38, 1053853->0x300008, 1053854->0xc660054, 1053855->0x2a08, 1053856->0x1ce0174, 1053857->0xe39002a, 1053858->0x11380004, 1053859->0x1740032, 1053860->0x3015b7, 1053861->0x15b20174, 1053862->0x2a0a0030, 1053863->0x3032a38, 1053864->0x122a13, 1053865->0x300008, 1053866->0xc7c0054, 1053867->0x2b08, 1053868->0x2c40174, 1053869->0x2b0a002b, 1053870->0x2a0002, 1053871->0x2b0102, 1053872->0x2f11033, 1053873->0x300008, 1053874->0xc780054, 1053875->0x2a08, 1053876->0x39a72b1a, 1053877->0x14950274, 1053878->0x1f13002a, 1053879->0x2a130000, 1053880->0x20001, 1053881->0x108002a, 1053882->0x105c0030, 1053883->0x1f380c6d, 1053884->0x8000d, 1053885->0x540030, 1053886->0x2a080c78, 1053887->0x2b130000, 1053888->0x2740000, 1053889->0x2a1495, 1053890->0x40d39, 1053891->0xb0b38, 1053892->0x300008, 1053893->0xc5d0054, 1053894->0x2a08, 1053895->0x1ce0174, 1053896->0x1b38002a, 1053897->0x8000b, 1053898->0x540030, 1053899->0x2a080c81, 1053900->0x1740000, 1053901->0x2a01ce, 1053902->0xb1a38, 1053903->0x300008, 1053904->0xc800054, 1053905->0x2a08, 1053906->0x1ce0174, 1053907->0x1338002a, 1053908->0x8000b, 1053909->0x540030, 1053910->0x2a080c65, 1053911->0x1740000, 1053912->0x2a01ce, 1053913->0xb1238, 1053914->0x300008, 1053915->0xc640054, 1053916->0x2a08, 1053917->0x1ce0174, 1053918->0x1538002a, 1053919->0x8000b, 1053920->0x540030, 1053921->0x2a080c78, 1053922->0x1740000, 1053923->0x2a1499, 1053924->0x3d40622, 1053925->0x2a861070, 1053926->0x80006, 1053927->0x540030, 1053928->0x2b080c5f, 1053929->0x2b1d0000, 1053930->0x300008, 1053931->0xc5f0854, 1053932->0xb6081f, 1053933->0x300008, 1053934->0xc730054, 1053935->0x2a08, 1053936->0x300008, 1053937->0xc6e0054, 1053938->0x2c08, 1053939->0x2a0008, 1053940->0x2c0108, 1053941->0x277206e, 1053942->0x2a0a0010, 1053943->0x27c2a39, 1053944->0x18391712, 1053945->0x14390006, 1053946->0x7380004, 1053947->0x71009b, 1053948->0x01d7, 1053949->0x2e162c0b, 1053950->0x269d03e8, 1053951->0x82e2c, 1053952->0x540030, 1053953->0x2a080c7c, 1053954->0x1740000, 1053955->0x2a02cd, 1053956->0x2a392a0a, 1053957->0x22130264, 1053958->0x80001, 1053959->0x540030, 1053960->0x2a080c73, 1053961->0x80000, 1053962->0x108002a, 1053963->0x105b0030, 1053964->0x20c6e, 1053965->0x206e0022, 1053966->0x80288, 1053967->0x300008, 1053968->0xc6e0054, 1053969->0x2a08, 1053970->0x2a0008, 1053971->0x286206e, 1053972->0x2a220008, 1053973->0x17603ba, 1053974->0x2a2a35, 1053975->0x46482c1a, 1053976->0x2a0008, 1053977->0x2c0108, 1053978->0x2a3e206e, 1053979->0x2a0c0010, 1053980->0x2a0008, 1053981->0x180102, 1053982->0x2a3f206e, 1053983->0x2a0c0010, 1053984->0x16b2c1a, 1053985->0x2a0008, 1053986->0x2c0108, 1053987->0x2a3e206e, 1053988->0x2a0c0010, 1053989->0x2a0008, 1053990->0x140102, 1053991->0x2a3f206e, 1053992->0x2a0c0010, 1053993->0xe82c1a, 1053994->0x2a0008, 1053995->0x2c0108, 1053996->0x2a3e206e, 1053997->0x2a0c0010, 1053998->0x2a0008, 1053999->0x2a3f206e, 1054000->0x2a0c0070, 1054001->0x1e52c1a, 1054002->0x2a0008, 1054003->0x2c0108, 1054004->0x2a3e206e, 1054005->0x2a0c0010, 1054006->0x300008, 1054007->0xc5f0054, 1054008->0x2c08, 1054009->0x2a0008, 1054010->0x2c0108, 1054011->0x2a3d206e, 1054012->0x2a0c0010, 1054013->0x2a430174, 1054014->0x2a0c002a, 1054015->0x300008, 1054016->0x2a0108, 1054017->0x15b5206e, 1054018->0x80010, 1054019->0x540030, 1054020->0x2a080c5f, 1054021->0x80000, 1054022->0x206e002a, 1054023->0x62a8a, 1054024->0x300008, 1054025->0xc790054, 1054026->0x2a08, 1054027->0x2a0008, 1054028->0xc49206e, 1054029->0x2b1e0060, 1054030->0x8000e, 1054031->0x540030, 1054032->0x2a080c78, 1054033->0x80000, 1054034->0x540030, 1054035->0x2b080c75, 1054036->0x1740000, 1054037->0x2b02c2, 1054038->0x2742b0c, 1054039->0x2a148c, 1054040->0x2a392a0a, 1054041->0x80018, 1054042->0x540030, 1054043->0x2a080c78, 1054044->0x80000, 1054045->0x540030, 1054046->0x2b080c75, 1054047->0x1740000, 1054048->0x2b02c8, 1054049->0x2742b0a, 1054050->0x2a1490, 1054051->0x2a382a0a, 1054052->0x2a1af7b3, 1054053->0x8464d, 1054054->0x1080030, 1054055->0x206e002a, 1054056->0x1015b5, 1054057->0x300008, 1054058->0xc750054, 1054059->0x2a08, 1054060->0x12b13, 1054061->0x2e30274, 1054062->0x8002a, 1054063->0x540030, 1054064->0x2a080c75, 1054065->0x2b130000, 1054066->0x2740000, 1054067->0x2a02d6, 1054068->0x300008, 1054069->0xc750054, 1054070->0x2a08, 1054071->0x2b13, 1054072->0x2d70274, 1054073->0x29002a, 1054074->0x1813f787, 1054075->0x290000, 1054076->0x1413f7f2, 1054077->0x290000, 1054078->0xd12f808, 1054079->?, 1054080->0x290f12, 1054081->0xe12f834, 1054082->?, 1054083->0x1913, 1054084->?, 1054085->0x1113, 1054086->?, 1054087->0x1013, 1054088->?, 1054089->0x1b13, 1054090->?, 1054091->0x1a13, 1054092->?, 1054093->0x1313, 1054094->?, 1054095->0x1213, 1054096->?, 1054097->0x1513, 1054098->?, 1054099->0x290b12, 1054100->0x1713f94a, 1054101->0x290000, 1054102->0x1613f994, 1054103->0x290000, 1054104->0x1f13f9b6, 1054105->0x290000, 1054106->0x8f9ce, 1054107->0x540030, 1054108->0x2a080c7f, 1054109->0x1740000, 1054110->0x3015a9, 1054111->0x2742b0a, 1054112->0x2a2769, 1054113->0x1742a0c, 1054114->0x2a26cc, 1054115->0x2a382a0c, 1054116->0x1c120005, 1054117->?, 1054118->0x290c12, 1054119->0x8fbdd, 1054120->0x540030, 1054121->0x2a080c7c, 1054122->0x1740000, 1054123->0x2a02cd, 1054124->0x2b132a0a, 1054125->0x20003, 1054126->0x102002a, 1054127->0x1033002b, 1054128->0x80024, 1054129->0x540030, 1054130->0x2a080c6a, 1054131->0x2a380000, 1054132->0x8001a, 1054133->0x540030, 1054134->0x2a080c6a, 1054135->0x1740000, 1054136->0x2a254e, 1054137->0x1071090c, 1054138->0x90444, 1054139->0x2a382a0a, 1054140->0x2a1afc30, 1054141->0x17749cd, 1054142->0x2a01dc, 1054143->0x29090c, 1054144->0x912fc28, 1054145->0x8f128, 1054146->0x540030, 1054147->0x2a080c7c, 1054148->0x1740000, 1054149->0x2a02bb, 1054150->0x2a382a0a, 1054151->0x8fc1a, 1054152->0x540030, 1054153->0x2a080c78, 1054154->0x1740000, 1054155->0x2a1454, 1054156->0x2b142a0c, 1054157->0x1040104, 1054158->0x590274, 1054159->0x2a0c002a, 1054160->0x29ab0178, 1054161->0x90c002a, 1054162->?, 1054163->0x1d1a, 1054164->0x2a13, 1054165->0x32b13, 1054166->0x200008, 1054167->0x2a0102, 1054168->0x2b0202, 1054169->0x2a22306e, 1054170->0x1e0c0210, 1054171->0x2a13, 1054172->0x32b13, 1054173->0x200008, 1054174->0x2a0102, 1054175->0x2b0202, 1054176->0x2a22306e, 1054177->0x2a0c0210, 1054178->0x29c80177, 1054179->0x2a0a002a, 1054180->0xa330177, 1054181->0x1d0c002a, 1054182->0x300008, 1054183->0xc780054, 1054184->0x2a08, 1054185->0x35682b1a, 1054186->0x2a0008, 1054187->0x2b0108, 1054188->0x1d0208, 1054189->0x14ca306e, 1054190->0x2a130210, 1054191->0x20001, 1054192->0x108002a, 1054193->0x105c0030, 1054194->0x80c67, 1054195->0x1080030, 1054196->0x206e0020, 1054197->0x1015c4, 1054198->0x300008, 1054199->0xc780054, 1054200->0x2a08, 1054201->0x300008, 1054202->0xc710055, 1054203->0x2b02, 1054204->0x300008, 1054205->0x2a0108, 1054206->0x200208, 1054207->0x210308, 1054208->0x2b0402, 1054209->0x15c7546e, 1054210->0x2a0a3210, 1054211->?, 1054212->0x300008, 1054213->0x1d0108, 1054214->0x15a6206e, 1054215->0x290010, 1054216->0xa0dfcbf, 1054217->0x3ba2a22, 1054218->0x2a350176, 1054219->0x2b1a002a, 1054220->0x2742c17, 1054221->0x2a2a3e, 1054222->0x82a0c, 1054223->0x206e002a, 1054224->0xa02a3d, 1054225->0x1742a0c, 1054226->0x2a2a43, 1054227->0x82a0c, 1054228->0x1080030, 1054229->0x206e002a, 1054230->0x1015b6, 1054231->0xa0d9e28, 1054232->0x3ba2a22, 1054233->0x2a350176, 1054234->0x2b1a002a, 1054235->0x2742c17, 1054236->0x2a2a3e, 1054237->0x82a0c, 1054238->0x206e002a, 1054239->0xa02a3d, 1054240->0x1742a0c, 1054241->0x2a2a43, 1054242->0x82a0c, 1054243->0x1080030, 1054244->0x206e002a, 1054245->0x1015b6, 1054246->0x2a1a8028, 1054247->0x292fb6, 1054248->0x8fca1, 1054249->0x540030, 1054250->0x2a080c7c, 1054251->0x80000, 1054252->0x1080030, 1054253->0x206e002a, 1054254->0x1015bf, 1054255->0x11f13, 1054256->0x2a13, 1054257->0x2a0002, 1054258->0x300108, 1054259->0xc6d105c, 1054260->?, 1054261->0x290712, 1054262->0x2213fd86, 1054263->0x290000, 1054264->0x2a0dfd9e, 1054265->0x2a272b1e, 1054266->0x7a50000, 1054267->0xc80000, 1054268->0x98b000a, 1054269->0x110000, 1054270->0xa430001, 1054271->0x10000, 1054272->0x202000a, 1054273->0x13e207ae, 1054274->0x148007bb, 1054275->0x14c200, 1054276->0x70000, 1054277->0x50002, 1054278->0xd60002, 1054279->0x97001d, 1054280->0x51d0000, 1054281->0xc765255, 1054282->0x390239, 1054283->0x3bf0071, 1054284->0xa0000, 1054285->0x1a1e106e, 1054286->0x20a0006, 1054287->0x310238, 1054288->0xc785254, 1054289->0x1475106e, 1054290->0x20a0002, 1054291->0x1a2032, 1054292->0xc785254, 1054293->0x1475106e, 1054294->0x20a0002, 1054295->0xc2032, 1054296->0xea80071, 1054297->0x20c0000, 1054298->0xeaa206e, 1054299->0x20a0002, 1054300->0x80239, 1054301->0x3ca1071, 1054302->0x20a0000, 1054303->0x110239, 1054304->0x4770021a, 1054305->0x19f3206e, 1054306->0x21a0026, 1054307->0x206e0b39, 1054308->0x2515b5, 1054309->0x15ae106e, 1054310->0x51e0005, 1054311->0x21a000e, 1054312->0x206e4770, 1054313->0x2619f3, 1054314->0xc785254, 1054315->0x1475106e, 1054316->0x20a0002, 1054317->0x1e2032, 1054318->0xea80071, 1054319->0x20c0000, 1054320->0xeaa206e, 1054321->0x20a0002, 1054322->0x140239, 1054323->0xb3a021a, 1054324->0x15b5206e, 1054325->0x710025, 1054326->0x0ea8, 1054327->0x313020c, 1054328->0x41203e9, 1054329->0xeac546e, 1054330->0x12123502, 1054331->0xc76525c, 1054332->0x18d1071, 1054333->0x10c0005, 1054334->0x260213, 1054335->0x381259, 1054336->0xc775252, 1054337->0x10202d8, 1054338->0xc775259, 1054339->0x341259, 1054340->0x75300216, 1054341->0x15c3406e, 1054342->0x20a3215, 1054343->0xe0238, 1054344->0x2405021a, 1054345->0x15b5206e, 1054346->0x12120025, 1054347->0xc76525c, 1054348->0x20db528, 1054349->0x227051e, 1054350->0x9d1021a, 1054351->0x15b5206e, 1054352->0x106e0025, 1054353->0x515ae, 1054354->0x525c0212, 1054355->?, 1054356->0x10000, 1054357->0x890000, 1054358->0x8b0001, 1054359->0xb0000, 1054360->0x10001, 1054361->0x30188, 1054362->0x20001, 1054363->0x1160000, 1054364->0xc001d, 1054365->0x20540000, 1054366->0x1130c62, 1054367->0x206e0022, 1054368->0x1215b8, 1054369->0x2072010c, 1054370->0x10068b, 1054371->0x6000e, 1054372->0x20001, 1054373->0x11d0000, 1054374->0x51001d, 1054375->0x52540000, 1054376->0x106e0c7c, 1054377->0x202c5, 1054378->0x5254000a, 1054379->0x106e0c78, 1054380->0x21454, 1054381->0x106e020c, 1054382->0x20055, 1054383->0x314020c, 1054384->0x1120091, 1054385->0xb2206e, 1054386->0x20a0032, 1054387->0x390238, 1054388->0xc795254, 1054389->0xbf3106e, 1054390->0x20c0002, 1054391->0x55106e, 1054392->0x20c0002, 1054393->0x600314, 1054394->0x206e010e, 1054395->0x3200b5, 1054396->0x21a010a, 1054397->0x3220a18, 1054398->0x107003ba, 1054399->0x32a35, 1054400->0x51e1041a, 1054401->0x2a3e206e, 1054402->0x30c0043, 1054403->0x2a3a206e, 1054404->0x30c0013, 1054405->0x2a43106e, 1054406->0x30c0003, 1054407->0x2a82071, 1054408->0x206e0032, 1054409->0x515b3, 1054410->0x238020a, 1054411->0x1390005, 1054412->0x60120003, 1054413->0xc795254, 1054414->0xcd9206e, 1054415->0xe0002, 1054416->0x10000, 1054417->0x10000, 1054418->0x13e0000, 1054419->0x9001d, 1054420->0x1a0000, 1054421->0x1071043b, 1054422->0x2b28, 1054423->0x69000c, 1054424->0xe0c9e, 1054425->0x40000, 1054426->0x20003, 1054427->0x1430000, 1054428->0x1a001d, 1054429->0x106e0000, 1054430->0x21461, 1054431->0x106e000c, 1054432->0x0176, 1054433->0x2070000c, 1054434->0x10175, 1054435->0x4fa0062, 1054436->0xc9c105b, 1054437->0xc95125b, 1054438->0x1454106e, 1054439->0xc0002, 1054440->0xc92105b, 1054441->0xc9d135b, 1054442->0x3000e, 1054443->0x20001, 1054444->0x1590000, 1054445->0x17001d, 1054446->0x20540000, 1054447->0x380c98, 1054448->0x106e0012, 1054449->0x215da, 1054450->0x38000a, 1054451->0x2054000c, 1054452->0x1140c92, 1054453->0x10400d5, 1054454->0x59206e, 1054455->0xc0010, 1054456->0x1a0011, 1054457->?, 1054458->0x40000, 1054459->0x20002, 1054460->0x1620000, 1054461->0x23001d, 1054462->0x1620000, 1054463->0x215b04f9, 1054464->0x220c9c, 1054465->0x107003ba, 1054466->0x215d4, 1054467->0x2070010c, 1054468->0x102a37, 1054469->0x1011a, 1054470->0x2a3e206e, 1054471->0x21540010, 1054472->0x206e0c92, 1054473->0x310059, 1054474->0x206e010c, 1054475->0x102a3c, 1054476->0xc94205b, 1054477->0xc952154, 1054478->0x14a2206e, 1054479->0xe0021, 1054480->0x20000, 1054481->0x10001, 1054482->0x1780000, 1054483->0xa001d, 1054484->0x1380000, 1054485->0x106e0009, 1054486->0x12a17, 1054487->0x39000a, 1054488->0x1120003, 1054489->0x60111, 1054490->0x30003, 1054491->0x1840000, 1054492->0x6e001d, 1054493->0x1120000, 1054494->0xc9e0262, 1054495->0x2b29206e, 1054496->0xc0032, 1054497->0x2b27106e, 1054498->0x20a0000, 1054499->0x620238, 1054500->0x23a0122, 1054501->0x15cf3070, 1054502->0x12120541, 1054503->0x2b26206e, 1054504->0x20c0020, 1054505->0x15dd1071, 1054506->0x20c0002, 1054507->0xc96125b, 1054508->0x206e2212, 1054509->0x202b26, 1054510->0x1071020c, 1054511->0x215dd, 1054512->0x125b020c, 1054513->0x32120c91, 1054514->0x2b26206e, 1054515->0x20c0020, 1054516->0x15dd1071, 1054517->0x20c0002, 1054518->0xc98125b, 1054519->0x206e5212, 1054520->0x202b26, 1054521->0x1071020c, 1054522->0x215dd, 1054523->0x125b020c, 1054524->0x72120c99, 1054525->0x2b26206e, 1054526->0x20c0020, 1054527->0x15dd1071, 1054528->0x20c0002, 1054529->0xc9a125b, 1054530->0x90213, 1054531->0x2b26206e, 1054532->0x20c0020, 1054533->0x15dd1071, 1054534->0x20c0002, 1054535->0xc9b125b, 1054536->0xb0213, 1054537->0x2b26206e, 1054538->0x20c0020, 1054539->0x15dd1071, 1054540->0x20c0002, 1054541->0xc97125b, 1054542->0xc0213, 1054543->0x2b26206e, 1054544->0x20c0020, 1054545->0x15dd1071, 1054546->0x20c0002, 1054547->0xc93125b, 1054548->0xb0111, 1054549->0x40003, 1054550->0x1af0000, 1054551->0x130001d, 1054552->0x5140000, 1054553->0x10400c3, 1054554->0xba0414, 1054555->0x2220104, 1054556->0x107003ba, 1054557->0x815d4, 1054558->0x2070030c, 1054559->0x322a37, 1054560->0x1031a, 1054561->0x2a3e206e, 1054562->?, 1054563->0x338002a, 1054564->0x36200f3, 1054565->?, 1054566->?, 1054567->0x3320002a, 1054568->0x3380126, 1054569->?, 1054570->0x31f002a, 1054571->0x31f0126, 1054572->0x106e0126, 1054573->0x3066c, 1054574->0x362010c, 1054575->0x3133032f, 1054576->0x106e008a, 1054577->0x815da, 1054578->0x338030a, 1054579->?, 1054580->0x41a0c98, 1054581->0x206e05e3, 1054582->0x432a08, 1054583->0x339030a, 1054584->?, 1054585->0x41a0c98, 1054586->0x206e05e4, 1054587->0x432a08, 1054588->0x338030a, 1054589->?, 1054590->0x4140c92, 1054591->0x10400c4, 1054592->0x59206e, 1054593->0x30c0043, 1054594->0x2a3c206e, 1054595->?, 1054596->0x3c0034, 1054597->0x31a001f, 1054598->0x41a0a0d, 1054599->0x20714490, 1054600->0x4302a8, 1054601->0x4f70362, 1054602->0xc9c835b, 1054603->0xc94825b, 1054604->0xc958354, 1054605->0x14a2206e, 1054606->0xe0083, 1054607->0xc928354, 1054608->0x59206e, 1054609->0x30c0053, 1054610->0x2a3c206e, 1054611->?, 1054612->?, 1054613->0xa0d031a, 1054614->0x3ba0422, 1054615->0x2a351070, 1054616->0x51a0004, 1054617->0x206e4491, 1054618->0x542a3e, 1054619->0x206e040c, 1054620->0x42a3a, 1054621->0x106e040c, 1054622->0x42a43, 1054623->0x2071040c, 1054624->0x4302a8, 1054625->0xc928354, 1054626->0x55106e, 1054627->0x30c0003, 1054628->0x1140415, 1054629->0x55231512, 1054630->0x61204a6, 1054631->0x29cf1071, 1054632->0x70c0000, 1054633->0x605074d, 1054634->0xb6406e, 1054635->0x30c5043, 1054636->0x2a3e206e, 1054637->?, 1054638->0xc928354, 1054639->0xc10414, 1054640->0x206e0104, 1054641->0x430059, 1054642->0x206e030c, 1054643->0x322a3c, 1054644->0x362ae28, 1054645->0x31330335, 1054646->?, 1054647->0x206e0c92, 1054648->0x530059, 1054649->0x206e030c, 1054650->0x322a3c, 1054651->0x1031a, 1054652->0x2a3e206e, 1054653->?, 1054654->0x4140c92, 1054655->0x10400c9, 1054656->0x59206e, 1054657->0x30c0043, 1054658->0x2a3c206e, 1054659->?, 1054660->0x3310362, 1054661->0x1a3133, 1054662->0xc988354, 1054663->0x5e1041a, 1054664->0x2a08206e, 1054665->0x30a0043, 1054666->?, 1054667->0xc928354, 1054668->0xca0414, 1054669->0x206e0104, 1054670->0x430059, 1054671->0x206e030c, 1054672->0x322a3c, 1054673->?, 1054674->0xc928354, 1054675->0x59206e, 1054676->0x30c0043, 1054677->0x2a3c206e, 1054678->0x290032, 1054679->?, 1054680->0x206e0c92, 1054681->0x430059, 1054682->0x206e030c, 1054683->0x322a3c, 1054684->?, 1054685->0x15db106e, 1054686->0x30a0008, 1054687->0x140338, 1054688->0x4f80362, 1054689->0xc9c835b, 1054690->0xc928354, 1054691->0xbf0414, 1054692->0x206e0104, 1054693->0x430059, 1054694->0x206e030c, 1054695->0x322a3c, 1054696->?, 1054697->0x4f90362, 1054698->0xc9c835b, 1054699->0xc928354, 1054700->0x59206e, 1054701->0x30c0043, 1054702->0x2a3c206e, 1054703->0x290032, 1054704->0x3ff37, 1054705->0x20001, 1054706->0x2050000, 1054707->0x17001d, 1054708->0x20540000, 1054709->0x1620c9c, 1054710->0x103204f8, 1054711->0x20540008, 1054712->0x1620c9c, 1054713->0x103304f9, 1054714->0xe0003, 1054715->0x4f70062, 1054716->0xc9c205b, 1054717->0xc952054, 1054718->0x14a2206e, 1054719->?, 1054720->0x20000, 1054721->0x0001, 1054722->0x20e0000, 1054723->0x2001d, 1054724->0x120000, 1054725->0x20011, 1054726->0x0001, 1054727->0x2140000, 1054728->0x3001d, 1054729->0x10540000, 1054730->0x110c94, 1054731->0x20000, 1054732->0x0001, 1054733->0x21a0000, 1054734->0x3001d, 1054735->0x10540000, 1054736->0x110c95, 1054737->0x20000, 1054738->0x0001, 1054739->0x2200000, 1054740->0x3001d, 1054741->0x10540000, 1054742->0x110c9c, 1054743->0x20000, 1054744->0x0001, 1054745->0x2260000, 1054746->0x2001d, 1054747->0x120000, 1054748->0x50011, 1054749->0x30002, 1054750->0x22c0000, 1054751->0x18001d, 1054752->0x41520000, 1054753->0x12120038, 1054754->0xd2133, 1054755->0x364154, 1054756->0x65011f, 1054757->0x1f1007, 1054758->0x30700065, 1054759->0x4315e0, 1054760->0x11a000e, 1054761->0x21a0a0d, 1054762->0x207122de, 1054763->0x2102aa, 1054764->0x2f828, 1054765->0x0001, 1054766->0x2400000, 1054767->0x2001d, 1054768->0x120000, 1054769->0x3000f, 1054770->0x20001, 1054771->0x2460000, 1054772->0x30001d, 1054773->0x20540000, 1054774->0x380c98, 1054775->0x2054002c, 1054776->0x11a0c98, 1054777->0x206e05e1, 1054778->0x102a08, 1054779->0x39000a, 1054780->0x20540020, 1054781->0x11a0c98, 1054782->0x206e05e2, 1054783->0x102a08, 1054784->0x39000a, 1054785->0x20540016, 1054786->0x11a0c98, 1054787->0x206e05e3, 1054788->0x102a08, 1054789->0x39000a, 1054790->0x2054000c, 1054791->0x11a0c98, 1054792->0x206e05e4, 1054793->0x102a08, 1054794->0x38000a, 1054795->0x10120004, 1054796->0x12000f, 1054797->0x3fe28, 1054798->0x20001, 1054799->0x24c0000, 1054800->0x12001d, 1054801->0x20540000, 1054802->0x380c91, 1054803->0x2054000e, 1054804->0x11a0c91, 1054805->0x206e046d, 1054806->0x102a08, 1054807->0x38000a, 1054808->0x10120004, 1054809->0x12000f, 1054810->0x3fe28, 1054811->0x20001, 1054812->0x2520000, 1054813->0x9001d, 1054814->0x1a0000, 1054815->0x11a0a0d, 1054816->0x20713965, 1054817->0x1002b0, 1054818->0xf0012, 1054819->0x80000, 1054820->0x40001, 1054821->0x2590002, 1054822->0x119001d, 1054823->0x106e0000, 1054824->0x715da, 1054825->0x438040a, 1054826->0x7254001e, 1054827->0x71540c99, 1054828->0x106e0c9a, 1054829->0x12a17, 1054830->0x106e030a, 1054831->0x715db, 1054832->0x438040a, 1054833->0x745400ec, 1054834->0x206e0c9b, 1054835->0x412a08, 1054836->0x439040a, 1054837->0x4140009, 1054838->0x10400c5, 1054839->0x15d82070, 1054840->0xe0047, 1054841->0x43344412, 1054842->0x4130006, 1054843->0x43370008, 1054844->0x414001f, 1054845->0x10400c6, 1054846->0x15d82070, 1054847->?, 1054848->0x462000d, 1054849->0x745b04f9, 1054850->0x74540c9c, 1054851->0x5140c92, 1054852->0x10400ba, 1054853->0x59206e, 1054854->0x40c0054, 1054855->0xc94745b, 1054856->0xc957454, 1054857->0x14a2206e, 1054858->?, 1054859->0xc987454, 1054860->0x5e1051a, 1054861->0x2a08206e, 1054862->0x40a0054, 1054863->0x170438, 1054864->0xc9d7454, 1054865->0x130438, 1054866->0xc9d7454, 1054867->0x270a106e, 1054868->0x40c0004, 1054869->0x14e60562, 1054870->0x95433, 1054871->0xc80414, 1054872->0x20700104, 1054873->0x4715d8, 1054874->0x7454bd28, 1054875->0x4380c9d, 1054876->0x41a008e, 1054877->0x5220a0d, 1054878->0x107003ba, 1054879->0x52a35, 1054880->0x46b8061a, 1054881->0x2a3e206e, 1054882->0x50c0065, 1054883->0xc987654, 1054884->0x2a3e206e, 1054885->0x50c0065, 1054886->0x2a43106e, 1054887->0x50c0005, 1054888->0x2a82071, 1054889->0x74540054, 1054890->0x51a0c98, 1054891->0x206e05e1, 1054892->0x542a08, 1054893->0x438040a, 1054894->0x7454000d, 1054895->0x15120c9d, 1054896->0x15df306e, 1054897->0x50c0757, 1054898->0x26f2406e, 1054899->?, 1054900->0xc987454, 1054901->0x5e2051a, 1054902->0x2a08206e, 1054903->0x40a0054, 1054904->0xe0438, 1054905->0xc9d7454, 1054906->0x306e1512, 1054907->0x75715df, 1054908->0x406e050c, 1054909->0x512426f1, 1054910->?, 1054911->0xc987454, 1054912->0x5e3051a, 1054913->0x2a08206e, 1054914->0x40a0054, 1054915->0xe0438, 1054916->0xc9d7454, 1054917->0x306e1512, 1054918->0x75715df, 1054919->0x406e050c, 1054920->0x51242725, 1054921->?, 1054922->0xc987454, 1054923->0x5e4051a, 1054924->0x2a08206e, 1054925->0x40a0054, 1054926->0xe0438, 1054927->0xc9d7454, 1054928->0x306e1512, 1054929->0x75715df, 1054930->0x406e050c, 1054931->0x51242726, 1054932->?, 1054933->0x3b50422, 1054934->0x3ba0522, 1054935->0x2a351070, 1054936->0x61a0005, 1054937->0x206e2303, 1054938->0x652a3e, 1054939->0x7654050c, 1054940->0x206e0c98, 1054941->0x652a3e, 1054942->0x106e050c, 1054943->0x52a43, 1054944->0x2070050c, 1054945->0x5429f4, 1054946->0x4220427, 1054947->0x51a03b5, 1054948->0x20701984, 1054949->0x5429f4, 1054950->0x4220427, 1054951->0x52203b5, 1054952->0x107003ba, 1054953->0x52a35, 1054954->0x11d6061a, 1054955->0x2a3e206e, 1054956->0x50c0065, 1054957->0xc917654, 1054958->0x2a3e206e, 1054959->0x50c0065, 1054960->0x2a43106e, 1054961->0x50c0005, 1054962->0x29f42070, 1054963->0x4270054, 1054964->0x0000, 1054965->0x300000, 1054966->0x470001, 1054967->0xd20000, 1054968->0x1010001, 1054969->0x3107b5, 1054970->0x60000, 1054971->0x40004, 1054972->0x2bd0000, 1054973->0xb001d, 1054974->0x40700000, 1054975->0x54321015, 1054976->0xa13001a, 1054977->0xa14011a, 1054978->0x2a82071, 1054979->0xe0010, 1054980->0x40000, 1054981->0x20003, 1054982->0x2cc0000, 1054983->0x5001d, 1054984->0x20710000, 1054985->0x3216a6, 1054986->0x11000c, 1054987->0x20000, 1054988->0x0001, 1054989->0x2d80000, 1054990->0x3001d, 1054991->0x1a0000, 1054992->0x11061d, 1054993->0x260000, 1054994->0xd0010, 1054995->0x2dd0000, 1054996->0x9e001d, 1054997->0x15220000, 1054998->0x1760254, 1054999->0x151728, 1055000->0x190008, 1055001->0x150108, 1055002->0xe4e105b, 1055003->0x1a0008, 1055004->0x150108, 1055005->0xe4f105b, 1055006->0x21512, 1055007->0x5033001b, 1055008->0x5130080, 1055009->0x80009, 1055010->0x5590015, 1055011->0x80e48, 1055012->0x5540016, 1055013->0x106e0ca5, 1055014->0x50bf3, 1055015->0x174130c, 1055016->0x130055, 1055017->0x714050c, 1055018->0x1120093, 1055019->0xb2206e, 1055020->0x120a0075, 1055021->0x211238, 1055022->0xa13051a, 1055023->0x3ba0722, 1055024->0x2a351070, 1055025->0x81a0007, 1055026->0x206e287f, 1055027->0x872a3e, 1055028->0x2070c, 1055029->0x206e0012, 1055030->0x72a3f, 1055031->0x106e070c, 1055032->0x72a43, 1055033->0x2071070c, 1055034->0x7502a8, 1055035->0x82512, 1055036->0x5590015, 1055037->0x15120e48, 1055038->0x150008, 1055039->0xe49055c, 1055040->0x451d38, 1055041->0x431e38, 1055042->0x81512, 1055043->0x1080017, 1055044->0x2020015, 1055045->0x4071001f, 1055046->0x251016b6, 1055047->0x8140c, 1055048->0x1080016, 1055049->0x2080017, 1055050->0x3080018, 1055051->0x4080019, 1055052->0x546e0014, 1055053->0x321015ec, 1055054->0x174060c, 1055055->0x1615e5, 1055056->0x1e38090c, 1055057->0x20380004, 1055058->0x1e120024, 1055059->0x11013, 1055060->0x160508, 1055061->0x1c0708, 1055062->0x1d0808, 1055063->0x220a08, 1055064->0x230b08, 1055065->0x240c08, 1055066->0x1a0d08, 1055067->0x250f08, 1055068->0x211102, 1055069->0x15ea0d74, 1055070->0x50c0005, 1055071->0x45120511, 1055072->0x150008, 1055073->0xe480559, 1055074->0x512b728, 1055075->0xe12bf28, 1055076->0x9de28, 1055077->0x40002, 1055078->0x34b0001, 1055079->0x47001d, 1055080->0x2120000, 1055081->0xca17554, 1055082->0x2a98106e, 1055083->0xa0005, 1055084->0x3a0235, 1055085->0xca17554, 1055086->0x2a90206e, 1055087->0x40c0025, 1055088->0x19c041f, 1055089->0x7934552, 1055090->0xd718652, 1055091->0x2d6533, 1055092->0xca17554, 1055093->0x2a94206e, 1055094->0x75540025, 1055095->0x6120ca3, 1055096->0x1010306e, 1055097->0x43540654, 1055098->0x122078b, 1055099->0x1070001f, 1055100->0x10069, 1055101->0x45c0051a, 1055102->0x16b1106e, 1055103->0x60c0008, 1055104->0x7c306e, 1055105->0x51a0651, 1055106->0x106e303b, 1055107->0x715e5, 1055108->0x306e060c, 1055109->0x651007a, 1055110->0xca37554, 1055111->0x406ef612, 1055112->0x16530026, 1055113->0x2d8000e, 1055114->?, 1055115->?, 1055116->0x3b0000, 1055117->0x60000, 1055118->0x1010001, 1055119->0x54511, 1055120->0x20002, 1055121->0x38e0000, 1055122->0x2b001d, 1055123->0x40200000, 1055124->0x38024b, 1055125->0x41f0008, 1055126->0x206e024b, 1055127->0x4315ed, 1055128->0x1a000e, 1055129->0x1220a13, 1055130->0x107003ba, 1055131->0x12a35, 1055132->0x35f5021a, 1055133->0x2a3e206e, 1055134->0x10c0021, 1055135->0x29e5106e, 1055136->0x20c0004, 1055137->0x29b4106e, 1055138->0x20c0002, 1055139->0x2a3e206e, 1055140->0x10c0021, 1055141->0x2a43106e, 1055142->0x10c0001, 1055143->0x2aa2071, 1055144->?, 1055145->0x60000, 1055146->0x20004, 1055147->0x39f0000, 1055148->0x8001d, 1055149->0x220000, 1055150->0x11a03a6, 1055151->0x20702212, 1055152->0x1029c4, 1055153->0x1e0027, 1055154->0x90008, 1055155->0x3ad0000, 1055156->0x70001d, 1055157->0x1d380000, 1055158->0x1812005f, 1055159->0x180308, 1055160->0x170408, 1055161->0x190502, 1055162->0x1a0602, 1055163->0x1b0708, 1055164->0x16b70677, 1055165->0x90c0003, 1055166->0x160308, 1055167->0x170408, 1055168->0x180508, 1055169->0x190602, 1055170->0x1a0702, 1055171->0x1b0808, 1055172->0x15eb0774, 1055173->0xb0c0003, 1055174->0x15e50174, 1055175->0xe0c0016, 1055176->0x10130f12, 1055177->0x11130000, 1055178->0x12130000, 1055179->0xa080000, 1055180->0xc080016, 1055181->0xd08001c, 1055182->0x974001d, 1055183->0xa15e8, 1055184->0x174150c, 1055185->0x1615e4, 1055186->0x1338130c, 1055187->0x31a0027, 1055188->0x41a0a13, 1055189->0x20710f96, 1055190->0x4302a8, 1055191->0x1961422, 1055192->0x140008, 1055193->0x160108, 1055194->0x150208, 1055195->0xfed3070, 1055196->0x3220210, 1055197->0x8019b, 1055198->0x1080016, 1055199->0x30700014, 1055200->0x1031001, 1055201->0x140008, 1055202->0x130108, 1055203->0xfef306e, 1055204->0xe0310, 1055205->?, 1055206->0xa13031a, 1055207->0x1985041a, 1055208->0x2af2071, 1055209->0x80043, 1055210->0x1080016, 1055211->0x206e0015, 1055212->0x1015f8, 1055213->0x7ef28, 1055214->0x20002, 1055215->0x40c0000, 1055216->0x65001d, 1055217->0x60540000, 1055218->0x21a078a, 1055219->0x206e45c0, 1055220->0x202abf, 1055221->0x21f020c, 1055222->0x2107043c, 1055223->0x43c011f, 1055224->0xa13021a, 1055225->0x3ba0322, 1055226->0x2a351070, 1055227->0x41a0003, 1055228->0x206e4af1, 1055229->0x432a3e, 1055230->0x106e030c, 1055231->0x515f0, 1055232->0x206e040a, 1055233->0x432a3f, 1055234->0x41a030c, 1055235->0x206e02b2, 1055236->0x432a3e, 1055237->0x6452030c, 1055238->0x206e0798, 1055239->0x432a3a, 1055240->0x41a030c, 1055241->0x206e0237, 1055242->0x432a3e, 1055243->0x6452030c, 1055244->0x206e0791, 1055245->0x432a3a, 1055246->0x41a030c, 1055247->0x206e0264, 1055248->0x432a3e, 1055249->0x6452030c, 1055250->0x206e0793, 1055251->0x432a3a, 1055252->0x41a030c, 1055253->0x206e0088, 1055254->0x432a3e, 1055255->0x5454030c, 1055256->0x106e0ca5, 1055257->0x40c18, 1055258->0x106e040c, 1055259->0x402c7, 1055260->0x206e040a, 1055261->0x432a3a, 1055262->0x106e030c, 1055263->0x32a43, 1055264->0x2071030c, 1055265->0x3202a8, 1055266->0x15f6206e, 1055267->0xe0065, 1055268->0xd0000, 1055269->0x50002, 1055270->0x42b0000, 1055271->0xe1001d, 1055272->0x18120000, 1055273->?, 1055274->0x106e0ca5, 1055275->0x70c18, 1055276->0x106e070c, 1055277->0x702c7, 1055278->?, 1055279->0x106e0ca5, 1055280->0x70c18, 1055281->0x106e070c, 1055282->0x702cd, 1055283->?, 1055284->0x106e0ca5, 1055285->0x70c18, 1055286->0x106e070c, 1055287->0x702bb, 1055288->0x71a050a, 1055289->0x9220a13, 1055290->0x107003ba, 1055291->0x92a35, 1055292->0x38730a1a, 1055293->0x2a3e206e, 1055294->0x90c00a9, 1055295->0x15f0106e, 1055296->0xa0a000b, 1055297->0x2a3f206e, 1055298->0x90c00a9, 1055299->0x5810a1a, 1055300->0x2a3e206e, 1055301->0x90c00a9, 1055302->0x2a3a206e, 1055303->0x90c0069, 1055304->0x5800a1a, 1055305->0x2a3e206e, 1055306->0x90c00a9, 1055307->0x2a3a206e, 1055308->0x90c0059, 1055309->0x2a43106e, 1055310->0x90c0009, 1055311->0x2a82071, 1055312->0x106e0097, 1055313->0xb15f0, 1055314->0x739070a, 1055315->0x6380010, 1055316->0x538000e, 1055317->?, 1055318->0x10710ca3, 1055319->0x415e7, 1055320->0x406e080a, 1055321->0x187c100a, 1055322->0x2712000e, 1055323->0x15f1306e, 1055324->0x30c0c7b, 1055325->0x78ac754, 1055326->0x45c0091a, 1055327->0x2abf206e, 1055328->0x70c0097, 1055329->0x43c071f, 1055330->0x21f7207, 1055331->?, 1055332->0x106e0ca5, 1055333->0x70c18, 1055334->0x106e070c, 1055335->0x702b9, 1055336->0x713000a, 1055337->0x7032000e, 1055338->0x7130012, 1055339->0x7033000d, 1055340->?, 1055341->0x106e0ca5, 1055342->0x70c19, 1055343->0x106e070c, 1055344->0x71061, 1055345->0x739070a, 1055346->?, 1055347->0x106e0ca5, 1055348->0x70c18, 1055349->0x106e070c, 1055350->0x702c9, 1055351->0x7912070a, 1055352->0xf9733, 1055353->0xca5b754, 1055354->0x226071f, 1055355->0xba27754, 1055356->0xbfb7754, 1055357->0x6520962, 1055358->0x39732, 1055359->?, 1055360->0x7390791, 1055361->0x106e000e, 1055362->0xb15f0, 1055363->0x739070a, 1055364->?, 1055365->0x30720ca2, 1055366->0x32706fb, 1055367->?, 1055368->0x106e0ca4, 1055369->0x7099c, 1055370->0x739070a, 1055371->?, 1055372->0x30720ca2, 1055373->0x32706fb, 1055374->0xca4b754, 1055375->0x993206e, 1055376->?, 1055377->0xca2b754, 1055378->0x791c852, 1055379->0x793c952, 1055380->0x6ff5372, 1055381->?, 1055382->0x7d80791, 1055383->?, 1055384->?, 1055385->0x30000, 1055386->0x30002, 1055387->0x4790000, 1055388->0xa001d, 1055389->0x130000, 1055390->0x306e000a, 1055391->0x20115f1, 1055392->0x206e000c, 1055393->0x115f3, 1055394->0x5000e, 1055395->0x40002, 1055396->0x4820000, 1055397->0x14001d, 1055398->0x2120000, 1055399->0x49ab001a, 1055400->0x1de2071, 1055401->0xa0020, 1055402->0x90038, 1055403->0xca33054, 1055404->0x406e4112, 1055405->0x2104100a, 1055406->0x206e000e, 1055407->0x4315f4, 1055408->0x1dfc28, 1055409->0xa000b, 1055410->0x48e0000, 1055411->0x75001d, 1055412->0x17380000, 1055413->0x1712005c, 1055414->0x4080812, 1055415->0x5080014, 1055416->0x6080013, 1055417->0x9020015, 1055418->0x677001a, 1055419->0x416ba, 1055420->0xf380f0c, 1055421->0x8005d, 1055422->0x1080012, 1055423->0x2080013, 1055424->0x3080014, 1055425->0x5f6e0015, 1055426->0x321015ec, 1055427->0x174050c, 1055428->0x1215e5, 1055429->0x1c12080c, 1055430->0x120408, 1055431->0x160608, 1055432->0x170708, 1055433->0x180908, 1055434->0x1b0a02, 1055435->0x150b08, 1055436->0x1c0d02, 1055437->0x15e90a74, 1055438->0x110c0004, 1055439->0x15e40174, 1055440->0xe0c0012, 1055441->0x250e38, 1055442->0xa13041a, 1055443->0xf96061a, 1055444->0x2a82071, 1055445->0x10220064, 1055446->0x8019d, 1055447->0x1080010, 1055448->0x2080012, 1055449->0x30700011, 1055450->0x2101011, 1055451->0x19b0422, 1055452->0x120008, 1055453->0x100108, 1055454->0x10013070, 1055455->0x80104, 1055456->0x306e0010, 1055457->0x4e01013, 1055458->0x712000e, 1055459->0x41aa628, 1055460->0x61a0a13, 1055461->0x20711985, 1055462->0x6402af, 1055463->0x120008, 1055464->0x110108, 1055465->0x15f8206e, 1055466->?, 1055467->0xa13041a, 1055468->0xa16061a, 1055469->0x2aa2071, 1055470->?, 1055471->0x20000, 1055472->0x10002, 1055473->0x4fd0000, 1055474->0x6001d, 1055475->0x15b0000, 1055476->0x10700ca6, 1055477->0x002f, 1055478->0xe000e, 1055479->0x40001, 1055480->0x5030005, 1055481->0xe9001d, 1055482->0xb120000, 1055483->0x15fb106e, 1055484->0x70a000d, 1055485->?, 1055486->0x1a12001e, 1055487->0x1ba732, 1055488->0xca6da54, 1055489->0x3ba0b22, 1055490->0x2a351070, 1055491->0xc1a000b, 1055492->0x206e1ec2, 1055493->0xcb2a3e, 1055494->0x206e0b0c, 1055495->0x7b2a3a, 1055496->0x106e0b0c, 1055497->0xb2a43, 1055498->0x20710b0c, 1055499->0xba1601, 1055500->0x206e000e, 1055501->0xbd15fc, 1055502->0x639060c, 1055503->?, 1055504->0xb1a0ca6, 1055505->0x20711ebf, 1055506->0xba1602, 1055507->0xa1af228, 1055508->0x206e4b20, 1055509->0xa60170, 1055510->0x939090c, 1055511->?, 1055512->0xb1a0ca6, 1055513->0x20711ec1, 1055514->0xba1603, 1055515->0xa1ae228, 1055516->0x206e4975, 1055517->0xa6016f, 1055518->0x839080c, 1055519->?, 1055520->0xb1a0ca6, 1055521->0x20711ec0, 1055522->0xba1604, 1055523->0x22d228, 1055524->0x10700250, 1055525->0x16d6, 1055526->0xa592a12, 1055527->0x710de3, 1055528->0x16ae, 1055529->0xa590a0a, 1055530->0x85b0de0, 1055531->0x10710ded, 1055532->0x16ff, 1055533->0x122050c, 1055534->0xa130383, 1055535->0x20700064, 1055536->0xa12962, 1055537->0x3850322, 1055538->0x29712070, 1055539->0xa130013, 1055540->0x206e1006, 1055541->0xa32978, 1055542->0x206e0a12, 1055543->0xa32978, 1055544->0x206e0a12, 1055545->0xa32978, 1055546->0x2941071, 1055547->0xa0c0009, 1055548->0x17221071, 1055549->0x20c000a, 1055550->0xe062a52, 1055551->0x2974206e, 1055552->0x2a5200a3, 1055553->0x206e0e07, 1055554->0xa32974, 1055555->0xe0e2a52, 1055556->0x2974206e, 1055557->0x2a5200a3, 1055558->0x206e0e09, 1055559->0xa32974, 1055560->0xe082a52, 1055561->0x2974206e, 1055562->0x2a5400a3, 1055563->0xb120e0d, 1055564->0xe0d2c54, 1055565->0x406ecc21, 1055566->?, 1055567->0x206e0a12, 1055568->0xa32974, 1055569->0x206e0a12, 1055570->0xa32974, 1055571->0x206e0a12, 1055572->0xa32974, 1055573->0x206e5a21, 1055574->0xa32974, 1055575->0x5b210a12, 1055576->0x2976406e, 1055577->?, 1055578->?, 1055579->0x106e0ca7, 1055580->0x12964, 1055581->0xc120b0c, 1055582->0x6fb3072, 1055583->0x106e0cba, 1055584->0x32972, 1055585->?, 1055586->0x290a0d, 1055587->0x40dff53, 1055588->0xca6da54, 1055589->0x2f710b1a, 1055590->0x16053071, 1055591->0x106e04ba, 1055592->0x32972, 1055593->?, 1055594->0x290a0d, 1055595->0xa0dff43, 1055596->0x2972106e, 1055597->0xa270003, 1055598->?, 1055599->0x740000, 1055600->0x560000, 1055601->0xca0006, 1055602->0x30000, 1055603->0xd30001, 1055604->0x70000, 1055605->0xda0012, 1055606->0x30000, 1055607->0xe3000d, 1055608->0x30000, 1055609->0x1050015, 1055610->0x1cf078d, 1055611->?, 1055612->0x101e201, 1055613->0x1df078d, 1055614->0x101e200, 1055615->0x1e7078d, 1055616->0x50000, 1055617->0x20003, 1055618->0x5810000, 1055619->0x11001d, 1055620->0x10700000, 1055621->0x215fe, 1055622->0xca62054, 1055623->0x3eb1011a, 1055624->0x16002071, 1055625->0x20540010, 1055626->0x21120ca6, 1055627->0x160e206e, 1055628->0xe0010, 1055629->0x50000, 1055630->0x40003, 1055631->0x58d0000, 1055632->0x12001d, 1055633->0x1a0000, 1055634->0x1120a19, 1055635->0x12424070, 1055636->0x221302, 1055637->0x2070023c, 1055638->0x2015fa, 1055639->0xcaa205b, 1055640->0xca8235b, 1055641->0xca7245b, 1055642->0x2000e, 1055643->0x20002, 1055644->0x59e0000, 1055645->0x4001d, 1055646->0x206e0000, 1055647->0x10160a, 1055648->0x2000e, 1055649->0x20002, 1055650->0x5a90000, 1055651->0x4001d, 1055652->0x206e0000, 1055653->0x10160b, 1055654->0x2000e, 1055655->0x20002, 1055656->0x5b40000, 1055657->0x4001d, 1055658->0x206e0000, 1055659->0x10160b, 1055660->0x2000e, 1055661->0x20002, 1055662->0x5bf0000, 1055663->0x4001d, 1055664->0x206e0000, 1055665->0x10160b, 1055666->0x2000e, 1055667->0x20002, 1055668->0x5ca0000, 1055669->0x4001d, 1055670->0x206e0000, 1055671->0x10160b, 1055672->0x3000e, 1055673->0x30003, 1055674->0x5d50000, 1055675->0x4001d, 1055676->0x306e0000, 1055677->0x210160c, 1055678->0xc000e, 1055679->0x90002, 1055680->0x5e30000, 1055681->0x3f001d, 1055682->0x7120000, 1055683->0x16b3106e, 1055684->0x90c000b, 1055685->0x90939, 1055686->0x35e6001a, 1055687->0x160b206e, 1055688->0x12000a, 1055689->0x122000f, 1055690->0x1a001f, 1055691->0x2070277a, 1055692->0x1006a, 1055693->0x4b20001a, 1055694->0x16b0106e, 1055695->0x20c000b, 1055696->0x7a306e, 1055697->0x1a0201, 1055698->0x306e46f2, 1055699->0x901007d, 1055700->0xca9a054, 1055701->0xc10106e, 1055702->0xa0000, 1055703->0x3cb2071, 1055704->?, 1055705->0x21a0ca8, 1055706->0x3132768, 1055707->?, 1055708->0x106e0caa, 1055709->0xa1607, 1055710->?, 1055711->0x9747807, 1055712->0x0062, 1055713->?, 1055714->0x30000, 1055715->0x30002, 1055716->0x6070000, 1055717->0x9001d, 1055718->0x220000, 1055719->0x3070023d, 1055720->0x21015ff, 1055721->0x160f106e, 1055722->0x110000, 1055723->0x40000, 1055724->0x20002, 1055725->0x6180000, 1055726->0x31001d, 1055727->0x30540000, 1055728->0x200036, 1055729->0x38024b, 1055730->0x3054000b, 1055731->0x1f0036, 1055732->0x2070024b, 1055733->0x21608, 1055734->0xf000a, 1055735->0x3ba0022, 1055736->0x2a351070, 1055737->0x11a0000, 1055738->0x206e35b5, 1055739->0x102a3e, 1055740->0x3154000c, 1055741->0x106e0036, 1055742->0x129e5, 1055743->0x106e010c, 1055744->0x129b4, 1055745->0x206e010c, 1055746->0x102a3e, 1055747->0x106e000c, 1055748->0x2a43, 1055749->0x206e000c, 1055750->0x2160b, 1055751->?, 1055752->0x30000, 1055753->0x20003, 1055754->0x6260000, 1055755->0x6001d, 1055756->0x15b0000, 1055757->0x20700cab, 1055758->0x2000c2, 1055759->0x4000e, 1055760->0x20002, 1055761->0x6300000, 1055762->0xd001d, 1055763->0x20540000, 1055764->0x11a0cab, 1055765->0x206e07ed, 1055766->0x101645, 1055767->0xcab2054, 1055768->0x16171071, 1055769->0xe0000, 1055770->0x30000, 1055771->0x20003, 1055772->0x63b0000, 1055773->0x6001d, 1055774->0x15b0000, 1055775->0x20700cac, 1055776->0x2000c2, 1055777->0x4000e, 1055778->0x20002, 1055779->0x6450000, 1055780->0xd001d, 1055781->0x20540000, 1055782->0x11a0cac, 1055783->0x206e07ee, 1055784->0x101645, 1055785->0xcac2054, 1055786->0x16181071, 1055787->0xe0000, 1055788->0x30000, 1055789->0x10000, 1055790->0x6500002, 1055791->0x24001d, 1055792->0x710000, 1055793->0x0674, 1055794->0x21000c, 1055795->0x43e0023, 1055796->0xcad0069, 1055797->0xcad0062, 1055798->0x3440162, 1055799->0x671106e, 1055800->0x10a0001, 1055801->0x24b1212, 1055802->0x620100, 1055803->0x1620cad, 1055804->0x106e0342, 1055805->0x10671, 1055806->0x2212010a, 1055807->0x100024b, 1055808->0xd000e, 1055809->0xdfe28, 1055810->0x9f128, 1055811->0xb0000, 1055812->0x140005, 1055813->0xb0000, 1055814->0x1020001, 1055815->0x12007ac, 1055816->0x2207ac, 1055817->0x50000, 1055818->0x10005, 1055819->0x6560000, 1055820->0xc001d, 1055821->0x10700000, 1055822->0x29e1, 1055823->0xcf40159, 1055824->0xcf70259, 1055825->0xcf50359, 1055826->0xcf6045c, 1055827->0x2000e, 1055828->0x0001, 1055829->0x66a0000, 1055830->0x3001d, 1055831->0x10520000, 1055832->0xf0cf4, 1055833->0x20000, 1055834->0x0001, 1055835->0x66f0000, 1055836->0x3001d, 1055837->0x10520000, 1055838->0xf0cf5, 1055839->0x20000, 1055840->0x0001, 1055841->0x6740000, 1055842->0x3001d, 1055843->0x10520000, 1055844->0xf0cf7, 1055845->0x20000, 1055846->0x0001, 1055847->0x6790000, 1055848->0x3001d, 1055849->0x10550000, 1055850->0xf0cf6, 1055851->0x30000, 1055852->0x20001, 1055853->0x67e0000, 1055854->0x37001d, 1055855->0x220000, 1055856->0x107003ba, 1055857->0x2a35, 1055858->0xa23011a, 1055859->0x2a3e206e, 1055860->0xc0010, 1055861->0xcf42152, 1055862->0x2a3a206e, 1055863->0xc0010, 1055864->0x4b4011a, 1055865->0x2a3e206e, 1055866->0xc0010, 1055867->0xcf72152, 1055868->0x2a3a206e, 1055869->0xc0010, 1055870->0x25c8011a, 1055871->0x2a3e206e, 1055872->0x10c0010, 1055873->0x1676106e, 1055874->0xa0002, 1055875->0xd0038, 1055876->0xcb1001a, 1055877->0x2a3e206e, 1055878->0xc0001, 1055879->0x2a43106e, 1055880->0xc0000, 1055881->0x1a0011, 1055882->?, 1055883->0x10000, 1055884->0x10000, 1055885->0x6830000, 1055886->0xb001d, 1055887->0x220000, 1055888->0x107003af, 1055889->0x29e1, 1055890->0xd080069, 1055891->0x670012, 1055892->0xe0d07, 1055893->0x70000, 1055894->0x40003, 1055895->0x6890000, 1055896->0x32001d, 1055897->0x12120000, 1055898->0x10700312, 1055899->0x40174, 1055900->0x780122, 1055901->0x1c91070, 1055902->0x415b0001, 1055903->0x1220d03, 1055904->0x207003ee, 1055905->0x212b1c, 1055906->0xd02415b, 1055907->0xd05455b, 1055908->0xd04465b, 1055909->0xd044154, 1055910->0x6d34072, 1055911->0x41543241, 1055912->0x32120d04, 1055913->0x6e34072, 1055914->0x10713241, 1055915->0x5167c, 1055916->0x4154000a, 1055917->0x206e0d02, 1055918->0x12b21, 1055919->0xd044154, 1055920->0x40724212, 1055921->0x324106ec, 1055922->0x5000e, 1055923->0x30001, 1055924->0x6a40000, 1055925->0xc001d, 1055926->0x106e0000, 1055927->0x40050, 1055928->0x21a010c, 1055929->0x13124f00, 1055930->0x1ef3071, 1055931->0xa0321, 1055932->0x7000f, 1055933->0x40005, 1055934->0x6b30002, 1055935->0x20001d, 1055936->0x1620000, 1055937->0x11d0d08, 1055938->0xd060062, 1055939->0x90039, 1055940->0x2430022, 1055941->0x16793070, 1055942->0x690320, 1055943->0x600d06, 1055944->0xd80d07, 1055945->0x670100, 1055946->0x11e0d07, 1055947->0xd060062, 1055948->0x16834070, 1055949->0x626540, 1055950->0x110d06, 1055951->0x11e000d, 1055952->0x30027, 1055953->0x120000, 1055954->0x1e0001, 1055955->0x10000, 1055956->0x10001, 1055957->0x6001d, 1055958->0x40002, 1055959->0x6cb0000, 1055960->0x71001d, 1055961->0x3120000, 1055962->0x2a5154, 1055963->0x490139, 1055964->0x2b5154, 1055965->0x450138, 1055966->0x2b5154, 1055967->0x43e011f, 1055968->0x43e011f, 1055969->0x440212, 1055970->0x41540201, 1055971->0x106e0d02, 1055972->0x12b1e, 1055973->0x1032010a, 1055974->0x1220033, 1055975->0x107003ba, 1055976->0x12a35, 1055977->0x213b021a, 1055978->0x2a3e206e, 1055979->0x10c0021, 1055980->0xd024254, 1055981->0x2a3d206e, 1055982->0x10c0021, 1055983->0x54021a, 1055984->0x2a3e206e, 1055985->0x10c0021, 1055986->0x2a3a206e, 1055987->0x10c0001, 1055988->0x2a43106e, 1055989->0x10c0001, 1055990->0x16802070, 1055991->0x41540014, 1055992->0x206e0d02, 1055993->0x12b21, 1055994->0xd034154, 1055995->0x650222, 1055996->0x1604070, 1055997->0x206e3332, 1055998->0x2101cf, 1055999->0x122000e, 1056000->0x107003ba, 1056001->0x12a35, 1056002->0x22c6021a, 1056003->0x2a3e206e, 1056004->0x10c0021, 1056005->0x2a5254, 1056006->0x2a3d206e, 1056007->0x10c0021, 1056008->0x570021a, 1056009->0x2a3e206e, 1056010->0x10c0021, 1056011->0x2b5254, 1056012->0x2a3d206e, 1056013->0x10c0021, 1056014->0x2a43106e, 1056015->0x10c0001, 1056016->0x16812070, 1056017->?, 1056018->0x30000, 1056019->0x20002, 1056020->0x6e60000, 1056021->0x6001d, 1056022->0x1a0000, 1056023->0x20710a17, 1056024->0x2002a8, 1056025->0x3000e, 1056026->0x20002, 1056027->0x6f00000, 1056028->0x6001d, 1056029->0x1a0000, 1056030->0x20710a17, 1056031->0x2002b0, 1056032->0x6000e, 1056033->0x40004, 1056034->0x6fa0000, 1056035->0xb001d, 1056036->0x220000, 1056037->0x40700077, 1056038->0x543001c2, 1056039->0xd032154, 1056040->0x1cb206e, 1056041->0xe0001, 1056042->0x40000, 1056043->0x20002, 1056044->0x7100001, 1056045->0x29001d, 1056046->0x20540000, 1056047->0x206e0d03, 1056048->0x3001d1, 1056049->0xd080162, 1056050->0x60011d, 1056051->0xd80d07, 1056052->0x67ff00, 1056053->0x600d07, 1056054->0x3c0d07, 1056055->0x20540014, 1056056->0x20720d04, 1056057->0x200768, 1056058->0xd042054, 1056059->0x7782072, 1056060->0x20540020, 1056061->0x20720d04, 1056062->0x200781, 1056063->0x690012, 1056064->0x11e0d06, 1056065->0xd000e, 1056066->0x27011e, 1056067->0x80000, 1056068->0x200000, 1056069->0x10001, 1056070->0x20026, 1056071->0x10001, 1056072->0x7210000, 1056073->0x7001d, 1056074->0x10540000, 1056075->0x106e0d02, 1056076->0x2b1e, 1056077->0xf000a, 1056078->0x70000, 1056079->0x20002, 1056080->0x7270000, 1056081->0x9a001d, 1056082->0x24120000, 1056083->0x386252, 1056084->0x8b022b, 1056085->0x206f0000, 1056086->0x650177, 1056087->0x222000e, 1056088->0x107003ba, 1056089->0x22a35, 1056090->0x8c0031a, 1056091->0x2a3e206e, 1056092->0x20c0032, 1056093->0x386352, 1056094->0x2a3a206e, 1056095->0x20c0032, 1056096->0x2a43106e, 1056097->0x20c0002, 1056098->0x16802070, 1056099->0x61540025, 1056100->0x11f0036, 1056101->0x20700065, 1056102->0x15167e, 1056103->0x5254e028, 1056104->0x206e0d04, 1056105->0x451682, 1056106->0x2072030c, 1056107->0x32068e, 1056108->0x21ad628, 1056109->0x20700e77, 1056110->0x251680, 1056111->0x366154, 1056112->0x65011f, 1056113->0x2a1254, 1056114->0x350239, 1056115->0x2b1254, 1056116->0x43e021f, 1056117->0x43e021f, 1056118->0x440312, 1056119->0x2220302, 1056120->0x107003ba, 1056121->0x22a35, 1056122->0x2686031a, 1056123->0x2a3e206e, 1056124->0x20c0032, 1056125->0x2a3a206e, 1056126->0x20c0002, 1056127->0x2a43106e, 1056128->0x20c0002, 1056129->0x16802070, 1056130->0x12120025, 1056131->?, 1056132->0xa17021a, 1056133->0x3082031a, 1056134->0x2af2071, 1056135->0x52540032, 1056136->0x206e0d04, 1056137->0x451682, 1056138->0x2072030c, 1056139->0x32068e, 1056140->0x2229628, 1056141->0x107003ba, 1056142->0x22a35, 1056143->0xe78031a, 1056144->0x2a3e206e, 1056145->0x20c0032, 1056146->0x2a1354, 1056147->0x2a3d206e, 1056148->0x20c0032, 1056149->0x2a43106e, 1056150->0x20c0002, 1056151->0x16812070, 1056152->0x290025, 1056153->0x100ff7d, 1056154->0x10004, 1056155->0x70000, 1056156->0x70000, 1056157->0x270000, 1056158->0x310000, 1056159->0x70000, 1056160->0x10007, 1056161->0x75b0000, 1056162->0x10001d, 1056163->0x10700000, 1056164->0x29e1, 1056165->0xd130159, 1056166->0xd110259, 1056167->0xd120359, 1056168->0xd10045b, 1056169->0xd0f0559, 1056170->0xd0e0659, 1056171->0x5000e, 1056172->0x10005, 1056173->0x7740000, 1056174->0xc001d, 1056175->0x15b0000, 1056176->0x10700d17, 1056177->0x29e1, 1056178->0xd140259, 1056179->0xd150359, 1056180->0xd16045b, 1056181->0x3000e, 1056182->0x20001, 1056183->0x7840000, 1056184->0x34001d, 1056185->0x220000, 1056186->0x107003ba, 1056187->0x2a35, 1056188->0xed5011a, 1056189->0x2a3e206e, 1056190->0xc0010, 1056191->0xd142152, 1056192->0x2a3a206e, 1056193->0xc0010, 1056194->0x68011a, 1056195->0x2a3e206e, 1056196->0xc0010, 1056197->0xd152152, 1056198->0x2a3a206e, 1056199->0xc0010, 1056200->0x69011a, 1056201->0x2a3e206e, 1056202->0xc0010, 1056203->0xd162154, 1056204->0x2a3e206e, 1056205->0xc0010, 1056206->0x3f9011a, 1056207->0x2a3e206e, 1056208->0xc0010, 1056209->0x2a43106e, 1056210->0xc0000, 1056211->0x50011, 1056212->0x10002, 1056213->0x7890000, 1056214->0x28001d, 1056215->0x2120000, 1056216->0x345bf012, 1056217->0x10700d1d, 1056218->0x329e1, 1056219->0xd1c3059, 1056220->0xd1a3259, 1056221->0xd193059, 1056222->0x233012, 1056223->0x11a04a8, 1056224->0x14d0000, 1056225->0x11120200, 1056226->0x021a, 1056227->0x100024d, 1056228->0x21a2112, 1056229->0x24d0000, 1056230->0x305b0100, 1056231->0x220d18, 1056232->0x107003dc, 1056233->0x2aba, 1056234->0xd1b305b, 1056235->0x5000e, 1056236->0x20004, 1056237->0x7970000, 1056238->0x12001d, 1056239->0x10700000, 1056240->0x129e1, 1056241->0x10590012, 1056242->0x135b0d26, 1056243->0x14590d24, 1056244->0x220d26, 1056245->0x20700246, 1056246->0x101687, 1056247->0xd25105b, 1056248->0xe000e, 1056249->0x50003, 1056250->0x7a80000, 1056251->0x1fa001d, 1056252->0xa140000, 1056253->0x10400f9, 1056254->0xf70914, 1056255->0x28120104, 1056256->0x7121612, 1056257->0xd27b455, 1056258->0x150438, 1056259->0x16902070, 1056260->0x10c00cb, 1056261->0xf0138, 1056262->0x2450222, 1056263->0xd111452, 1056264->0xd121552, 1056265->0xd101654, 1056266->0x16855670, 1056267->0x230754b2, 1056268->0xc2b0311, 1056269->0x01b2, 1056270->0xd27b455, 1056271->0x1570439, 1056272->0x882041a, 1056273->0xcd5051a, 1056274->0x2a82071, 1056275->?, 1056276->0x222010a, 1056277->?, 1056278->0x206e0d24, 1056279->0xa40059, 1056280->0x1072040c, 1056281->0x429ab, 1056282->0x5470040c, 1056283->0x68b21685, 1056284->?, 1056285->0x2450222, 1056286->0xd24b454, 1056287->0x59206e, 1056288->0x40c0094, 1056289->0x29ab1072, 1056290->0x40c0004, 1056291->0x16855470, 1056292->?, 1056293->0x2450222, 1056294->0xd24b454, 1056295->0xf80514, 1056296->0x206e0104, 1056297->0x540059, 1056298->0x1072040c, 1056299->0x429ab, 1056300->0x5470040c, 1056301->0x76b21685, 1056302->0x222dc28, 1056303->?, 1056304->0x206e0d24, 1056305->0xa40059, 1056306->0x1072040c, 1056307->0x429ab, 1056308->0x5470040c, 1056309->0x68b21685, 1056310->0x222cc28, 1056311->?, 1056312->0x5140d24, 1056313->0x10400fa, 1056314->0x59206e, 1056315->0x40c0054, 1056316->0x29ab1072, 1056317->0x40c0004, 1056318->0x16855470, 1056319->?, 1056320->0x2450222, 1056321->0xd24b454, 1056322->0xfb0514, 1056323->0x206e0104, 1056324->0x540059, 1056325->0x1072040c, 1056326->0x429ab, 1056327->0x5470040c, 1056328->0x7cb21685, 1056329->0x222a628, 1056330->?, 1056331->0x5140d24, 1056332->0x10400fc, 1056333->0x59206e, 1056334->0x40c0054, 1056335->0x29ab1072, 1056336->0x40c0004, 1056337->0x16855470, 1056338->?, 1056339->0x2450222, 1056340->0xd24b454, 1056341->0xfd0514, 1056342->0x206e0104, 1056343->0x540059, 1056344->0x1072040c, 1056345->0x429ab, 1056346->0x5470040c, 1056347->0x7cb21685, 1056348->0x2228028, 1056349->?, 1056350->0x5140d24, 1056351->0x10400fe, 1056352->0x59206e, 1056353->0x40c0054, 1056354->0x29ab1072, 1056355->0x40c0004, 1056356->0x16855470, 1056357->0x297cb2, 1056358->0x222ff6d, 1056359->?, 1056360->0x5140d24, 1056361->0x10400ff, 1056362->0x59206e, 1056363->0x40c0054, 1056364->0x29ab1072, 1056365->0x40c0004, 1056366->0x16855470, 1056367->0x297cb2, 1056368->0x222ff59, 1056369->?, 1056370->0x5140d24, 1056371->0x1040100, 1056372->0x59206e, 1056373->0x40c0054, 1056374->0x29ab1072, 1056375->0x40c0004, 1056376->0x16855470, 1056377->0x297cb2, 1056378->0x222ff45, 1056379->?, 1056380->0x5140d24, 1056381->0x1040101, 1056382->0x59206e, 1056383->0x40c0054, 1056384->0x29ab1072, 1056385->0x40c0004, 1056386->0x16855470, 1056387->0x297cb2, 1056388->0x222ff31, 1056389->?, 1056390->0x5140d24, 1056391->0x1040102, 1056392->0x59206e, 1056393->0x40c0054, 1056394->0x29ab1072, 1056395->0x40c0004, 1056396->0x16855470, 1056397->0x297cb2, 1056398->0x222ff1d, 1056399->?, 1056400->0x5140d24, 1056401->0x1040103, 1056402->0x59206e, 1056403->0x40c0054, 1056404->0x29ab1072, 1056405->0x40c0004, 1056406->0x16855470, 1056407->0x297cb2, 1056408->0xd2bff09, 1056409->0x00b8, 1056410->0x2450222, 1056411->?, 1056412->0xcd8061a, 1056413->0x16855670, 1056414->0x2954b2, 1056415->0x222fefb, 1056416->?, 1056417->0x206e0d24, 1056418->0x940059, 1056419->0x1072040c, 1056420->0x429ab, 1056421->0x5470040c, 1056422->0x77b21685, 1056423->?, 1056424->0x2450222, 1056425->0xd24b454, 1056426->0xf80514, 1056427->0x206e0104, 1056428->0x540059, 1056429->0x1072040c, 1056430->0x429ab, 1056431->0x5470040c, 1056432->0x76b21685, 1056433->?, 1056434->0x2450222, 1056435->0xd24b454, 1056436->0x59206e, 1056437->0x40c00a4, 1056438->0x29ab1072, 1056439->0x40c0004, 1056440->0x16855470, 1056441->0x2968b2, 1056442->0x2070fec5, 1056443->0xcb1690, 1056444->0x2070010c, 1056445->0xdb1690, 1056446->0x139000c, 1056447->0x390040, 1056448->0x41a0031, 1056449->0x5220882, 1056450->0x107003ba, 1056451->0x52a35, 1056452->0xcd6061a, 1056453->0x2a3e206e, 1056454->0x50c0065, 1056455->0x2a3a206e, 1056456->0x50c00d5, 1056457->0x315061a, 1056458->0x2a3e206e, 1056459->0x50c0065, 1056460->0x2a43106e, 1056461->0x50c0005, 1056462->0x2aa2071, 1056463->0x2220054, 1056464->?, 1056465->0x206e0d24, 1056466->0x940059, 1056467->0x1072040c, 1056468->0x429ab, 1056469->0x5470040c, 1056470->0x77b21685, 1056471->?, 1056472->0x2450222, 1056473->0xd110452, 1056474->0xd120552, 1056475->0xd100654, 1056476->0x16855670, 1056477->0x2954b2, 1056478->0x222fe7d, 1056479->0x14520245, 1056480->0x15520d11, 1056481->0x16540d12, 1056482->0x56700d10, 1056483->0x54b21685, 1056484->?, 1056485->0x1000000, 1056486->0x000d, 1056487->0x210000, 1056488->0x310000, 1056489->0x440000, 1056490->0x540000, 1056491->0x670000, 1056492->0x7a0000, 1056493->0x8d0000, 1056494->0xa00000, 1056495->0xb40000, 1056496->0xc80000, 1056497->0xdc0000, 1056498->0xf00000, 1056499->0x1040000, 1056500->0x1000000, 1056501->0x0003, 1056502->0xe0000, 1056503->0x1f0000, 1056504->0x330000, 1056505->0x40000, 1056506->0x20002, 1056507->0x8a40000, 1056508->0x1f001d, 1056509->0x20540000, 1056510->0x540d25, 1056511->0x10710d1b, 1056512->0x329cf, 1056513->0x206e010c, 1056514->0x102abd, 1056515->0x38000a, 1056516->0x20540011, 1056517->0x540d25, 1056518->0x10710d1b, 1056519->0x329cf, 1056520->0x206e010c, 1056521->0x102abf, 1056522->0x1f000c, 1056523->0x110244, 1056524->?, 1056525->0x10000, 1056526->0x0001, 1056527->0x8af0000, 1056528->0x1001d, 1056529->0xe0000, 1056530->0x10000, 1056531->0x0001, 1056532->0x8b50000, 1056533->0x1001d, 1056534->0xe0000, 1056535->0x150000, 1056536->0x70001, 1056537->0x8bb000a, 1056538->0x211001d, 1056539->0xd120000, 1056540->0x80f12, 1056541->0x2540014, 1056542->0x106e0d24, 1056543->0x20055, 1056544->0x21a0e0c, 1056545->0x121a0882, 1056546->0x83a24, 1056547->0x20710012, 1056548->0x202a8, 1056549->0x3891022, 1056550->0x5bf0214, 1056551->0x206e0104, 1056552->0x2e00b7, 1056553->0x8020c, 1056554->0x20700010, 1056555->0x202981, 1056556->0x4800071, 1056557->0xd0c0000, 1056558->0x80212, 1056559->0x30720010, 1056560->0x20d2d01, 1056561->0x882021a, 1056562->0x3a29121a, 1056563->0x120008, 1056564->0x2a82071, 1056565->0xf080002, 1056566->0xd390010, 1056567->0x21a0012, 1056568->0x121a0882, 1056569->0x83a28, 1056570->0x20710012, 1056571->0x202a8, 1056572->0x40214, 1056573->0x206e0111, 1056574->0x2e00bd, 1056575->0x21a0d0c, 1056576->0x20710ed6, 1056577->0x2d27b4, 1056578->0x140008, 1056579->0xd250254, 1056580->0x1213, 1056581->0x23dc131a, 1056582->0x120008, 1056583->0x130108, 1056584->0x2cfb3072, 1056585->0x120c010d, 1056586->0x29c80177, 1056587->0x120a0012, 1056588->0x120002, 1056589->0xd1c2059, 1056590->0x140008, 1056591->0xd250254, 1056592->0x1213, 1056593->0x19be131a, 1056594->0x120008, 1056595->0x130108, 1056596->0x2cfb3072, 1056597->0x120c010d, 1056598->0x29c80177, 1056599->0x120a0012, 1056600->0x120002, 1056601->0xd1a2059, 1056602->0x140008, 1056603->0xd250254, 1056604->0x1213, 1056605->0xed7131a, 1056606->0x120008, 1056607->0x130108, 1056608->0x2cfb3072, 1056609->0x120c010d, 1056610->0x29c80177, 1056611->0x120a0012, 1056612->0x120002, 1056613->0xd192059, 1056614->0x10710c12, 1056615->0xd27b5, 1056616->0x2cfd1072, 1056617->0xb0c000d, 1056618->0x790b39, 1056619->0x140008, 1056620->0xd250254, 1056621->0xd1a2252, 1056622->0x3a2c32, 1056623->0x882021a, 1056624->0x3ba1222, 1056625->0x2a350176, 1056626->0x131a0012, 1056627->0x2740edf, 1056628->0x122a3e, 1056629->0x8120c, 1056630->0x540014, 1056631->0x13080d25, 1056632->0x80000, 1056633->0x520013, 1056634->0x13020d1a, 1056635->0x2740000, 1056636->0x122a3a, 1056637->0x131a120c, 1056638->0x2740112, 1056639->0x122a3e, 1056640->0x8120c, 1056641->0x206e0012, 1056642->0xc02a3a, 1056643->0x131a120c, 1056644->0x2740337, 1056645->0x122a3e, 1056646->0x174120c, 1056647->0x122a43, 1056648->0x8120c, 1056649->0x20710012, 1056650->0x202aa, 1056651->0x882021a, 1056652->0x3a25121a, 1056653->0x120008, 1056654->0x2a82071, 1056655->0x12120002, 1056656->0x140008, 1056657->0xd27025c, 1056658->0x34d220, 1056659->0x70238, 1056660->0x340d1f, 1056661->0xbe1072, 1056662->0xf38000d, 1056663->0x106e0005, 1056664->0xf2982, 1056665->0x90d000e, 1056666->0x882021a, 1056667->0x3a26121a, 1056668->0x120008, 1056669->0x2a82071, 1056670->0xd120002, 1056671->?, 1056672->0x21a090d, 1056673->0x121a0882, 1056674->0x83a27, 1056675->0x20710012, 1056676->0x202a8, 1056677->0x290d12, 1056678->0x21aff22, 1056679->0x206e09a7, 1056680->0x2b2a08, 1056681->0x238020a, 1056682->0x2120078, 1056683->0x1158121a, 1056684->0x120008, 1056685->0x2cfb3072, 1056686->0x20c002d, 1056687->0x29c81071, 1056688->0xa0a0002, 1056689->0x121a0212, 1056690->0x809a8, 1056691->0x30720012, 1056692->0x2d2cfb, 1056693->0xa3a110c, 1056694->0x2212002a, 1056695->0x272a36, 1056696->0x140008, 1056697->0xd250254, 1056698->0xd182254, 1056699->0xa02114d, 1056700->?, 1056701->0x21a090d, 1056702->0x121a0882, 1056703->0x80ff6, 1056704->0x30710012, 1056705->0x90202ab, 1056706->0x34d220, 1056707->0x70238, 1056708->0x340d1f, 1056709->0xbe1072, 1056710->0xf38000d, 1056711->0x106effa5, 1056712->0xf2982, 1056713->0x20da028, 1056714->0x21a9e28, 1056715->0x12220882, 1056716->0x17603ba, 1056717->0x122a35, 1056718->0xee0131a, 1056719->0x2a3e0274, 1056720->0x120c0012, 1056721->0x120008, 1056722->0x2a3a206e, 1056723->0x120c00a0, 1056724->0x5f131a, 1056725->0x2a3e0274, 1056726->0x120c0012, 1056727->0x2a430174, 1056728->0x120c0012, 1056729->0x120008, 1056730->0x2aa2071, 1056731->0x290002, 1056732->0x20dff16, 1056733->0x34d020, 1056734->0x1202, 1056735->0x71238, 1056736->0x340d1f, 1056737->0xbe1072, 1056738->0xf38000d, 1056739->0x106e0005, 1056740->0xf2982, 1056741->0x21a0227, 1056742->0x206e0ed8, 1056743->0x2b2a08, 1056744->0x238020a, 1056745->0x212fefc, 1056746->0x1e9a121a, 1056747->0x120008, 1056748->0x2cfb3072, 1056749->0x20c002d, 1056750->0x29c81071, 1056751->0x30a0002, 1056752->0x121a0212, 1056753->0x81154, 1056754->0x30720012, 1056755->0x2d2cfb, 1056756->0x1071020c, 1056757->0x229c8, 1056758->0x212040a, 1056759->0x1157121a, 1056760->0x120008, 1056761->0x2cfb3072, 1056762->0x20c002d, 1056763->0x29c81071, 1056764->0x50a0002, 1056765->0x121a0212, 1056766->0x80edb, 1056767->0x30720012, 1056768->0x2d2cfb, 1056769->0x212060c, 1056770->0x9a7121a, 1056771->0x120008, 1056772->0x2cfb3072, 1056773->0x20c002d, 1056774->0x29c81071, 1056775->0x70a0002, 1056776->0x121a0212, 1056777->0x807c1, 1056778->0x30720012, 1056779->0x2d2cfb, 1056780->0x1071020c, 1056781->0x229c8, 1056782->0xcd8080a, 1056783->0x8010c, 1056784->0x2540014, 1056785->0x20540d25, 1056786->0x12080d1b, 1056787->0x10710000, 1056788->0x329cf, 1056789->0x222130c, 1056790->0x7760244, 1056791->0x21684, 1056792->0x120008, 1056793->0x130108, 1056794->0x2ac1306e, 1056795->0x290210, 1056796->0x20dfe96, 1056797->?, 1056798->?, 1056799->0xf08090d, 1056800->0x290010, 1056801->0x90dff00, 1056802->0x100f08, 1056803->?, 1056804->0xa0000, 1056805->0x170000, 1056806->0x210001, 1056807->0x130000, 1056808->0x480023, 1056809->0xa50000, 1056810->0xf8000a, 1056811->0x30000, 1056812->0x1160019, 1056813->0x2b0000, 1056814->0x144000a, 1056815->0x90000, 1056816->0x1580016, 1056817->0x30000, 1056818->0x15e0011, 1056819->0x220000, 1056820->0x190000a, 1056821->0x30000, 1056822->0x194001e, 1056823->0x6c0000, 1056824->0x207000a, 1056825->0x1fc078a, 1056826->0x28908b7, 1056827->?, 1056828->0x1038202, 1056829->0x2dc078d, 1056830->0x1038200, 1056831->0x482078d, 1056832->?, 1056833->0x78a0204, 1056834->0x8b7048c, 1056835->0x20487, 1056836->0x20001, 1056837->0x9f30000, 1056838->0xb001d, 1056839->0x220000, 1056840->0x20700246, 1056841->0x101687, 1056842->0xd25105b, 1056843->0x105c0012, 1056844->0xe0d27, 1056845->0x40000, 1056846->0x30003, 1056847->0x9fa0000, 1056848->0x7001d, 1056849->0x30700000, 1056850->0x321168d, 1056851->0x52000c, 1056852->0xf0d14, 1056853->0x40000, 1056854->0x30003, 1056855->0xa050000, 1056856->0x7001d, 1056857->0x30700000, 1056858->0x321168d, 1056859->0x52000c, 1056860->0xf0d15, 1056861->0x40000, 1056862->0x30003, 1056863->0xa100000, 1056864->0x7001d, 1056865->0x30700000, 1056866->0x321168d, 1056867->0x54000c, 1056868->0x110d16, 1056869->0x20000, 1056870->0x0001, 1056871->0xa1b0000, 1056872->0x5001d, 1056873->0x10540000, 1056874->0x520d25, 1056875->0xf0d19, 1056876->0x20000, 1056877->0x0001, 1056878->0xa210000, 1056879->0x5001d, 1056880->0x10540000, 1056881->0x520d25, 1056882->0xf0d1c, 1056883->0x20000, 1056884->0x0001, 1056885->0xa270000, 1056886->0x5001d, 1056887->0x10540000, 1056888->0x520d25, 1056889->0xf0d1a, 1056890->0x20000, 1056891->0x0001, 1056892->0xa2d0000, 1056893->0x3001d, 1056894->0x10550000, 1056895->0xf0d27, 1056896->0x20000, 1056897->0x10001, 1056898->0xa330000, 1056899->0x1a001d, 1056900->0x10520000, 1056901->0x2b0d26, 1056902->0x0010, 1056903->0x16961070, 1056904->0xe0001, 1056905->0x16951070, 1056906->?, 1056907->0x16941070, 1056908->?, 1056909->0x1000000, 1056910->0x10002, 1056911->0xb0000, 1056912->0x70000, 1056913->0x20000, 1056914->0x20002, 1056915->0xa430000, 1056916->0x4001d, 1056917->0x20700000, 1056918->0x100905, 1056919->0x1000e, 1056920->0x10001, 1056921->0xa4c0000, 1056922->0x4001d, 1056923->0x106f0000, 1056924->0x0908, 1056925->0x4000e, 1056926->0x30001, 1056927->0xa520001, 1056928->0x14001d, 1056929->0x106f0000, 1056930->0x329e4, 1056931->0x1e9e011a, 1056932->0x1e9f021a, 1056933->0x2a82071, 1056934->0xe0021, 1056935->0x11a000d, 1056936->0x21a1e9e, 1056937->0x30710ef8, 1056938->0x2102ab, 1056939->0xf028, 1056940->0x30000, 1056941->0x1010001, 1056942->0xb07be, 1056943->0x80000, 1056944->0x30002, 1056945->0xa620002, 1056946->0x43001d, 1056947->0x3220000, 1056948->0x107003ba, 1056949->0x32a35, 1056950->0x30b3041a, 1056951->0x2a3e206e, 1056952->0x30c0043, 1056953->0x2a3a206e, 1056954->0x30c0073, 1056955->0x2a43106e, 1056956->0x30c0003, 1056957->0x169c206e, 1056958->0x64540036, 1056959->0x41d0d2a, 1056960->0x1698106e, 1056961->0x33120006, 1056962->0x43e3323, 1056963->0xd2c635b, 1056964->0x3ed0222, 1056965->0x20700312, 1056966->0x322b18, 1056967->0xd296354, 1056968->0x306e1512, 1056969->0x2530179, 1056970->0x6354010c, 1056971->0x106e0d2b, 1056972->0x30bfc, 1056973->0x38000c, 1056974->0x306e0008, 1056975->0x1702515, 1056976->0x169f206e, 1056977->0x41e0026, 1056978->0xd2c6354, 1056979->0x30d0311, 1056980->0x327041e, 1056981->0x190000, 1056982->0x240000, 1056983->0x410001, 1056984->0x10000, 1056985->0x10001, 1056986->0x50040, 1056987->0x20002, 1056988->0xa900000, 1056989->0x19001d, 1056990->0x1a0000, 1056991->0x1221e9e, 1056992->0x107003ba, 1056993->0x12a35, 1056994->0x2520021a, 1056995->0x2a3e206e, 1056996->0x10c0021, 1056997->0x2a3e206e, 1056998->0x10c0041, 1056999->0x2a43106e, 1057000->0x10c0001, 1057001->0x2a82071, 1057002->0xe0010, 1057003->0x50000, 1057004->0x20002, 1057005->0xa9b0000, 1057006->0x19001d, 1057007->0x1a0000, 1057008->0x1221e9e, 1057009->0x107003ba, 1057010->0x12a35, 1057011->0x2520021a, 1057012->0x2a3e206e, 1057013->0x10c0021, 1057014->0x2a3e206e, 1057015->0x10c0041, 1057016->0x2a43106e, 1057017->0x10c0001, 1057018->0x2aa2071, 1057019->0xe0010, 1057020->0x80000, 1057021->0x30000, 1057022->0xaa60000, 1057023->0x397001d, 1057024->0x37120000, 1057025->0x15124612, 1057026->0x3122412, 1057027->0x3dc0022, 1057028->0x2aba1070, 1057029->0x690000, 1057030->0x620d58, 1057031->0x30710d58, 1057032->0x33516a3, 1057033->0x213010c, 1057034->0x1071002d, 1057035->0x229cf, 1057036->0x306e020c, 1057037->0x2102ac1, 1057038->0xd580062, 1057039->0x16a33071, 1057040->0x10c0535, 1057041->0x2e0213, 1057042->0x29cf1071, 1057043->0x20c0002, 1057044->0x2ac1306e, 1057045->0x620210, 1057046->0x30710d58, 1057047->0x43516a3, 1057048->0x213010c, 1057049->0x1071002f, 1057050->0x229cf, 1057051->0x306e020c, 1057052->0x2102ac1, 1057053->0xd580062, 1057054->0x16a33071, 1057055->0x10c0735, 1057056->0x300213, 1057057->0x29cf1071, 1057058->0x20c0002, }
        */
        throw new UnsupportedOperationException("Method not decompiled: com.android.internal.telephony.cdma.CdmaServiceStateTracker.dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[]):void");
    }

    public CdmaServiceStateTracker(CDMAPhone phone) {
        this(phone, new CellInfoCdma());
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public CdmaServiceStateTracker(CDMAPhone phone, CellInfo cellInfo) {
        super(phone, phone.mCi, cellInfo);
        boolean z;
        boolean z2;
        this.mCurrentOtaspMode = 0;
        this.mNitzUpdateSpacing = SystemProperties.getInt("ro.nitz_update_spacing", (int) NITZ_UPDATE_SPACING_DEFAULT);
        this.mNitzUpdateDiff = SystemProperties.getInt("ro.nitz_update_diff", (int) NITZ_UPDATE_DIFF_DEFAULT);
        this.mCdmaRoaming = false;
        this.mDataRoaming = false;
        this.mRoamingIndicator = 1;
        this.mDefaultRoamingIndicator = 1;
        this.mRegistrationState = -1;
        this.mCdmaForSubscriptionInfoReadyRegistrants = new RegistrantList();
        this.mNeedFixZone = false;
        this.mGotCountryCode = false;
        this.mCurPlmn = null;
        this.mHomeSystemId = null;
        this.mHomeNetworkId = null;
        this.mIsMinInfoReady = false;
        this.mIsEriTextLoaded = false;
        this.mIsSubscriptionFromRuim = false;
        this.mHbpcdUtils = null;
        this.mCurrentCarrier = null;
        this.mAutoTimeObserver = new ContentObserver(new Handler()) { // from class: com.android.internal.telephony.cdma.CdmaServiceStateTracker.1
            @Override // android.database.ContentObserver
            public void onChange(boolean selfChange) {
                CdmaServiceStateTracker.this.log("Auto time state changed");
                CdmaServiceStateTracker.this.revertToNitzTime();
            }
        };
        this.mAutoTimeZoneObserver = new ContentObserver(new Handler()) { // from class: com.android.internal.telephony.cdma.CdmaServiceStateTracker.2
            @Override // android.database.ContentObserver
            public void onChange(boolean selfChange) {
                CdmaServiceStateTracker.this.log("Auto time zone state changed");
                CdmaServiceStateTracker.this.revertToNitzTimeZone();
            }
        };
        this.mPhone = phone;
        this.mCr = phone.getContext().getContentResolver();
        this.mCellLoc = new CdmaCellLocation();
        this.mNewCellLoc = new CdmaCellLocation();
        this.mCdmaSSM = CdmaSubscriptionSourceManager.getInstance(phone.getContext(), this.mCi, this, 39, null);
        if (this.mCdmaSSM.getCdmaSubscriptionSource() == 0) {
            z = true;
        } else {
            z = false;
        }
        this.mIsSubscriptionFromRuim = z;
        this.mWakeLock = ((PowerManager) phone.getContext().getSystemService("power")).newWakeLock(1, WAKELOCK_TAG);
        this.mCi.registerForRadioStateChanged(this, 1, null);
        this.mCi.registerForVoiceNetworkStateChanged(this, 30, null);
        this.mCi.setOnNITZTime(this, 11, null);
        this.mCi.registerForCdmaPrlChanged(this, 40, null);
        phone.registerForEriFileLoaded(this, 36, null);
        this.mCi.registerForCdmaOtaProvision(this, 37, null);
        if (Settings.Global.getInt(this.mCr, "airplane_mode_on", 0) <= 0) {
            z2 = true;
        } else {
            z2 = false;
        }
        this.mDesiredPowerState = z2;
        this.mCr.registerContentObserver(Settings.Global.getUriFor("auto_time"), true, this.mAutoTimeObserver);
        this.mCr.registerContentObserver(Settings.Global.getUriFor("auto_time_zone"), true, this.mAutoTimeZoneObserver);
        setSignalStrengthDefaultValues();
        this.mHbpcdUtils = new HbpcdUtils(phone.getContext());
        phone.notifyOtaspChanged(0);
    }

    @Override // com.android.internal.telephony.ServiceStateTracker
    public void dispose() {
        checkCorrectThread();
        log("ServiceStateTracker dispose");
        this.mCi.unregisterForRadioStateChanged(this);
        this.mCi.unregisterForVoiceNetworkStateChanged(this);
        this.mCi.unregisterForCdmaOtaProvision(this);
        this.mPhone.unregisterForEriFileLoaded(this);
        unregisterForRuimEvents();
        this.mCi.unSetOnNITZTime(this);
        this.mCr.unregisterContentObserver(this.mAutoTimeObserver);
        this.mCr.unregisterContentObserver(this.mAutoTimeZoneObserver);
        this.mCdmaSSM.dispose(this);
        this.mCi.unregisterForCdmaPrlChanged(this);
        super.dispose();
    }

    protected void finalize() {
        log("CdmaServiceStateTracker finalized");
    }

    public void registerForSubscriptionInfoReady(Handler h, int what, Object obj) {
        Registrant r = new Registrant(h, what, obj);
        this.mCdmaForSubscriptionInfoReadyRegistrants.add(r);
        if (isMinInfoReady()) {
            r.notifyRegistrant();
        }
    }

    public void unregisterForSubscriptionInfoReady(Handler h) {
        this.mCdmaForSubscriptionInfoReadyRegistrants.remove(h);
    }

    private void saveCdmaSubscriptionSource(int source) {
        log("Storing cdma subscription source: " + source);
        Settings.Global.putInt(this.mPhone.getContext().getContentResolver(), "subscription_mode", source);
    }

    private void getSubscriptionInfoAndStartPollingThreads() {
        this.mCi.getCDMASubscription(obtainMessage(34));
        pollState();
    }

    @Override // com.android.internal.telephony.ServiceStateTracker, android.os.Handler
    public void handleMessage(Message msg) {
        if (!this.mPhone.mIsTheCurrentActivePhone) {
            loge("Received message " + msg + "[" + msg.what + "] while being destroyed. Ignoring.");
            return;
        }
        switch (msg.what) {
            case 1:
                if (this.mCi.getRadioState() == CommandsInterface.RadioState.RADIO_ON) {
                    handleCdmaSubscriptionSource(this.mCdmaSSM.getCdmaSubscriptionSource());
                    queueNextSignalStrengthPoll();
                }
                setPowerStateToDesired();
                pollState();
                return;
            case 2:
            case 4:
            case 6:
            case 7:
            case 8:
            case 9:
            case 13:
            case 15:
            case 16:
            case 17:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 28:
            case IccRecords.EVENT_REFRESH_OEM /* 29 */:
            case 32:
            case 33:
            case RadioNVItems.RIL_NV_MIP_PROFILE_HA_SPI /* 38 */:
            case 41:
            case 42:
            case OemCdmaTelephonyManager.OEM_RIL_RDE_Data.RDE_NV_EHRPD_ENABLED_I /* 43 */:
            case CallFailCause.CHANNEL_NOT_AVAIL /* 44 */:
            default:
                super.handleMessage(msg);
                return;
            case 3:
                if (this.mCi.getRadioState().isOn()) {
                    onSignalStrengthResult((AsyncResult) msg.obj, false);
                    queueNextSignalStrengthPoll();
                    return;
                }
                return;
            case 5:
            case SmsHeader.ELT_ID_STANDARD_WVG_OBJECT /* 24 */:
            case 25:
                handlePollStateResult(msg.what, (AsyncResult) msg.obj);
                return;
            case 10:
                this.mCi.getSignalStrength(obtainMessage(3));
                return;
            case 11:
                AsyncResult ar = (AsyncResult) msg.obj;
                setTimeFromNITZString((String) ((Object[]) ar.result)[0], ((Long) ((Object[]) ar.result)[1]).longValue());
                return;
            case 12:
                this.mDontPollSignalStrength = true;
                onSignalStrengthResult((AsyncResult) msg.obj, false);
                return;
            case 14:
                log("EVENT_POLL_STATE_NETWORK_SELECTION_MODE");
                AsyncResult ar2 = (AsyncResult) msg.obj;
                if (ar2.exception != null || ar2.result == null) {
                    log("Unable to getNetworkSelectionMode");
                    return;
                } else if (((int[]) ar2.result)[0] == 1) {
                    this.mPhone.setNetworkSelectionModeAutomatic(null);
                    return;
                } else {
                    return;
                }
            case 18:
                if (((AsyncResult) msg.obj).exception == null) {
                    this.mCi.getVoiceRegistrationState(obtainMessage(31, null));
                    return;
                }
                return;
            case 26:
                this.mCi.setPreferredNetworkType(PhoneFactory.calculatePreferredNetworkType(this.mPhone.getContext(), this.mPhone.getPhoneId()), null);
                log("Receive EVENT_RUIM_READY");
                pollState();
                if (!this.mPhone.getContext().getResources().getBoolean(17956953)) {
                    this.mCi.getNetworkSelectionMode(obtainMessage(14));
                }
                this.mPhone.prepareEri();
                return;
            case OemCdmaTelephonyManager.OEM_RIL_RDE_Data.RDE_NV_OTKSL_I /* 27 */:
                log("EVENT_RUIM_RECORDS_LOADED: what=" + msg.what);
                updatePhoneObject();
                RuimRecords ruim = (RuimRecords) this.mIccRecords;
                if (ruim != null && ruim.isProvisioned()) {
                    this.mMdn = ruim.getMdn();
                    this.mMin = ruim.getMin();
                    parseSidNid(ruim.getSid(), ruim.getNid());
                    this.mPrlVersion = ruim.getPrlVersion();
                    this.mIsMinInfoReady = true;
                    updateOtaspState();
                }
                getSubscriptionInfoAndStartPollingThreads();
                return;
            case 30:
                pollState();
                return;
            case 31:
                AsyncResult ar3 = (AsyncResult) msg.obj;
                if (ar3.exception == null) {
                    String[] states = (String[]) ar3.result;
                    int baseStationId = -1;
                    int baseStationLatitude = Integer.MAX_VALUE;
                    int baseStationLongitude = Integer.MAX_VALUE;
                    int systemId = -1;
                    int networkId = -1;
                    if (states.length > 9) {
                        try {
                            if (states[4] != null) {
                                baseStationId = Integer.parseInt(states[4]);
                            }
                            if (states[5] != null) {
                                baseStationLatitude = Integer.parseInt(states[5]);
                            }
                            if (states[6] != null) {
                                baseStationLongitude = Integer.parseInt(states[6]);
                            }
                            if (baseStationLatitude == 0 && baseStationLongitude == 0) {
                                baseStationLatitude = Integer.MAX_VALUE;
                                baseStationLongitude = Integer.MAX_VALUE;
                            }
                            if (states[8] != null) {
                                systemId = Integer.parseInt(states[8]);
                            }
                            if (states[9] != null) {
                                networkId = Integer.parseInt(states[9]);
                            }
                        } catch (NumberFormatException ex) {
                            loge("error parsing cell location data: " + ex);
                        }
                    }
                    this.mCellLoc.setCellLocationData(baseStationId, baseStationLatitude, baseStationLongitude, systemId, networkId);
                    this.mPhone.notifyLocationChanged();
                }
                disableSingleLocationUpdate();
                return;
            case 34:
                AsyncResult ar4 = (AsyncResult) msg.obj;
                if (ar4.exception == null) {
                    String[] cdmaSubscription = (String[]) ar4.result;
                    if (cdmaSubscription == null || cdmaSubscription.length < 5) {
                        log("GET_CDMA_SUBSCRIPTION: error parsing cdmaSubscription params num=" + cdmaSubscription.length);
                        return;
                    }
                    if (cdmaSubscription[0] != null) {
                        this.mMdn = cdmaSubscription[0];
                    }
                    parseSidNid(cdmaSubscription[1], cdmaSubscription[2]);
                    if (cdmaSubscription[3] != null) {
                        this.mMin = cdmaSubscription[3];
                    }
                    if (cdmaSubscription[4] != null) {
                        this.mPrlVersion = cdmaSubscription[4];
                    }
                    log("GET_CDMA_SUBSCRIPTION: MDN=" + this.mMdn);
                    this.mIsMinInfoReady = true;
                    updateOtaspState();
                    if (this.mIsSubscriptionFromRuim || this.mIccRecords == null) {
                        log("GET_CDMA_SUBSCRIPTION either mIccRecords is null  or NV type device - not setting Imsi in mIccRecords");
                        return;
                    }
                    log("GET_CDMA_SUBSCRIPTION set imsi in mIccRecords");
                    this.mIccRecords.setImsi(getImsi());
                    return;
                }
                return;
            case 35:
                updatePhoneObject();
                this.mCi.getNetworkSelectionMode(obtainMessage(14));
                getSubscriptionInfoAndStartPollingThreads();
                return;
            case 36:
                log("[CdmaServiceStateTracker] ERI file has been loaded, repolling.");
                pollState();
                return;
            case 37:
                AsyncResult ar5 = (AsyncResult) msg.obj;
                if (ar5.exception == null) {
                    int otaStatus = ((int[]) ar5.result)[0];
                    if (otaStatus == 8 || otaStatus == 10) {
                        log("EVENT_OTA_PROVISION_STATUS_CHANGE: Complete, Reload MDN");
                        this.mCi.getCDMASubscription(obtainMessage(34));
                        return;
                    }
                    return;
                }
                return;
            case 39:
                handleCdmaSubscriptionSource(this.mCdmaSSM.getCdmaSubscriptionSource());
                return;
            case 40:
                AsyncResult ar6 = (AsyncResult) msg.obj;
                if (ar6.exception == null) {
                    this.mPrlVersion = Integer.toString(((int[]) ar6.result)[0]);
                    return;
                }
                return;
            case OemCdmaTelephonyManager.OEM_RIL_RDE_Data.RDE_NV_CDMA_SO73_ENABLED_I /* 45 */:
                log("EVENT_CHANGE_IMS_STATE");
                setPowerStateToDesired();
                return;
        }
    }

    private void handleCdmaSubscriptionSource(int newSubscriptionSource) {
        log("Subscription Source : " + newSubscriptionSource);
        this.mIsSubscriptionFromRuim = newSubscriptionSource == 0;
        saveCdmaSubscriptionSource(newSubscriptionSource);
        if (!this.mIsSubscriptionFromRuim) {
            unregisterForRuimEvents();
            sendMessage(obtainMessage(35));
            return;
        }
        registerForRuimEvents();
    }

    @Override // com.android.internal.telephony.ServiceStateTracker
    protected void setPowerStateToDesired() {
        if (this.mDesiredPowerState && this.mCi.getRadioState() == CommandsInterface.RadioState.RADIO_OFF) {
            this.mCi.setRadioPower(true, null);
        } else if (!this.mDesiredPowerState && this.mCi.getRadioState().isOn()) {
            powerOffRadioSafely(this.mPhone.mDcTracker);
        } else if (this.mDeviceShuttingDown && this.mCi.getRadioState().isAvailable()) {
            this.mCi.requestShutdown(null);
        }
    }

    @Override // com.android.internal.telephony.ServiceStateTracker
    protected void updateSpnDisplay() {
        String plmn = this.mSS.getOperatorAlphaLong();
        if (getCombinedRegState() == 1) {
            plmn = Resources.getSystem().getText(17040344).toString();
            log("updateSpnDisplay: radio is on but out of service, set plmn='" + plmn + "'");
        }
        if (!TextUtils.equals(plmn, this.mCurPlmn)) {
            boolean showPlmn = plmn != null;
            log(String.format("updateSpnDisplay: changed sending intent showPlmn='%b' plmn='%s'", Boolean.valueOf(showPlmn), plmn));
            Intent intent = new Intent("android.provider.Telephony.SPN_STRINGS_UPDATED");
            intent.addFlags(536870912);
            intent.putExtra("showSpn", false);
            intent.putExtra("spn", "");
            intent.putExtra("showPlmn", showPlmn);
            intent.putExtra(Telephony.CellBroadcasts.PLMN, plmn);
            SubscriptionManager.putPhoneIdAndSubIdExtra(intent, this.mPhone.getPhoneId());
            this.mPhone.getContext().sendStickyBroadcastAsUser(intent, UserHandle.ALL);
        }
        this.mCurPlmn = plmn;
    }

    private int getCombinedRegState() {
        int regState = this.mSS.getVoiceRegState();
        int dataRegState = this.mSS.getDataRegState();
        if (regState != 1 || dataRegState != 0) {
            return regState;
        }
        log("getCombinedRegState: return STATE_IN_SERVICE as Data is in service");
        return dataRegState;
    }

    @Override // com.android.internal.telephony.ServiceStateTracker
    protected Phone getPhone() {
        return this.mPhone;
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public void handlePollStateResultMessage(int what, AsyncResult ar) {
        switch (what) {
            case 5:
                String[] states = (String[]) ar.result;
                log("handlePollStateResultMessage: EVENT_POLL_STATE_GPRS states.length=" + states.length + " states=" + states);
                int regState = 4;
                int dataRadioTechnology = 0;
                if (states.length > 0) {
                    try {
                        regState = Integer.parseInt(states[0]);
                        if (states.length >= 4 && states[3] != null) {
                            dataRadioTechnology = Integer.parseInt(states[3]);
                        }
                    } catch (NumberFormatException ex) {
                        loge("handlePollStateResultMessage: error parsing GprsRegistrationState: " + ex);
                    }
                }
                int dataRegState = regCodeToServiceState(regState);
                this.mNewSS.setDataRegState(dataRegState);
                this.mNewSS.setRilDataRadioTechnology(dataRadioTechnology);
                this.mNewSS.setDataRoaming(regCodeIsRoaming(regState));
                log("handlPollStateResultMessage: cdma setDataRegState=" + dataRegState + " regState=" + regState + " dataRadioTechnology=" + dataRadioTechnology);
                return;
            case SmsHeader.ELT_ID_STANDARD_WVG_OBJECT /* 24 */:
                String[] states2 = (String[]) ar.result;
                int registrationState = 4;
                int radioTechnology = -1;
                int baseStationId = -1;
                int baseStationLatitude = Integer.MAX_VALUE;
                int baseStationLongitude = Integer.MAX_VALUE;
                int cssIndicator = 0;
                int systemId = 0;
                int networkId = 0;
                int roamingIndicator = 1;
                int systemIsInPrl = 0;
                int defaultRoamingIndicator = 1;
                int reasonForDenial = 0;
                if (states2.length >= 14) {
                    try {
                        if (states2[0] != null) {
                            registrationState = Integer.parseInt(states2[0]);
                        }
                        if (states2[3] != null) {
                            radioTechnology = Integer.parseInt(states2[3]);
                        }
                        if (states2[4] != null) {
                            baseStationId = Integer.parseInt(states2[4]);
                        }
                        if (states2[5] != null) {
                            baseStationLatitude = Integer.parseInt(states2[5]);
                        }
                        if (states2[6] != null) {
                            baseStationLongitude = Integer.parseInt(states2[6]);
                        }
                        if (baseStationLatitude == 0 && baseStationLongitude == 0) {
                            baseStationLatitude = Integer.MAX_VALUE;
                            baseStationLongitude = Integer.MAX_VALUE;
                        }
                        if (states2[7] != null) {
                            cssIndicator = Integer.parseInt(states2[7]);
                        }
                        if (states2[8] != null) {
                            systemId = Integer.parseInt(states2[8]);
                        }
                        if (states2[9] != null) {
                            networkId = Integer.parseInt(states2[9]);
                        }
                        if (states2[10] != null) {
                            roamingIndicator = Integer.parseInt(states2[10]);
                        }
                        if (states2[11] != null) {
                            systemIsInPrl = Integer.parseInt(states2[11]);
                        }
                        if (states2[12] != null) {
                            defaultRoamingIndicator = Integer.parseInt(states2[12]);
                        }
                        if (states2[13] != null) {
                            reasonForDenial = Integer.parseInt(states2[13]);
                        }
                    } catch (NumberFormatException ex2) {
                        loge("EVENT_POLL_STATE_REGISTRATION_CDMA: error parsing: " + ex2);
                    }
                    this.mRegistrationState = registrationState;
                    this.mCdmaRoaming = regCodeIsRoaming(registrationState) && !isRoamIndForHomeSystem(states2[10]);
                    this.mNewSS.setVoiceRoaming(this.mCdmaRoaming);
                    this.mNewSS.setState(regCodeToServiceState(registrationState));
                    this.mNewSS.setRilVoiceRadioTechnology(radioTechnology);
                    this.mNewSS.setCssIndicator(cssIndicator);
                    this.mNewSS.setSystemAndNetworkId(systemId, networkId);
                    this.mRoamingIndicator = roamingIndicator;
                    this.mIsInPrl = systemIsInPrl != 0;
                    this.mDefaultRoamingIndicator = defaultRoamingIndicator;
                    this.mNewCellLoc.setCellLocationData(baseStationId, baseStationLatitude, baseStationLongitude, systemId, networkId);
                    if (reasonForDenial == 0) {
                        this.mRegistrationDeniedReason = "General";
                    } else if (reasonForDenial == 1) {
                        this.mRegistrationDeniedReason = "Authentication Failure";
                    } else {
                        this.mRegistrationDeniedReason = "";
                    }
                    if (this.mRegistrationState == 3) {
                        log("Registration denied, " + this.mRegistrationDeniedReason);
                        return;
                    }
                    return;
                }
                throw new RuntimeException("Warning! Wrong number of parameters returned from RIL_REQUEST_REGISTRATION_STATE: expected 14 or more strings and got " + states2.length + " strings");
            case 25:
                String[] opNames = (String[]) ar.result;
                if (opNames == null || opNames.length < 3) {
                    log("EVENT_POLL_STATE_OPERATOR_CDMA: error parsing opNames");
                    return;
                }
                if (opNames[2] == null || opNames[2].length() < 5 || "00000".equals(opNames[2])) {
                    opNames[2] = SystemProperties.get(CDMAPhone.PROPERTY_CDMA_HOME_OPERATOR_NUMERIC, "00000");
                    log("RIL_REQUEST_OPERATOR.response[2], the numeric,  is bad. Using SystemProperties 'ro.cdma.home.operator.numeric'= " + opNames[2]);
                }
                if (!this.mIsSubscriptionFromRuim) {
                    this.mNewSS.setOperatorName(opNames[0], opNames[1], opNames[2]);
                    return;
                }
                String brandOverride = this.mUiccController.getUiccCard(getPhoneId()) != null ? this.mUiccController.getUiccCard(getPhoneId()).getOperatorBrandOverride() : null;
                if (brandOverride != null) {
                    this.mNewSS.setOperatorName(brandOverride, brandOverride, opNames[2]);
                    return;
                } else {
                    this.mNewSS.setOperatorName(opNames[0], opNames[1], opNames[2]);
                    return;
                }
            default:
                loge("handlePollStateResultMessage: RIL response handle in wrong phone! Expected CDMA RIL request and get GSM RIL request.");
                return;
        }
    }

    @Override // com.android.internal.telephony.ServiceStateTracker
    protected void handlePollStateResult(int what, AsyncResult ar) {
        if (ar.userObj == this.mPollingContext) {
            if (ar.exception != null) {
                CommandException.Error err = null;
                if (ar.exception instanceof CommandException) {
                    err = ((CommandException) ar.exception).getCommandError();
                }
                if (err == CommandException.Error.RADIO_NOT_AVAILABLE) {
                    cancelPollState();
                    return;
                } else if (err != CommandException.Error.OP_NOT_ALLOWED_BEFORE_REG_NW) {
                    loge("handlePollStateResult: RIL returned an error where it must succeed" + ar.exception);
                }
            } else {
                try {
                    handlePollStateResultMessage(what, ar);
                } catch (RuntimeException ex) {
                    loge("handlePollStateResult: Exception while polling service state. Probably malformed RIL response." + ex);
                }
            }
            int[] iArr = this.mPollingContext;
            iArr[0] = iArr[0] - 1;
            if (this.mPollingContext[0] == 0) {
                boolean namMatch = false;
                if (!isSidsAllZeros() && isHomeSid(this.mNewSS.getSystemId())) {
                    namMatch = true;
                }
                this.mCdmaRoaming = (this.mCdmaRoaming || this.mDataRoaming) && !isRoamIndForHomeSystem(String.valueOf(this.mRoamingIndicator));
                if (this.mIsSubscriptionFromRuim) {
                    this.mNewSS.setVoiceRoaming(isRoamingBetweenOperators(this.mNewSS.getVoiceRoaming(), this.mNewSS));
                }
                boolean isVoiceInService = this.mNewSS.getVoiceRegState() == 0;
                int dataRegType = this.mNewSS.getRilDataRadioTechnology();
                if (isVoiceInService && ServiceState.isCdma(dataRegType)) {
                    this.mNewSS.setDataRoaming(this.mNewSS.getVoiceRoaming());
                }
                this.mNewSS.setCdmaDefaultRoamingIndicator(this.mDefaultRoamingIndicator);
                this.mNewSS.setCdmaRoamingIndicator(this.mRoamingIndicator);
                boolean isPrlLoaded = true;
                if (TextUtils.isEmpty(this.mPrlVersion)) {
                    isPrlLoaded = false;
                }
                if (!isPrlLoaded || this.mNewSS.getRilVoiceRadioTechnology() == 0) {
                    log("Turn off roaming indicator if !isPrlLoaded or voice RAT is unknown");
                    this.mNewSS.setCdmaRoamingIndicator(1);
                } else if (!isSidsAllZeros()) {
                    if (!namMatch && !this.mIsInPrl) {
                        this.mNewSS.setCdmaRoamingIndicator(this.mDefaultRoamingIndicator);
                    } else if (!namMatch || this.mIsInPrl) {
                        if (!namMatch && this.mIsInPrl) {
                            this.mNewSS.setCdmaRoamingIndicator(this.mRoamingIndicator);
                        } else if (this.mRoamingIndicator <= 2) {
                            this.mNewSS.setCdmaRoamingIndicator(1);
                        } else {
                            this.mNewSS.setCdmaRoamingIndicator(this.mRoamingIndicator);
                        }
                    } else if (isRatLte(this.mNewSS.getRilVoiceRadioTechnology())) {
                        log("Turn off roaming indicator as voice is LTE");
                        this.mNewSS.setCdmaRoamingIndicator(1);
                    } else {
                        this.mNewSS.setCdmaRoamingIndicator(2);
                    }
                }
                int roamingIndicator = this.mNewSS.getCdmaRoamingIndicator();
                this.mNewSS.setCdmaEriIconIndex(this.mPhone.mEriManager.getCdmaEriIconIndex(roamingIndicator, this.mDefaultRoamingIndicator));
                this.mNewSS.setCdmaEriIconMode(this.mPhone.mEriManager.getCdmaEriIconMode(roamingIndicator, this.mDefaultRoamingIndicator));
                log("Set CDMA Roaming Indicator to: " + this.mNewSS.getCdmaRoamingIndicator() + ". voiceRoaming = " + this.mNewSS.getVoiceRoaming() + ". dataRoaming = " + this.mNewSS.getDataRoaming() + ", isPrlLoaded = " + isPrlLoaded + ". namMatch = " + namMatch + " , mIsInPrl = " + this.mIsInPrl + ", mRoamingIndicator = " + this.mRoamingIndicator + ", mDefaultRoamingIndicator= " + this.mDefaultRoamingIndicator);
                pollStateDone();
            }
        }
    }

    @Override // com.android.internal.telephony.ServiceStateTracker
    protected void setRoamingType(ServiceState currentServiceState) {
        boolean isVoiceInService = currentServiceState.getVoiceRegState() == 0;
        if (isVoiceInService) {
            if (currentServiceState.getVoiceRoaming()) {
                int[] intRoamingIndicators = this.mPhone.getContext().getResources().getIntArray(17236037);
                if (intRoamingIndicators != null && intRoamingIndicators.length > 0) {
                    currentServiceState.setVoiceRoamingType(2);
                    int curRoamingIndicator = currentServiceState.getCdmaRoamingIndicator();
                    int i = 0;
                    while (true) {
                        if (i >= intRoamingIndicators.length) {
                            break;
                        } else if (curRoamingIndicator == intRoamingIndicators[i]) {
                            currentServiceState.setVoiceRoamingType(3);
                            break;
                        } else {
                            i++;
                        }
                    }
                } else if (inSameCountry(currentServiceState.getVoiceOperatorNumeric())) {
                    currentServiceState.setVoiceRoamingType(2);
                } else {
                    currentServiceState.setVoiceRoamingType(3);
                }
            } else {
                currentServiceState.setVoiceRoamingType(0);
            }
        }
        boolean isDataInService = currentServiceState.getDataRegState() == 0;
        int dataRegType = currentServiceState.getRilDataRadioTechnology();
        if (!isDataInService) {
            return;
        }
        if (!currentServiceState.getDataRoaming()) {
            currentServiceState.setDataRoamingType(0);
        } else if (ServiceState.isCdma(dataRegType)) {
            if (isVoiceInService) {
                currentServiceState.setDataRoamingType(currentServiceState.getVoiceRoamingType());
            } else {
                currentServiceState.setDataRoamingType(1);
            }
        } else if (inSameCountry(currentServiceState.getDataOperatorNumeric())) {
            currentServiceState.setDataRoamingType(2);
        } else {
            currentServiceState.setDataRoamingType(3);
        }
    }

    @Override // com.android.internal.telephony.ServiceStateTracker
    protected String getHomeOperatorNumeric() {
        return SystemProperties.get("gsm.sim.operator.numeric", SystemProperties.get(CDMAPhone.PROPERTY_CDMA_HOME_OPERATOR_NUMERIC, ""));
    }

    protected void setSignalStrengthDefaultValues() {
        this.mSignalStrength = new SignalStrength(false);
    }

    @Override // com.android.internal.telephony.ServiceStateTracker
    public void pollState() {
        this.mPollingContext = new int[1];
        this.mPollingContext[0] = 0;
        switch (this.mCi.getRadioState()) {
            case RADIO_UNAVAILABLE:
                this.mNewSS.setStateOutOfService();
                this.mNewCellLoc.setStateInvalid();
                setSignalStrengthDefaultValues();
                this.mGotCountryCode = false;
                pollStateDone();
                return;
            case RADIO_OFF:
                this.mNewSS.setStateOff();
                this.mNewCellLoc.setStateInvalid();
                setSignalStrengthDefaultValues();
                this.mGotCountryCode = false;
                if (!isIwlanFeatureAvailable() || 18 != this.mSS.getRilDataRadioTechnology()) {
                    pollStateDone();
                }
                if (!isIwlanFeatureAvailable()) {
                    return;
                }
                break;
        }
        int[] iArr = this.mPollingContext;
        iArr[0] = iArr[0] + 1;
        this.mCi.getOperator(obtainMessage(25, this.mPollingContext));
        int[] iArr2 = this.mPollingContext;
        iArr2[0] = iArr2[0] + 1;
        this.mCi.getVoiceRegistrationState(obtainMessage(24, this.mPollingContext));
        int[] iArr3 = this.mPollingContext;
        iArr3[0] = iArr3[0] + 1;
        this.mCi.getDataRegistrationState(obtainMessage(5, this.mPollingContext));
    }

    protected void fixTimeZone(String isoCountryCode) {
        TimeZone zone;
        String zoneName = SystemProperties.get("persist.sys.timezone");
        log("fixTimeZone zoneName='" + zoneName + "' mZoneOffset=" + this.mZoneOffset + " mZoneDst=" + this.mZoneDst + " iso-cc='" + isoCountryCode + "' iso-cc-idx=" + Arrays.binarySearch(GMT_COUNTRY_CODES, isoCountryCode));
        if (this.mZoneOffset == 0 && !this.mZoneDst && zoneName != null && zoneName.length() > 0 && Arrays.binarySearch(GMT_COUNTRY_CODES, isoCountryCode) < 0) {
            zone = TimeZone.getDefault();
            if (this.mNeedFixZone) {
                long ctm = System.currentTimeMillis();
                long tzOffset = zone.getOffset(ctm);
                log("fixTimeZone: tzOffset=" + tzOffset + " ltod=" + TimeUtils.logTimeOfDay(ctm));
                if (getAutoTime()) {
                    long adj = ctm - tzOffset;
                    log("fixTimeZone: adj ltod=" + TimeUtils.logTimeOfDay(adj));
                    setAndBroadcastNetworkSetTime(adj);
                } else {
                    this.mSavedTime -= tzOffset;
                    log("fixTimeZone: adj mSavedTime=" + this.mSavedTime);
                }
            }
            log("fixTimeZone: using default TimeZone");
        } else if (isoCountryCode.equals("")) {
            zone = getNitzTimeZone(this.mZoneOffset, this.mZoneDst, this.mZoneTime);
            log("fixTimeZone: using NITZ TimeZone");
        } else {
            zone = TimeUtils.getTimeZone(this.mZoneOffset, this.mZoneDst, this.mZoneTime, isoCountryCode);
            log("fixTimeZone: using getTimeZone(off, dst, time, iso)");
        }
        this.mNeedFixZone = false;
        if (zone != null) {
            log("fixTimeZone: zone != null zone.getID=" + zone.getID());
            if (getAutoTimeZone()) {
                setAndBroadcastNetworkSetTimeZone(zone.getID());
            } else {
                log("fixTimeZone: skip changing zone as getAutoTimeZone was false");
            }
            saveNitzTimeZone(zone.getID());
            return;
        }
        log("fixTimeZone: zone == null, do nothing for zone");
    }

    protected void pollStateDone() {
        String eriText;
        if (this.mPhone.isMccMncMarkedAsNonRoaming(this.mNewSS.getOperatorNumeric()) || this.mPhone.isSidMarkedAsNonRoaming(this.mNewSS.getSystemId())) {
            log("pollStateDone: override - marked as non-roaming.");
            this.mNewSS.setRoaming(false);
            this.mNewSS.setCdmaEriIconIndex(1);
        } else if (this.mPhone.isMccMncMarkedAsRoaming(this.mNewSS.getOperatorNumeric()) || this.mPhone.isSidMarkedAsRoaming(this.mNewSS.getSystemId())) {
            log("pollStateDone: override - marked as roaming.");
            this.mNewSS.setRoaming(true);
            this.mNewSS.setCdmaEriIconIndex(0);
            this.mNewSS.setCdmaEriIconMode(0);
        }
        if (Build.IS_DEBUGGABLE && SystemProperties.getBoolean("telephony.test.forceRoaming", false)) {
            this.mNewSS.setVoiceRoaming(true);
            this.mNewSS.setDataRoaming(true);
        }
        useDataRegStateForDataOnlyDevices();
        resetServiceStateInIwlanMode();
        log("pollStateDone: cdma oldSS=[" + this.mSS + "] newSS=[" + this.mNewSS + "]");
        boolean hasRegistered = this.mSS.getVoiceRegState() != 0 && this.mNewSS.getVoiceRegState() == 0;
        if (this.mSS.getVoiceRegState() != 0 || this.mNewSS.getVoiceRegState() == 0) {
        }
        boolean hasCdmaDataConnectionAttached = this.mSS.getDataRegState() != 0 && this.mNewSS.getDataRegState() == 0;
        boolean hasCdmaDataConnectionDetached = this.mSS.getDataRegState() == 0 && this.mNewSS.getDataRegState() != 0;
        boolean hasCdmaDataConnectionChanged = this.mSS.getDataRegState() != this.mNewSS.getDataRegState();
        boolean hasRilVoiceRadioTechnologyChanged = this.mSS.getRilVoiceRadioTechnology() != this.mNewSS.getRilVoiceRadioTechnology();
        boolean hasRilDataRadioTechnologyChanged = this.mSS.getRilDataRadioTechnology() != this.mNewSS.getRilDataRadioTechnology();
        boolean hasChanged = !this.mNewSS.equals(this.mSS);
        boolean hasVoiceRoamingOn = !this.mSS.getVoiceRoaming() && this.mNewSS.getVoiceRoaming();
        boolean hasVoiceRoamingOff = this.mSS.getVoiceRoaming() && !this.mNewSS.getVoiceRoaming();
        boolean hasDataRoamingOn = !this.mSS.getDataRoaming() && this.mNewSS.getDataRoaming();
        boolean hasDataRoamingOff = this.mSS.getDataRoaming() && !this.mNewSS.getDataRoaming();
        boolean hasLocationChanged = !this.mNewCellLoc.equals(this.mCellLoc);
        TelephonyManager tm = (TelephonyManager) this.mPhone.getContext().getSystemService("phone");
        if (!(this.mSS.getVoiceRegState() == this.mNewSS.getVoiceRegState() && this.mSS.getDataRegState() == this.mNewSS.getDataRegState())) {
            EventLog.writeEvent((int) EventLogTags.CDMA_SERVICE_STATE_CHANGE, Integer.valueOf(this.mSS.getVoiceRegState()), Integer.valueOf(this.mSS.getDataRegState()), Integer.valueOf(this.mNewSS.getVoiceRegState()), Integer.valueOf(this.mNewSS.getDataRegState()));
        }
        ServiceState tss = this.mSS;
        this.mSS = this.mNewSS;
        this.mNewSS = tss;
        this.mNewSS.setStateOutOfService();
        CdmaCellLocation tcl = this.mCellLoc;
        this.mCellLoc = this.mNewCellLoc;
        this.mNewCellLoc = tcl;
        if (hasRilVoiceRadioTechnologyChanged) {
            updatePhoneObject();
        }
        if (hasRilDataRadioTechnologyChanged) {
            tm.setDataNetworkTypeForPhone(this.mPhone.getPhoneId(), this.mSS.getRilDataRadioTechnology());
            if (isIwlanFeatureAvailable() && 18 == this.mSS.getRilDataRadioTechnology()) {
                log("pollStateDone: IWLAN enabled");
            }
        }
        if (hasRegistered) {
            this.mNetworkAttachedRegistrants.notifyRegistrants();
        }
        if (hasChanged) {
            if (this.mCi.getRadioState().isOn() && !this.mIsSubscriptionFromRuim) {
                if (this.mSS.getVoiceRegState() == 0) {
                    eriText = this.mPhone.getCdmaEriText();
                } else {
                    eriText = this.mPhone.getContext().getText(17039620).toString();
                }
                this.mSS.setOperatorAlphaLong(eriText);
            }
            this.mPhone.setSystemProperty("gsm.operator.alpha", this.mSS.getOperatorAlphaLong());
            String prevOperatorNumeric = SystemProperties.get("gsm.operator.numeric", "");
            String operatorNumeric = this.mSS.getOperatorNumeric();
            if (isInvalidOperatorNumeric(operatorNumeric)) {
                operatorNumeric = fixUnknownMcc(operatorNumeric, this.mSS.getSystemId());
            }
            this.mPhone.setSystemProperty("gsm.operator.numeric", operatorNumeric);
            updateCarrierMccMncConfiguration(operatorNumeric, prevOperatorNumeric, this.mPhone.getContext());
            if (isInvalidOperatorNumeric(operatorNumeric)) {
                log("operatorNumeric " + operatorNumeric + "is invalid");
                this.mPhone.setSystemProperty("gsm.operator.iso-country", "");
                this.mGotCountryCode = false;
            } else {
                String isoCountryCode = "";
                operatorNumeric.substring(0, 3);
                try {
                    isoCountryCode = MccTable.countryCodeForMcc(Integer.parseInt(operatorNumeric.substring(0, 3)));
                } catch (NumberFormatException ex) {
                    loge("pollStateDone: countryCodeForMcc error" + ex);
                } catch (StringIndexOutOfBoundsException ex2) {
                    loge("pollStateDone: countryCodeForMcc error" + ex2);
                }
                this.mPhone.setSystemProperty("gsm.operator.iso-country", isoCountryCode);
                this.mGotCountryCode = true;
                setOperatorIdd(operatorNumeric);
                if (shouldFixTimeZoneNow(this.mPhone, operatorNumeric, prevOperatorNumeric, this.mNeedFixZone)) {
                    fixTimeZone(isoCountryCode);
                }
            }
            this.mPhone.setSystemProperty("gsm.operator.isroaming", (this.mSS.getVoiceRoaming() || this.mSS.getDataRoaming()) ? "true" : "false");
            updateSpnDisplay();
            setRoamingType(this.mSS);
            log("Broadcasting ServiceState : " + this.mSS);
            this.mPhone.notifyServiceStateChanged(this.mSS);
        }
        if (hasCdmaDataConnectionDetached) {
            this.mDetachedRegistrants.notifyRegistrants();
        }
        if (hasCdmaDataConnectionChanged || hasRilDataRadioTechnologyChanged) {
            notifyDataRegStateRilRadioTechnologyChanged();
            if (!isIwlanFeatureAvailable() || 18 != this.mSS.getRilDataRadioTechnology()) {
                processIwlanToWwanTransition(this.mSS);
                this.mPhone.notifyDataConnection(null);
                this.mIwlanRatAvailable = false;
            } else {
                this.mPhone.notifyDataConnection(Phone.REASON_IWLAN_AVAILABLE);
                this.mIwlanRatAvailable = true;
            }
        }
        if (hasCdmaDataConnectionAttached) {
            this.mAttachedRegistrants.notifyRegistrants();
        }
        if (hasVoiceRoamingOn) {
            this.mVoiceRoamingOnRegistrants.notifyRegistrants();
        }
        if (hasVoiceRoamingOff) {
            this.mVoiceRoamingOffRegistrants.notifyRegistrants();
        }
        if (hasDataRoamingOn) {
            this.mDataRoamingOnRegistrants.notifyRegistrants();
        }
        if (hasDataRoamingOff) {
            this.mDataRoamingOffRegistrants.notifyRegistrants();
        }
        if (hasLocationChanged) {
            this.mPhone.notifyLocationChanged();
        }
    }

    protected boolean isInvalidOperatorNumeric(String operatorNumeric) {
        return operatorNumeric == null || operatorNumeric.length() < 5 || operatorNumeric.startsWith(INVALID_MCC);
    }

    protected String fixUnknownMcc(String operatorNumeric, int sid) {
        if (sid <= 0) {
            return operatorNumeric;
        }
        boolean isNitzTimeZone = false;
        int timeZone = 0;
        if (this.mSavedTimeZone != null) {
            timeZone = TimeZone.getTimeZone(this.mSavedTimeZone).getRawOffset() / MS_PER_HOUR;
            isNitzTimeZone = true;
        } else {
            TimeZone tzone = getNitzTimeZone(this.mZoneOffset, this.mZoneDst, this.mZoneTime);
            if (tzone != null) {
                timeZone = tzone.getRawOffset() / MS_PER_HOUR;
            }
        }
        int mcc = this.mHbpcdUtils.getMcc(sid, timeZone, this.mZoneDst ? 1 : 0, isNitzTimeZone);
        if (mcc > 0) {
            operatorNumeric = Integer.toString(mcc) + DEFAULT_MNC;
        }
        return operatorNumeric;
    }

    protected void setOperatorIdd(String operatorNumeric) {
        String idd = this.mHbpcdUtils.getIddByMcc(Integer.parseInt(operatorNumeric.substring(0, 3)));
        if (idd == null || idd.isEmpty()) {
            this.mPhone.setSystemProperty("gsm.operator.idpstring", "+");
        } else {
            this.mPhone.setSystemProperty("gsm.operator.idpstring", idd);
        }
    }

    private TimeZone getNitzTimeZone(int offset, boolean dst, long when) {
        TimeZone guess = findTimeZone(offset, dst, when);
        if (guess == null) {
            guess = findTimeZone(offset, !dst, when);
        }
        log("getNitzTimeZone returning " + ((Object) (guess == null ? guess : guess.getID())));
        return guess;
    }

    private TimeZone findTimeZone(int offset, boolean dst, long when) {
        int rawOffset = offset;
        if (dst) {
            rawOffset -= MS_PER_HOUR;
        }
        String[] zones = TimeZone.getAvailableIDs(rawOffset);
        Date d = new Date(when);
        for (String zone : zones) {
            TimeZone tz = TimeZone.getTimeZone(zone);
            if (tz.getOffset(when) == offset && tz.inDaylightTime(d) == dst) {
                return tz;
            }
        }
        return null;
    }

    private void queueNextSignalStrengthPoll() {
        if (!this.mDontPollSignalStrength) {
            Message msg = obtainMessage();
            msg.what = 10;
            sendMessageDelayed(msg, 20000L);
        }
    }

    protected int radioTechnologyToDataServiceState(int code) {
        switch (code) {
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
                return 1;
            case 6:
            case 7:
            case 8:
            case 12:
            case 13:
                return 0;
            case 9:
            case 10:
            case 11:
            default:
                loge("radioTechnologyToDataServiceState: Wrong radioTechnology code.");
                return 1;
        }
    }

    protected int regCodeToServiceState(int code) {
        switch (code) {
            case 0:
            case 2:
            case 3:
            case 4:
                return 1;
            case 1:
                return 0;
            case 5:
                return 0;
            default:
                loge("regCodeToServiceState: unexpected service state " + code);
                return 1;
        }
    }

    @Override // com.android.internal.telephony.ServiceStateTracker
    public int getCurrentDataConnectionState() {
        return this.mSS.getDataRegState();
    }

    protected boolean regCodeIsRoaming(int code) {
        return 5 == code;
    }

    private boolean isRoamIndForHomeSystem(String roamInd) {
        String[] homeRoamIndicators = this.mPhone.getContext().getResources().getStringArray(17236025);
        if (homeRoamIndicators == null) {
            return false;
        }
        for (String homeRoamInd : homeRoamIndicators) {
            if (homeRoamInd.equals(roamInd)) {
                return true;
            }
        }
        return false;
    }

    private boolean isRoamingBetweenOperators(boolean cdmaRoaming, ServiceState s) {
        boolean equalsOnsl;
        boolean equalsOnss;
        String spn = getSystemProperty("gsm.sim.operator.alpha", "empty");
        String onsl = s.getVoiceOperatorAlphaLong();
        String onss = s.getVoiceOperatorAlphaShort();
        if (onsl == null || !spn.equals(onsl)) {
            equalsOnsl = false;
        } else {
            equalsOnsl = true;
        }
        if (onss == null || !spn.equals(onss)) {
            equalsOnss = false;
        } else {
            equalsOnss = true;
        }
        return cdmaRoaming && !equalsOnsl && !equalsOnss;
    }

    /* JADX WARN: Code restructure failed: missing block: B:31:0x018a, code lost:
        if (r38.mZoneDst != (r8 != 0)) goto L_0x018c;
     */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
        To view partially-correct code enable 'Show inconsistent code' option in preferences
    */
    private void setTimeFromNITZString(java.lang.String r39, long r40) {
        /*
            Method dump skipped, instructions count: 1366
            To view this dump change 'Code comments level' option to 'DEBUG'
        */
        throw new UnsupportedOperationException("Method not decompiled: com.android.internal.telephony.cdma.CdmaServiceStateTracker.setTimeFromNITZString(java.lang.String, long):void");
    }

    private boolean getAutoTime() {
        try {
            return Settings.Global.getInt(this.mCr, "auto_time") > 0;
        } catch (Settings.SettingNotFoundException e) {
            return true;
        }
    }

    private boolean getAutoTimeZone() {
        try {
            return Settings.Global.getInt(this.mCr, "auto_time_zone") > 0;
        } catch (Settings.SettingNotFoundException e) {
            return true;
        }
    }

    private void saveNitzTimeZone(String zoneId) {
        this.mSavedTimeZone = zoneId;
    }

    private void setAndBroadcastNetworkSetTimeZone(String zoneId) {
        log("setAndBroadcastNetworkSetTimeZone: setTimeZone=" + zoneId);
        ((AlarmManager) this.mPhone.getContext().getSystemService("alarm")).setTimeZone(zoneId);
        Intent intent = new Intent("android.intent.action.NETWORK_SET_TIMEZONE");
        intent.addFlags(536870912);
        intent.putExtra("time-zone", zoneId);
        this.mPhone.getContext().sendStickyBroadcastAsUser(intent, UserHandle.ALL);
    }

    private void setAndBroadcastNetworkSetTime(long time) {
        log("setAndBroadcastNetworkSetTime: time=" + time + "ms");
        SystemClock.setCurrentTimeMillis(time);
        Intent intent = new Intent("android.intent.action.NETWORK_SET_TIME");
        intent.addFlags(536870912);
        intent.putExtra("time", time);
        this.mPhone.getContext().sendStickyBroadcastAsUser(intent, UserHandle.ALL);
    }

    /* JADX INFO: Access modifiers changed from: private */
    public void revertToNitzTime() {
        if (Settings.Global.getInt(this.mCr, "auto_time", 0) != 0) {
            log("revertToNitzTime: mSavedTime=" + this.mSavedTime + " mSavedAtTime=" + this.mSavedAtTime);
            if (this.mSavedTime != 0 && this.mSavedAtTime != 0) {
                setAndBroadcastNetworkSetTime(this.mSavedTime + (SystemClock.elapsedRealtime() - this.mSavedAtTime));
            }
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public void revertToNitzTimeZone() {
        if (Settings.Global.getInt(this.mPhone.getContext().getContentResolver(), "auto_time_zone", 0) != 0) {
            log("revertToNitzTimeZone: tz='" + this.mSavedTimeZone);
            if (this.mSavedTimeZone != null) {
                setAndBroadcastNetworkSetTimeZone(this.mSavedTimeZone);
            }
        }
    }

    protected boolean isSidsAllZeros() {
        if (this.mHomeSystemId != null) {
            for (int i = 0; i < this.mHomeSystemId.length; i++) {
                if (this.mHomeSystemId[i] != 0) {
                    return false;
                }
            }
        }
        return true;
    }

    private boolean isHomeSid(int sid) {
        if (this.mHomeSystemId != null) {
            for (int i = 0; i < this.mHomeSystemId.length; i++) {
                if (sid == this.mHomeSystemId[i]) {
                    return true;
                }
            }
        }
        return false;
    }

    @Override // com.android.internal.telephony.ServiceStateTracker
    public boolean isConcurrentVoiceAndDataAllowed() {
        return false;
    }

    public String getMdnNumber() {
        return this.mMdn;
    }

    public String getCdmaMin() {
        return this.mMin;
    }

    public String getPrlVersion() {
        return this.mPrlVersion;
    }

    /* JADX INFO: Access modifiers changed from: package-private */
    public String getImsi() {
        String operatorNumeric = getSystemProperty("gsm.sim.operator.numeric", "");
        if (TextUtils.isEmpty(operatorNumeric) || getCdmaMin() == null) {
            return null;
        }
        return operatorNumeric + getCdmaMin();
    }

    public boolean isMinInfoReady() {
        return this.mIsMinInfoReady;
    }

    /* JADX INFO: Access modifiers changed from: package-private */
    public int getOtasp() {
        int provisioningState;
        if (this.mIsSubscriptionFromRuim && this.mMin == null) {
            return 2;
        }
        if (this.mMin == null || this.mMin.length() < 6) {
            log("getOtasp: bad mMin='" + this.mMin + "'");
            provisioningState = 1;
        } else if (this.mMin.equals(UNACTIVATED_MIN_VALUE) || this.mMin.substring(0, 6).equals("000000") || SystemProperties.getBoolean("test_cdma_setup", false)) {
            provisioningState = 2;
        } else {
            provisioningState = 3;
        }
        log("getOtasp: state=" + provisioningState);
        return provisioningState;
    }

    @Override // com.android.internal.telephony.ServiceStateTracker
    protected void hangupAndPowerOff() {
        this.mPhone.mCT.mRingingCall.hangupIfAlive();
        this.mPhone.mCT.mBackgroundCall.hangupIfAlive();
        this.mPhone.mCT.mForegroundCall.hangupIfAlive();
        this.mCi.setRadioPower(false, null);
    }

    protected void parseSidNid(String sidStr, String nidStr) {
        if (sidStr != null) {
            String[] sid = sidStr.split(",");
            this.mHomeSystemId = new int[sid.length];
            for (int i = 0; i < sid.length; i++) {
                try {
                    this.mHomeSystemId[i] = Integer.parseInt(sid[i]);
                } catch (NumberFormatException ex) {
                    loge("error parsing system id: " + ex);
                }
            }
        }
        log("CDMA_SUBSCRIPTION: SID=" + sidStr);
        if (nidStr != null) {
            String[] nid = nidStr.split(",");
            this.mHomeNetworkId = new int[nid.length];
            for (int i2 = 0; i2 < nid.length; i2++) {
                try {
                    this.mHomeNetworkId[i2] = Integer.parseInt(nid[i2]);
                } catch (NumberFormatException ex2) {
                    loge("CDMA_SUBSCRIPTION: error parsing network id: " + ex2);
                }
            }
        }
        log("CDMA_SUBSCRIPTION: NID=" + nidStr);
    }

    protected void updateOtaspState() {
        int otaspMode = getOtasp();
        int oldOtaspMode = this.mCurrentOtaspMode;
        this.mCurrentOtaspMode = otaspMode;
        if (this.mCdmaForSubscriptionInfoReadyRegistrants != null) {
            log("CDMA_SUBSCRIPTION: call notifyRegistrants()");
            this.mCdmaForSubscriptionInfoReadyRegistrants.notifyRegistrants();
        }
        if (oldOtaspMode != this.mCurrentOtaspMode) {
            log("CDMA_SUBSCRIPTION: call notifyOtaspChanged old otaspMode=" + oldOtaspMode + " new otaspMode=" + this.mCurrentOtaspMode);
            this.mPhone.notifyOtaspChanged(this.mCurrentOtaspMode);
        }
    }

    private void registerForRuimEvents() {
        log("registerForRuimEvents");
        if (this.mUiccApplcation != null) {
            this.mUiccApplcation.registerForReady(this, 26, null);
        }
        if (this.mIccRecords != null) {
            this.mIccRecords.registerForRecordsLoaded(this, 27, null);
        }
    }

    private void unregisterForRuimEvents() {
        log("unregisterForRuimEvents");
        if (this.mUiccApplcation != null) {
            this.mUiccApplcation.unregisterForReady(this);
        }
        if (this.mIccRecords != null) {
            this.mIccRecords.unregisterForRecordsLoaded(this);
        }
    }

    protected UiccCardApplication getUiccCardApplication() {
        return this.mUiccController.getUiccCardApplication(this.mPhone.getPhoneId(), 2);
    }

    @Override // com.android.internal.telephony.ServiceStateTracker
    protected void onUpdateIccAvailability() {
        UiccCardApplication newUiccApplication;
        if (this.mUiccController != null && this.mUiccApplcation != (newUiccApplication = getUiccCardApplication())) {
            log("Removing stale icc objects.");
            unregisterForRuimEvents();
            this.mIccRecords = null;
            this.mUiccApplcation = null;
            if (newUiccApplication != null) {
                log("New card found");
                this.mUiccApplcation = newUiccApplication;
                this.mIccRecords = this.mUiccApplcation.getIccRecords();
                if (this.mIsSubscriptionFromRuim) {
                    registerForRuimEvents();
                }
            }
        }
    }

    @Override // com.android.internal.telephony.ServiceStateTracker
    protected void log(String s) {
        Rlog.d(LOG_TAG, "[CdmaSST] " + s);
    }

    @Override // com.android.internal.telephony.ServiceStateTracker
    protected void loge(String s) {
        Rlog.e(LOG_TAG, "[CdmaSST] " + s);
    }

    @Override // com.android.internal.telephony.ServiceStateTracker
    public void setImsRegistrationState(boolean registered) {
        log("ImsRegistrationState - registered : " + registered);
        if (!this.mImsRegistrationOnOff || registered || !this.mAlarmSwitch) {
            this.mImsRegistrationOnOff = registered;
            return;
        }
        this.mImsRegistrationOnOff = registered;
        ((AlarmManager) this.mPhone.getContext().getSystemService("alarm")).cancel(this.mRadioOffIntent);
        this.mAlarmSwitch = false;
        sendMessage(obtainMessage(45));
    }
}
